2024-07-10 20:31:22 - Starting TaskmanagementApplication using Java 22.0.1 with PID 27920 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 20:31:22 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 20:31:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 20:31:22 - Finished Spring Data repository scanning in 39 ms. Found 2 JPA repository interfaces.
2024-07-10 20:31:23 - Tomcat initialized with port 8080 (http)
2024-07-10 20:31:23 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 20:31:23 - Starting service [Tomcat]
2024-07-10 20:31:23 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 20:31:23 - Initializing Spring embedded WebApplicationContext
2024-07-10 20:31:23 - Root WebApplicationContext: initialization completed in 1261 ms
2024-07-10 20:31:23 - HikariPool-1 - Starting...
2024-07-10 20:31:23 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:421e7435-1ddb-4473-b5fb-5f1dba76fc41 user=SA
2024-07-10 20:31:23 - HikariPool-1 - Start completed.
2024-07-10 20:31:23 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 20:31:23 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 20:31:23 - HHH000026: Second-level cache disabled
2024-07-10 20:31:24 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 20:31:24 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 20:31:24 - GenerationTarget encountered exception accepting command : Error executing DDL "drop table if exists user cascade " via JDBC [Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier";]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "drop table if exists user cascade " via JDBC [Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier";]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:381)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:238)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "drop table if exists [*]user cascade "; expected "identifier"; SQL statement:
drop table if exists user cascade  [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.readIdentifier(Parser.java:5533)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5493)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5522)
	at org.h2.command.Parser.parseDrop(Parser.java:2113)
	at org.h2.command.Parser.parsePrepared(Parser.java:679)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-07-10 20:31:24 - GenerationTarget encountered exception accepting command : Error executing DDL "create table user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))" via JDBC [Syntax error in SQL statement "create table [*]user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))"; expected "identifier";]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create table user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))" via JDBC [Syntax error in SQL statement "create table [*]user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))"; expected "identifier";]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:428)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:344)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "create table [*]user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))"; expected "identifier"; SQL statement:
create table user (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id)) [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.readIdentifier(Parser.java:5533)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5493)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5522)
	at org.h2.command.Parser.parseCreateTable(Parser.java:8921)
	at org.h2.command.Parser.parseCreate(Parser.java:6404)
	at org.h2.command.Parser.parsePrepared(Parser.java:666)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-07-10 20:31:24 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references user" via JDBC [Syntax error in SQL statement "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references [*]user"; expected "identifier";]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references user" via JDBC [Syntax error in SQL statement "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references [*]user"; expected "identifier";]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:305)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:251)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references [*]user"; expected "identifier"; SQL statement:
alter table if exists task add constraint FK2hsytmxysatfvt0p1992cw449 foreign key (user_id) references user [42001-224]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.getSyntaxError(DbException.java:261)
	at org.h2.command.Parser.readIdentifier(Parser.java:5533)
	at org.h2.command.Parser.readIdentifierWithSchema(Parser.java:5493)
	at org.h2.command.Parser.parseReferences(Parser.java:8849)
	at org.h2.command.Parser.parseTableConstraintIf(Parser.java:8783)
	at org.h2.command.Parser.parseAlterTable(Parser.java:8145)
	at org.h2.command.Parser.parseAlter(Parser.java:7211)
	at org.h2.command.Parser.parsePrepared(Parser.java:650)
	at org.h2.command.Parser.parse(Parser.java:592)
	at org.h2.command.Parser.parse(Parser.java:564)
	at org.h2.command.Parser.prepareCommand(Parser.java:483)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:639)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:559)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1166)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2024-07-10 20:31:24 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:31:25 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'taskController': Unsatisfied dependency expressed through field 'userService': Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder': No qualifying bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2024-07-10 20:31:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:31:25 - HHH000478: Unsuccessful: drop table if exists user cascade 
2024-07-10 20:31:25 - HikariPool-1 - Shutdown initiated...
2024-07-10 20:31:25 - HikariPool-1 - Shutdown completed.
2024-07-10 20:31:25 - Stopping service [Tomcat]
2024-07-10 20:31:25 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-10 20:31:25 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field passwordEncoder in com.example.taskmanagement.service.UserService required a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' in your configuration.

2024-07-10 20:39:25 - Starting TaskmanagementApplication using Java 22.0.1 with PID 13404 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 20:39:25 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 20:39:26 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 20:39:26 - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2024-07-10 20:39:27 - Tomcat initialized with port 8080 (http)
2024-07-10 20:39:27 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 20:39:27 - Starting service [Tomcat]
2024-07-10 20:39:27 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 20:39:27 - Initializing Spring embedded WebApplicationContext
2024-07-10 20:39:27 - Root WebApplicationContext: initialization completed in 1353 ms
2024-07-10 20:39:27 - HikariPool-1 - Starting...
2024-07-10 20:39:27 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:ed9fb44f-990f-4269-bbae-25121403ddfa user=SA
2024-07-10 20:39:27 - HikariPool-1 - Start completed.
2024-07-10 20:39:27 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 20:39:27 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 20:39:27 - HHH000026: Second-level cache disabled
2024-07-10 20:39:28 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 20:39:29 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 20:39:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:39:29 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'taskController': Unsatisfied dependency expressed through field 'userService': Error creating bean with name 'userService': Unsatisfied dependency expressed through field 'passwordEncoder': No qualifying bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2024-07-10 20:39:29 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:39:29 - HikariPool-1 - Shutdown initiated...
2024-07-10 20:39:29 - HikariPool-1 - Shutdown completed.
2024-07-10 20:39:29 - Stopping service [Tomcat]
2024-07-10 20:39:29 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-10 20:39:29 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field passwordEncoder in com.example.taskmanagement.service.UserService required a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' in your configuration.

2024-07-10 20:42:05 - Starting TaskmanagementApplication using Java 22.0.1 with PID 2336 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 20:42:05 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 20:42:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 20:42:06 - Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
2024-07-10 20:42:07 - Tomcat initialized with port 8080 (http)
2024-07-10 20:42:07 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 20:42:07 - Starting service [Tomcat]
2024-07-10 20:42:07 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 20:42:07 - Initializing Spring embedded WebApplicationContext
2024-07-10 20:42:07 - Root WebApplicationContext: initialization completed in 1272 ms
2024-07-10 20:42:07 - HikariPool-1 - Starting...
2024-07-10 20:42:07 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:e1c43a0f-c3b2-4c52-89a0-d97e25db454f user=SA
2024-07-10 20:42:07 - HikariPool-1 - Start completed.
2024-07-10 20:42:07 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 20:42:07 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 20:42:07 - HHH000026: Second-level cache disabled
2024-07-10 20:42:07 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 20:42:08 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 20:42:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 20:42:08 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 20:42:09 - 

Using generated security password: a4d888be-53d9-4acc-8d6c-9f0b01bd294f

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 20:42:09 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 20:42:09 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 20:42:09 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 20:42:09 - Started TaskmanagementApplication in 4.133 seconds (process running for 4.606)
2024-07-10 20:43:18 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 20:43:18 - Initializing Servlet 'dispatcherServlet'
2024-07-10 20:43:18 - Completed initialization in 2 ms
2024-07-10 21:05:43 - Starting TaskmanagementApplication using Java 22.0.1 with PID 12848 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:05:43 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:05:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:05:44 - Finished Spring Data repository scanning in 60 ms. Found 2 JPA repository interfaces.
2024-07-10 21:05:45 - Tomcat initialized with port 8080 (http)
2024-07-10 21:05:45 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:05:45 - Starting service [Tomcat]
2024-07-10 21:05:45 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:05:45 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:05:45 - Root WebApplicationContext: initialization completed in 1493 ms
2024-07-10 21:05:45 - HikariPool-1 - Starting...
2024-07-10 21:05:45 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:2a63f9b9-881b-4a36-b60f-4cd8c4438e2e user=SA
2024-07-10 21:05:45 - HikariPool-1 - Start completed.
2024-07-10 21:05:45 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 21:05:45 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:05:45 - HHH000026: Second-level cache disabled
2024-07-10 21:05:46 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:05:47 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:05:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:05:47 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:05:47 - 

Using generated security password: 2011d51b-17a3-422c-9100-42841bdd3613

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:05:47 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:05:48 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:05:48 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:05:48 - Started TaskmanagementApplication in 4.752 seconds (process running for 5.076)
2024-07-10 21:05:51 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 21:05:51 - Initializing Servlet 'dispatcherServlet'
2024-07-10 21:05:51 - Completed initialization in 1 ms
2024-07-10 21:22:20 - Starting TaskmanagementApplication using Java 22.0.1 with PID 18764 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:22:20 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:22:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:22:20 - Finished Spring Data repository scanning in 50 ms. Found 2 JPA repository interfaces.
2024-07-10 21:22:21 - Tomcat initialized with port 8080 (http)
2024-07-10 21:22:21 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:22:21 - Starting service [Tomcat]
2024-07-10 21:22:21 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:22:21 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:22:21 - Root WebApplicationContext: initialization completed in 1357 ms
2024-07-10 21:22:21 - HikariPool-1 - Starting...
2024-07-10 21:22:21 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:b7b254be-134e-4ebe-b022-ea72bb4891b8 user=SA
2024-07-10 21:22:21 - HikariPool-1 - Start completed.
2024-07-10 21:22:22 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 21:22:22 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:22:22 - HHH000026: Second-level cache disabled
2024-07-10 21:22:22 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:22:23 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:22:23 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:22:23 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:22:23 - 

Using generated security password: e70920ea-973f-4941-ab9f-d844fde40627

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:22:23 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:22:24 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:22:24 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:22:24 - Started TaskmanagementApplication in 4.343 seconds (process running for 4.644)
2024-07-10 21:28:32 - Starting TaskmanagementApplication using Java 22.0.1 with PID 14520 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:28:32 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:28:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:28:33 - Finished Spring Data repository scanning in 47 ms. Found 2 JPA repository interfaces.
2024-07-10 21:28:34 - Tomcat initialized with port 8080 (http)
2024-07-10 21:28:34 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:28:34 - Starting service [Tomcat]
2024-07-10 21:28:34 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:28:34 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:28:34 - Root WebApplicationContext: initialization completed in 1940 ms
2024-07-10 21:28:34 - Filter 'webMvcObservationFilter' configured for use
2024-07-10 21:28:34 - HikariPool-1 - Starting...
2024-07-10 21:28:35 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:1a02f421-6db1-41d1-ab60-ffbcb4d83b1a user=SA
2024-07-10 21:28:35 - HikariPool-1 - Start completed.
2024-07-10 21:28:35 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-10 21:28:35 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-10 21:28:35 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-10 21:28:35 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:28:35 - HHH000206: 'hibernate.properties' not found
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:28:35 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-10 21:28:35 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-10 21:28:35 - HHH000026: Second-level cache disabled
2024-07-10 21:28:35 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:28:35 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:28:35 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:28:35 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-10 21:28:35 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-10 21:28:35 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-10 21:28:35 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-10 21:28:35 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-10 21:28:35 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-10 21:28:35 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:28:35 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:28:35 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:28:35 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:28:35 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:28:35 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:28:35 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-10 21:28:35 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-10 21:28:35 - Adding type registration image -> org.hibernate.type.BasicTypeReference@6b0ba697
2024-07-10 21:28:35 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-10 21:28:35 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-10 21:28:35 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-10 21:28:35 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-10 21:28:35 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-10 21:28:35 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-10 21:28:35 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-10 21:28:35 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:28:35 - Adding type registration int -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:28:35 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:28:35 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:28:35 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:28:35 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:28:35 - Adding type registration float -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:28:35 - Adding type registration float -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:28:35 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:28:35 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:28:35 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:28:35 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:28:35 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-10 21:28:35 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-10 21:28:35 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-10 21:28:35 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-10 21:28:35 - Adding type registration character -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-10 21:28:35 - Adding type registration char -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-10 21:28:35 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-10 21:28:35 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-10 21:28:35 - Adding type registration string -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-10 21:28:35 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-10 21:28:35 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2168def
2024-07-10 21:28:35 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-10 21:28:35 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-10 21:28:35 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-10 21:28:35 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-10 21:28:35 - Adding type registration text -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-10 21:28:35 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-10 21:28:35 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-10 21:28:35 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-10 21:28:35 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-10 21:28:35 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-10 21:28:35 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-10 21:28:35 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@163df259
2024-07-10 21:28:35 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-10 21:28:35 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3c3cd13a
2024-07-10 21:28:35 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-10 21:28:35 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-10 21:28:35 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-10 21:28:35 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-10 21:28:35 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-10 21:28:35 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-10 21:28:35 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-10 21:28:35 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-10 21:28:35 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:28:35 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:28:35 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@46188a89
2024-07-10 21:28:35 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@46188a89
2024-07-10 21:28:35 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-10 21:28:35 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-10 21:28:35 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-10 21:28:35 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-10 21:28:35 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-10 21:28:35 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d180961
2024-07-10 21:28:35 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4af7ac25
2024-07-10 21:28:35 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-10 21:28:35 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-10 21:28:35 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3cf06a01
2024-07-10 21:28:35 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71ee2fff
2024-07-10 21:28:35 - Adding type registration date -> org.hibernate.type.BasicTypeReference@68f2363
2024-07-10 21:28:35 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@68f2363
2024-07-10 21:28:35 - Adding type registration time -> org.hibernate.type.BasicTypeReference@37fca349
2024-07-10 21:28:35 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@37fca349
2024-07-10 21:28:35 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@86377d5
2024-07-10 21:28:35 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@86377d5
2024-07-10 21:28:35 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@86377d5
2024-07-10 21:28:35 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@87220f1
2024-07-10 21:28:35 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@87220f1
2024-07-10 21:28:35 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@87220f1
2024-07-10 21:28:35 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@77998ea7
2024-07-10 21:28:35 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@252d8df6
2024-07-10 21:28:35 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@36638b59
2024-07-10 21:28:35 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@36638b59
2024-07-10 21:28:35 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f8f40cc
2024-07-10 21:28:35 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f8f40cc
2024-07-10 21:28:35 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f8f40cc
2024-07-10 21:28:35 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@14d81f2c
2024-07-10 21:28:35 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5dd3727c
2024-07-10 21:28:35 - Adding type registration class -> org.hibernate.type.BasicTypeReference@774013dc
2024-07-10 21:28:35 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@774013dc
2024-07-10 21:28:35 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@229cb4d8
2024-07-10 21:28:35 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@229cb4d8
2024-07-10 21:28:35 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@229cb4d8
2024-07-10 21:28:35 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@30ef32eb
2024-07-10 21:28:35 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@30ef32eb
2024-07-10 21:28:35 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@474619d9
2024-07-10 21:28:35 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@474619d9
2024-07-10 21:28:35 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@bb5f9d
2024-07-10 21:28:35 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@bb5f9d
2024-07-10 21:28:35 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@391dfe7c
2024-07-10 21:28:35 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@391dfe7c
2024-07-10 21:28:35 - Adding type registration url -> org.hibernate.type.BasicTypeReference@702cfbde
2024-07-10 21:28:35 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@702cfbde
2024-07-10 21:28:35 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7d3bcd3
2024-07-10 21:28:35 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5dce5c03
2024-07-10 21:28:35 - Adding type registration object -> org.hibernate.type.JavaObjectType@69a76b74
2024-07-10 21:28:35 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@69a76b74
2024-07-10 21:28:35 - Adding type registration null -> org.hibernate.type.NullType@153c6603
2024-07-10 21:28:35 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@24e2355c
2024-07-10 21:28:35 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@19739906
2024-07-10 21:28:35 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@65503a26
2024-07-10 21:28:35 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@13aa54f1
2024-07-10 21:28:35 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26d7cb0d
2024-07-10 21:28:35 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23e9dd78
2024-07-10 21:28:35 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@470c4229
2024-07-10 21:28:35 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6408be5
2024-07-10 21:28:35 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2fafa7b5] into BootstrapContext; was [null]
2024-07-10 21:28:35 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2fafa7b5) [was null]
2024-07-10 21:28:35 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@24dc150c] into BootstrapContext; was [null]
2024-07-10 21:28:35 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d2d4d7a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5e020dd1]
2024-07-10 21:28:35 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:28:35 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2fafa7b5]
2024-07-10 21:28:35 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2fafa7b5]
2024-07-10 21:28:35 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:28:35 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:28:35 - JDBC version : 4.2
2024-07-10 21:28:35 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-10 21:28:35 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-10 21:28:35 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-10 21:28:35 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-10 21:28:35 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-10 21:28:35 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:28:35 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:28:35 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-10 21:28:35 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:35 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:35 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:35 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@641bc9a8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1d40f597]
2024-07-10 21:28:35 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-10 21:28:35 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-10 21:28:35 - Import with entity name Task
2024-07-10 21:28:35 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-10 21:28:35 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:28:35 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:28:35 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-10 21:28:35 - building BasicValue for id
2024-07-10 21:28:35 - Skipping column re-registration: task.id
2024-07-10 21:28:35 - Building property id
2024-07-10 21:28:35 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property category with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-10 21:28:35 - building BasicValue for category
2024-07-10 21:28:35 - Skipping column re-registration: task.category
2024-07-10 21:28:35 - Building property category
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-10 21:28:35 - building BasicValue for createdAt
2024-07-10 21:28:35 - Skipping column re-registration: task.created_at
2024-07-10 21:28:35 - Building property createdAt
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property description with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-10 21:28:35 - building BasicValue for description
2024-07-10 21:28:35 - Skipping column re-registration: task.description
2024-07-10 21:28:35 - Building property description
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property priority with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-10 21:28:35 - building BasicValue for priority
2024-07-10 21:28:35 - Skipping column re-registration: task.priority
2024-07-10 21:28:35 - Building property priority
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property title with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-10 21:28:35 - building BasicValue for title
2024-07-10 21:28:35 - Skipping column re-registration: task.title
2024-07-10 21:28:35 - Building property title
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-10 21:28:35 - building BasicValue for updatedAt
2024-07-10 21:28:35 - Skipping column re-registration: task.updated_at
2024-07-10 21:28:35 - Building property updatedAt
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Building property user
2024-07-10 21:28:35 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:28:35 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-10 21:28:35 - Import with entity name User
2024-07-10 21:28:35 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-10 21:28:35 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:28:35 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:28:35 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-10 21:28:35 - building BasicValue for id
2024-07-10 21:28:35 - Skipping column re-registration: users.id
2024-07-10 21:28:35 - Building property id
2024-07-10 21:28:35 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property email with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-10 21:28:35 - building BasicValue for email
2024-07-10 21:28:35 - Skipping column re-registration: users.email
2024-07-10 21:28:35 - Building property email
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property password with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-10 21:28:35 - building BasicValue for password
2024-07-10 21:28:35 - Skipping column re-registration: users.password
2024-07-10 21:28:35 - Building property password
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:35 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:35 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:35 - Building property tasks
2024-07-10 21:28:35 - Binding column: AnnotatedColumn()
2024-07-10 21:28:35 - MetadataSourceProcessor property username with lazy=false
2024-07-10 21:28:35 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-10 21:28:35 - building BasicValue for username
2024-07-10 21:28:35 - Skipping column re-registration: users.username
2024-07-10 21:28:35 - Building property username
2024-07-10 21:28:35 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-10 21:28:35 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-10 21:28:35 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-10 21:28:35 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-10 21:28:35 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:35 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-10 21:28:35 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-10 21:28:35 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-10 21:28:35 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-10 21:28:35 - Building session factory
2024-07-10 21:28:35 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:28:35 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7272914b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@663f24e6, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.15615143019634930830, com.sun.management.jmxremote.port=60666, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=14520, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.15615143019634930830, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7e532f2d, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-10 21:28:35 - Session factory constructed with filter configurations : {}
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3055f310] under count; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149238fe] under every; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@a0bdbe2] under any; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f64f99f] under sinh; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16c1d11] under cosh; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@123d0816] under tanh; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4601a148] under pi; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e210016] under log; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : length -> character_length
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6fe337a5] under position; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@34001c5d] under overlay; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@618e7761] under trim; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@73230721] under cast; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10bcbbce] under collate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cbc3bf3] under extract; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3fdede3a] under ifnull; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2bc0603f] under pad; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2b4ba2d9] under str; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62525dd3] under format; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@18301763] under timestampadd; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@448fa659] under timestampdiff; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : dateadd -> timestampadd
2024-07-10 21:28:35 - Registering alternate key : datediff -> timestampdiff
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a6a4595] under current_date; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b1b2255] under current_time; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4965454c] under current_timestamp; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : current date -> current_date
2024-07-10 21:28:35 - Registering alternate key : current time -> current_time
2024-07-10 21:28:35 - Registering alternate key : current timestamp -> current_timestamp
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e4a4ed5] under local_date; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5644f664] under local_time; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@445f6f73] under local_datetime; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27f31d91] under offset_datetime; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : local date -> local_date
2024-07-10 21:28:35 - Registering alternate key : local time -> local_time
2024-07-10 21:28:35 - Registering alternate key : local datetime -> local_datetime
2024-07-10 21:28:35 - Registering alternate key : offset datetime -> offset_datetime
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b03c35c] under instant; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : current_instant -> instant
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6f5288c5] under sql; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5a9ef32e] under count; prior registration was org.hibernate.dialect.function.CountFunction@3055f310
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@37b5a51c] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4601a148
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e782401] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : day -> day_of_month
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5644f664
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@445f6f73
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6d8096ee] under trunc; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : truncate -> trunc
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35d8ba22] under date_trunc; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : chr -> char
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3fc051ce] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6fe337a5
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5bb37d] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : every -> bool_and
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-10 21:28:35 - Registering alternate key : any -> bool_or
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@558575fe] under format; prior registration was org.hibernate.dialect.function.FormatFunction@62525dd3
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4423692a] under listagg; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@72406594] under mode; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4e1104f4] under percentile_cont; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@76219fe] under percentile_disc; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7ea8224b] under rank; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5a010eec] under dense_rank; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@623ded82] under percent_rank; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@180e33b0] under cume_dist; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@4056cdb2] under array; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@20462820] under array_list; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@5f14590c] under array_agg; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@257d3968] under array_position; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@524dd373] under array_positions; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@3d213a2b] under array_positions_list; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27691ee8] under array_length; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@5ec3689b] under array_concat; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@45964b9e] under array_prepend; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@166a5659] under array_append; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@22ea6051] under array_contains; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@539bb233] under array_contains_nullable; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@7df23848] under array_overlaps; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@1b120d48] under array_overlaps_nullable; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73417494] under array_get; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@76ee7301] under array_set; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@4d4bac56] under array_remove; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@15aaf7b1] under array_remove_index; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a22c1ba] under array_slice; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@8ad6d29] under array_replace; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ad6aeb8] under array_trim; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@c79915a] under array_fill; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@6173863f] under array_fill_list; prior registration was null
2024-07-10 21:28:35 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@23119bc3] under array_to_string; prior registration was null
2024-07-10 21:28:35 - abs(NUMERIC arg)
2024-07-10 21:28:35 - Double acos(NUMERIC arg)
2024-07-10 21:28:35 - Boolean any(BOOLEAN predicate)
2024-07-10 21:28:35 - array( ... )
2024-07-10 21:28:35 - array_agg(arg)
2024-07-10 21:28:35 - array_append( ... )
2024-07-10 21:28:35 - array_concat( ... )
2024-07-10 21:28:35 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:28:35 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:28:35 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-10 21:28:35 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-10 21:28:35 - array_get(ARRAY array, INTEGER index)
2024-07-10 21:28:35 - Integer array_length(ARRAY array)
2024-07-10 21:28:35 - array_list( ... )
2024-07-10 21:28:35 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-10 21:28:35 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-10 21:28:35 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-10 21:28:35 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-10 21:28:35 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-10 21:28:35 - array_prepend( ... )
2024-07-10 21:28:35 - array_remove( ... )
2024-07-10 21:28:35 - array_remove_index( ... )
2024-07-10 21:28:35 - array_replace( ... )
2024-07-10 21:28:35 - array_set( ... )
2024-07-10 21:28:35 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-10 21:28:35 - String array_to_string( ... )
2024-07-10 21:28:35 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-10 21:28:35 - Integer ascii(STRING arg)
2024-07-10 21:28:35 - Double asin(NUMERIC arg)
2024-07-10 21:28:35 - Double atan(NUMERIC arg)
2024-07-10 21:28:35 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:28:35 - avg(NUMERIC arg)
2024-07-10 21:28:35 - bit_and(arg)
2024-07-10 21:28:35 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-10 21:28:35 - bit_or(arg)
2024-07-10 21:28:35 - bitand(arg0, arg1)
2024-07-10 21:28:35 - bitnot(arg)
2024-07-10 21:28:35 - bitor(arg0, arg1)
2024-07-10 21:28:35 - bitxor(arg0, arg1)
2024-07-10 21:28:35 - Boolean bool_and(BOOLEAN predicate)
2024-07-10 21:28:35 - Boolean bool_or(BOOLEAN predicate)
2024-07-10 21:28:35 - cast(arg as Type)
2024-07-10 21:28:35 - ceiling(NUMERIC arg)
2024-07-10 21:28:35 - Character char(INTEGER arg)
2024-07-10 21:28:35 - Integer character_length(STRING_OR_CLOB arg)
2024-07-10 21:28:35 - Character chr(INTEGER arg)
2024-07-10 21:28:35 - coalesce(arg0[, arg1[, ...]])
2024-07-10 21:28:35 - String collate(STRING string as COLLATION collation)
2024-07-10 21:28:35 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-10 21:28:35 - Double cos(NUMERIC arg)
2024-07-10 21:28:35 - Double cosh(NUMERIC arg)
2024-07-10 21:28:35 - Double cot(NUMERIC arg)
2024-07-10 21:28:35 - Long count([distinct ]{arg|*})
2024-07-10 21:28:35 - Double cume_dist([arg0[, ...]])
2024-07-10 21:28:35 - Date curdate()
2024-07-10 21:28:35 - Date current date
2024-07-10 21:28:35 - Time current time
2024-07-10 21:28:35 - Timestamp current timestamp
2024-07-10 21:28:35 - Date current_date
2024-07-10 21:28:35 - Instant current_instant
2024-07-10 21:28:35 - Time current_time
2024-07-10 21:28:35 - Timestamp current_timestamp
2024-07-10 21:28:35 - Time curtime()
2024-07-10 21:28:35 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-10 21:28:35 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:28:35 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:28:35 - Integer day(DATE arg)
2024-07-10 21:28:35 - Integer day_of_month(DATE arg)
2024-07-10 21:28:35 - Integer day_of_week(DATE arg)
2024-07-10 21:28:35 - Integer day_of_year(DATE arg)
2024-07-10 21:28:35 - String dayname(DATE arg)
2024-07-10 21:28:35 - Double degrees(NUMERIC arg)
2024-07-10 21:28:35 - Long dense_rank([arg0[, ...]])
2024-07-10 21:28:35 - Boolean every(BOOLEAN predicate)
2024-07-10 21:28:35 - Double exp(NUMERIC arg)
2024-07-10 21:28:35 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-10 21:28:35 - first_valueANY value
2024-07-10 21:28:35 - floor(NUMERIC arg)
2024-07-10 21:28:35 - String format(TEMPORAL datetime as STRING pattern)
2024-07-10 21:28:35 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:28:35 - Integer hour(TIME arg)
2024-07-10 21:28:35 - ifnull(arg0, arg1)
2024-07-10 21:28:35 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-10 21:28:35 - Instant instant
2024-07-10 21:28:35 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-10 21:28:35 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:28:35 - last_valueANY value
2024-07-10 21:28:35 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:28:35 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:28:35 - String left(STRING string, INTEGER length)
2024-07-10 21:28:35 - Integer length(STRING_OR_CLOB arg)
2024-07-10 21:28:35 - String listagg(STRING arg0, STRING arg1)
2024-07-10 21:28:35 - Double ln(NUMERIC arg)
2024-07-10 21:28:35 - LocalDate local date
2024-07-10 21:28:35 - LocalDateTime local datetime
2024-07-10 21:28:35 - LocalTime local time
2024-07-10 21:28:35 - LocalDate local_date
2024-07-10 21:28:35 - LocalDateTime local_datetime
2024-07-10 21:28:35 - LocalTime local_time
2024-07-10 21:28:35 - Time localtime
2024-07-10 21:28:35 - Timestamp localtimestamp
2024-07-10 21:28:35 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-10 21:28:35 - Double log(NUMERIC base, NUMERIC arg)
2024-07-10 21:28:35 - Double log10(NUMERIC arg)
2024-07-10 21:28:35 - String lower(STRING string)
2024-07-10 21:28:35 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:28:35 - String ltrim(STRING string)
2024-07-10 21:28:35 - max(COMPARABLE arg)
2024-07-10 21:28:35 - Double median(NUMERIC arg)
2024-07-10 21:28:35 - Integer microsecond(TIME arg)
2024-07-10 21:28:35 - min(COMPARABLE arg)
2024-07-10 21:28:35 - Integer minute(TIME arg)
2024-07-10 21:28:35 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-10 21:28:35 - mode()
2024-07-10 21:28:35 - Integer month(DATE arg)
2024-07-10 21:28:35 - String monthname(DATE arg)
2024-07-10 21:28:35 - Timestamp now()
2024-07-10 21:28:35 - nth_valueANY value, INTEGER nth
2024-07-10 21:28:35 - nullif(arg0, arg1)
2024-07-10 21:28:35 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-10 21:28:35 - OffsetDateTime offset datetime
2024-07-10 21:28:35 - OffsetDateTime offset_datetime
2024-07-10 21:28:35 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-10 21:28:35 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-10 21:28:35 - Double percent_rank([arg0[, ...]])
2024-07-10 21:28:35 - percentile_cont(NUMERIC arg)
2024-07-10 21:28:35 - percentile_disc(NUMERIC arg)
2024-07-10 21:28:35 - Double pi
2024-07-10 21:28:35 - Integer position(STRING pattern in STRING string)
2024-07-10 21:28:35 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:28:35 - Integer quarter(DATE arg)
2024-07-10 21:28:35 - Double radians(NUMERIC arg)
2024-07-10 21:28:35 - Double rand([INTEGER seed])
2024-07-10 21:28:35 - Long rank([arg0[, ...]])
2024-07-10 21:28:35 - String repeat(STRING string, INTEGER times)
2024-07-10 21:28:35 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-10 21:28:35 - String right(STRING string, INTEGER length)
2024-07-10 21:28:35 - round(NUMERIC number[, INTEGER places])
2024-07-10 21:28:35 - Long row_number()
2024-07-10 21:28:35 - Long rownum()
2024-07-10 21:28:35 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:28:35 - String rtrim(STRING string)
2024-07-10 21:28:35 - Integer second(TIME arg)
2024-07-10 21:28:35 - Integer sign(NUMERIC arg)
2024-07-10 21:28:35 - Double sin(NUMERIC arg)
2024-07-10 21:28:35 - Double sinh(NUMERIC arg)
2024-07-10 21:28:35 - String soundex(arg)
2024-07-10 21:28:35 - String space(INTEGER arg)
2024-07-10 21:28:35 - Object sql
2024-07-10 21:28:35 - Double sqrt(NUMERIC arg)
2024-07-10 21:28:35 - Double stddev_pop(NUMERIC arg)
2024-07-10 21:28:35 - Double stddev_samp(NUMERIC arg)
2024-07-10 21:28:35 - String str(arg)
2024-07-10 21:28:35 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-10 21:28:35 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-10 21:28:35 - sum(arg)
2024-07-10 21:28:35 - Timestamp sysdate
2024-07-10 21:28:35 - Double tan(NUMERIC arg)
2024-07-10 21:28:35 - Double tanh(NUMERIC arg)
2024-07-10 21:28:35 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:28:35 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:28:35 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-10 21:28:35 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-10 21:28:35 - trunc( ... )
2024-07-10 21:28:35 - truncate( ... )
2024-07-10 21:28:35 - String upper(STRING string)
2024-07-10 21:28:35 - Double var_pop(NUMERIC arg)
2024-07-10 21:28:35 - Double var_samp(NUMERIC arg)
2024-07-10 21:28:35 - Integer week(DATE arg)
2024-07-10 21:28:35 - Integer year(DATE arg)
2024-07-10 21:28:35 - Starting QueryInterpretationCache(2048)
2024-07-10 21:28:35 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:28:35 - Configured EntityCopyObserver strategy: disallow
2024-07-10 21:28:35 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:28:35 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:28:36 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-10 21:28:36 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:28:36 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:28:36 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-10 21:28:36 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:36 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:36 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:36 - Starting post-init callbacks
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-10 21:28:36 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:28:36 - Created new SQL alias : u1_0
2024-07-10 21:28:36 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-10 21:28:36 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-10 21:28:36 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-10 21:28:36 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-10 21:28:36 -  Version select: select id from users where id=?
2024-07-10 21:28:36 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:28:36 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-10 21:28:36 -  Delete (0): delete from users where id=?
2024-07-10 21:28:36 - Created new SQL alias : t1_0
2024-07-10 21:28:36 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-10 21:28:36 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e8bc83e] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-10 21:28:36 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-10 21:28:36 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-10 21:28:36 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-10 21:28:36 -  Version select: select id from task where id=?
2024-07-10 21:28:36 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-10 21:28:36 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-10 21:28:36 -  Delete (0): delete from task where id=?
2024-07-10 21:28:36 - Created new SQL alias : t1_0
2024-07-10 21:28:36 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@39f3285d] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-10 21:28:36 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-10 21:28:36 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6dcdc378] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-10 21:28:36 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-10 21:28:36 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-10 21:28:36 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:36 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:28:36 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@641bc9a8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@18c95fbb]
2024-07-10 21:28:36 - Checking 0 named HQL queries
2024-07-10 21:28:36 - Checking 0 named SQL queries
2024-07-10 21:28:36 - drop table if exists task cascade 
2024-07-10 21:28:36 - drop table if exists users cascade 
2024-07-10 21:28:36 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-10 21:28:36 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-10 21:28:36 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-10 21:28:36 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@125c03d3
2024-07-10 21:28:36 - Registering SessionFactory: 47c4590e-d692-4c5e-8e21-fec669738fce (<unnamed>)
2024-07-10 21:28:36 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-10 21:28:36 - Instantiated SessionFactory
2024-07-10 21:28:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:28:36 - Statistics initialized [enabled=false]
2024-07-10 21:28:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:36 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:36 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:28:36 - 

Using generated security password: 1f48672a-3abf-46ce-a2b5-86c89e2f5a10

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:28:36 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:28:37 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-10 21:28:37 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-10 21:28:37 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-10 21:28:37 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 21:28:37 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-10 21:28:37 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-10 21:28:38 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:28:38 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:28:38 - Started TaskmanagementApplication in 6.258 seconds (process running for 6.776)
2024-07-10 21:28:38 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 21:28:38 - Initializing Servlet 'dispatcherServlet'
2024-07-10 21:28:38 - Detected StandardServletMultipartResolver
2024-07-10 21:28:38 - Detected AcceptHeaderLocaleResolver
2024-07-10 21:28:38 - Detected FixedThemeResolver
2024-07-10 21:28:38 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7d4bb16b
2024-07-10 21:28:38 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4756c8f3
2024-07-10 21:28:38 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-10 21:28:38 - Completed initialization in 1 ms
2024-07-10 21:28:44 - Starting TaskmanagementApplication using Java 22.0.1 with PID 19708 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:28:44 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:28:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:28:45 - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
2024-07-10 21:28:46 - Tomcat initialized with port 8080 (http)
2024-07-10 21:28:46 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:28:46 - Starting service [Tomcat]
2024-07-10 21:28:46 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:28:46 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:28:46 - Root WebApplicationContext: initialization completed in 2090 ms
2024-07-10 21:28:46 - Filter 'webMvcObservationFilter' configured for use
2024-07-10 21:28:46 - HikariPool-1 - Starting...
2024-07-10 21:28:47 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:a2a0a7bb-4c10-4dd5-89bb-b0384a200dbd user=SA
2024-07-10 21:28:47 - HikariPool-1 - Start completed.
2024-07-10 21:28:47 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-10 21:28:47 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-10 21:28:47 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-10 21:28:47 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:28:47 - HHH000206: 'hibernate.properties' not found
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:28:47 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-10 21:28:47 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-10 21:28:47 - HHH000026: Second-level cache disabled
2024-07-10 21:28:47 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19c1f6f4
2024-07-10 21:28:47 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@19c1f6f4
2024-07-10 21:28:47 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@19c1f6f4
2024-07-10 21:28:47 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@46fa2a7e
2024-07-10 21:28:47 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@46fa2a7e
2024-07-10 21:28:47 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3d02ff64
2024-07-10 21:28:47 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3d02ff64
2024-07-10 21:28:47 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6f17dd06
2024-07-10 21:28:47 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6f17dd06
2024-07-10 21:28:47 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7977f046
2024-07-10 21:28:47 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7977f046
2024-07-10 21:28:47 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7977f046
2024-07-10 21:28:47 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6ec98ccc
2024-07-10 21:28:47 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6ec98ccc
2024-07-10 21:28:47 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6ec98ccc
2024-07-10 21:28:47 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@441aa7ae
2024-07-10 21:28:47 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@441aa7ae
2024-07-10 21:28:47 - Adding type registration image -> org.hibernate.type.BasicTypeReference@1534bdc6
2024-07-10 21:28:47 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:28:47 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:28:47 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@718ad3a6
2024-07-10 21:28:47 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@603c2dee
2024-07-10 21:28:47 - Adding type registration short -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:28:47 - Adding type registration short -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:28:47 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:28:47 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:28:47 - Adding type registration int -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:28:47 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:28:47 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:28:47 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:28:47 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:28:47 - Adding type registration float -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:28:47 - Adding type registration float -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:28:47 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:28:47 - Adding type registration double -> org.hibernate.type.BasicTypeReference@7a8b7e11
2024-07-10 21:28:47 - Adding type registration double -> org.hibernate.type.BasicTypeReference@7a8b7e11
2024-07-10 21:28:47 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7a8b7e11
2024-07-10 21:28:47 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@d229912
2024-07-10 21:28:47 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@d229912
2024-07-10 21:28:47 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@5a06eeef
2024-07-10 21:28:47 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@5a06eeef
2024-07-10 21:28:47 - Adding type registration character -> org.hibernate.type.BasicTypeReference@1c0cf193
2024-07-10 21:28:47 - Adding type registration char -> org.hibernate.type.BasicTypeReference@1c0cf193
2024-07-10 21:28:47 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1c0cf193
2024-07-10 21:28:47 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3dd66ff5
2024-07-10 21:28:47 - Adding type registration string -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:28:47 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:28:47 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@493968a9
2024-07-10 21:28:47 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:28:47 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:28:47 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:28:47 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3c65f00e
2024-07-10 21:28:47 - Adding type registration text -> org.hibernate.type.BasicTypeReference@3412a3fd
2024-07-10 21:28:47 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@36ecf9f6
2024-07-10 21:28:47 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:28:47 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:28:47 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3bda1f0
2024-07-10 21:28:47 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3bda1f0
2024-07-10 21:28:47 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2211e731
2024-07-10 21:28:47 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@73e399cc
2024-07-10 21:28:47 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@3dd591b9
2024-07-10 21:28:47 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@538905d2
2024-07-10 21:28:47 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7e8c58fd
2024-07-10 21:28:47 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@11ce9319
2024-07-10 21:28:47 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@780c0
2024-07-10 21:28:47 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@780c0
2024-07-10 21:28:47 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1b3bb287
2024-07-10 21:28:47 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1b3bb287
2024-07-10 21:28:47 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7ec5aad
2024-07-10 21:28:47 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7ec5aad
2024-07-10 21:28:47 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@625f5712
2024-07-10 21:28:47 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@625f5712
2024-07-10 21:28:47 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e62ca19
2024-07-10 21:28:47 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5e62ca19
2024-07-10 21:28:47 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@188bf4d8
2024-07-10 21:28:47 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7dd7ec56
2024-07-10 21:28:47 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6528d339
2024-07-10 21:28:47 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6528d339
2024-07-10 21:28:47 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2dd2ff87
2024-07-10 21:28:47 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a38e3d1
2024-07-10 21:28:47 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@28cf179c
2024-07-10 21:28:47 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bdda8a7
2024-07-10 21:28:47 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bdda8a7
2024-07-10 21:28:47 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3149409c
2024-07-10 21:28:47 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1c421b0f
2024-07-10 21:28:47 - Adding type registration date -> org.hibernate.type.BasicTypeReference@4ce18cec
2024-07-10 21:28:47 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4ce18cec
2024-07-10 21:28:47 - Adding type registration time -> org.hibernate.type.BasicTypeReference@2a9f8d47
2024-07-10 21:28:47 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2a9f8d47
2024-07-10 21:28:47 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@51297528
2024-07-10 21:28:47 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@51297528
2024-07-10 21:28:47 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@51297528
2024-07-10 21:28:47 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5d3f8661
2024-07-10 21:28:47 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5d3f8661
2024-07-10 21:28:47 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5d3f8661
2024-07-10 21:28:47 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1df9f7c6
2024-07-10 21:28:47 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4b5aa48b
2024-07-10 21:28:47 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@51c008fd
2024-07-10 21:28:47 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@51c008fd
2024-07-10 21:28:47 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@70ed902a
2024-07-10 21:28:47 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@70ed902a
2024-07-10 21:28:47 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@70ed902a
2024-07-10 21:28:47 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@22f80e36
2024-07-10 21:28:47 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3c98981e
2024-07-10 21:28:47 - Adding type registration class -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:28:47 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:28:47 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:28:47 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:28:47 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:28:47 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6bf54260
2024-07-10 21:28:47 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6bf54260
2024-07-10 21:28:47 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7165bde6
2024-07-10 21:28:47 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7165bde6
2024-07-10 21:28:47 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:28:47 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:28:47 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4af84a76
2024-07-10 21:28:47 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4af84a76
2024-07-10 21:28:47 - Adding type registration url -> org.hibernate.type.BasicTypeReference@b5ff70b
2024-07-10 21:28:47 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@b5ff70b
2024-07-10 21:28:47 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5709e10b
2024-07-10 21:28:47 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@114badf0
2024-07-10 21:28:47 - Adding type registration object -> org.hibernate.type.JavaObjectType@7028b5cc
2024-07-10 21:28:47 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7028b5cc
2024-07-10 21:28:47 - Adding type registration null -> org.hibernate.type.NullType@2ace1cd3
2024-07-10 21:28:47 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5e46a125
2024-07-10 21:28:47 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5831989d
2024-07-10 21:28:47 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@608f310a
2024-07-10 21:28:47 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3a7d914c
2024-07-10 21:28:47 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@515940af
2024-07-10 21:28:47 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5f8df69
2024-07-10 21:28:47 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ce6a9bd
2024-07-10 21:28:47 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4a47bc9c
2024-07-10 21:28:47 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5d15789f] into BootstrapContext; was [null]
2024-07-10 21:28:47 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5d15789f) [was null]
2024-07-10 21:28:47 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@21688427] into BootstrapContext; was [null]
2024-07-10 21:28:47 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@656c5818] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3e2578ea]
2024-07-10 21:28:47 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:28:47 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5d15789f]
2024-07-10 21:28:47 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5d15789f]
2024-07-10 21:28:47 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:28:47 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:28:47 - JDBC version : 4.2
2024-07-10 21:28:47 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-10 21:28:47 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-10 21:28:47 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-10 21:28:47 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-10 21:28:47 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-10 21:28:47 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:28:47 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:28:47 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-10 21:28:47 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:47 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:47 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:28:47 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@744f0e0b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4136b193]
2024-07-10 21:28:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-10 21:28:47 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-10 21:28:47 - Import with entity name Task
2024-07-10 21:28:47 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-10 21:28:47 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:28:47 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:28:47 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-10 21:28:47 - building BasicValue for id
2024-07-10 21:28:47 - Skipping column re-registration: task.id
2024-07-10 21:28:47 - Building property id
2024-07-10 21:28:47 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property category with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-10 21:28:47 - building BasicValue for category
2024-07-10 21:28:47 - Skipping column re-registration: task.category
2024-07-10 21:28:47 - Building property category
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-10 21:28:47 - building BasicValue for createdAt
2024-07-10 21:28:47 - Skipping column re-registration: task.created_at
2024-07-10 21:28:47 - Building property createdAt
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property description with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-10 21:28:47 - building BasicValue for description
2024-07-10 21:28:47 - Skipping column re-registration: task.description
2024-07-10 21:28:47 - Building property description
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property priority with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-10 21:28:47 - building BasicValue for priority
2024-07-10 21:28:47 - Skipping column re-registration: task.priority
2024-07-10 21:28:47 - Building property priority
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property title with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-10 21:28:47 - building BasicValue for title
2024-07-10 21:28:47 - Skipping column re-registration: task.title
2024-07-10 21:28:47 - Building property title
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-10 21:28:47 - building BasicValue for updatedAt
2024-07-10 21:28:47 - Skipping column re-registration: task.updated_at
2024-07-10 21:28:47 - Building property updatedAt
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Building property user
2024-07-10 21:28:47 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:28:47 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-10 21:28:47 - Import with entity name User
2024-07-10 21:28:47 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-10 21:28:47 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:28:47 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:28:47 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-10 21:28:47 - building BasicValue for id
2024-07-10 21:28:47 - Skipping column re-registration: users.id
2024-07-10 21:28:47 - Building property id
2024-07-10 21:28:47 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property email with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-10 21:28:47 - building BasicValue for email
2024-07-10 21:28:47 - Skipping column re-registration: users.email
2024-07-10 21:28:47 - Building property email
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property password with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-10 21:28:47 - building BasicValue for password
2024-07-10 21:28:47 - Skipping column re-registration: users.password
2024-07-10 21:28:47 - Building property password
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:47 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:28:47 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:47 - Building property tasks
2024-07-10 21:28:47 - Binding column: AnnotatedColumn()
2024-07-10 21:28:47 - MetadataSourceProcessor property username with lazy=false
2024-07-10 21:28:47 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-10 21:28:47 - building BasicValue for username
2024-07-10 21:28:47 - Skipping column re-registration: users.username
2024-07-10 21:28:47 - Building property username
2024-07-10 21:28:47 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-10 21:28:47 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-10 21:28:47 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-10 21:28:47 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-10 21:28:47 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:47 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-10 21:28:47 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-10 21:28:47 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-10 21:28:47 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-10 21:28:47 - Building session factory
2024-07-10 21:28:47 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:28:47 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3d6745ed, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@600e2000, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.6433206785057507280, com.sun.management.jmxremote.port=60666, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=19708, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.6433206785057507280, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@797ee1a9, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-10 21:28:47 - Session factory constructed with filter configurations : {}
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4e553d60] under count; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@f26cd76] under every; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@78805df3] under any; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@169d5567] under sinh; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e489957] under cosh; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@68b3de47] under tanh; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b827796] under pi; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27c827ec] under log; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : length -> character_length
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5a88849] under position; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@30a4a111] under overlay; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6bec566e] under trim; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@71ac5723] under cast; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7bb3294c] under collate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@294a3f2a] under extract; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@37a14aa1] under ifnull; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@362fd4e9] under pad; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@629cf53c] under str; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@51bc649e] under format; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3c65f2e1] under timestampadd; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@13bf5fd] under timestampdiff; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : dateadd -> timestampadd
2024-07-10 21:28:47 - Registering alternate key : datediff -> timestampdiff
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@469bd719] under current_date; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15405ba1] under current_time; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f6e3b67] under current_timestamp; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : current date -> current_date
2024-07-10 21:28:47 - Registering alternate key : current time -> current_time
2024-07-10 21:28:47 - Registering alternate key : current timestamp -> current_timestamp
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dc2c13c] under local_date; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@579ee82] under local_time; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@127320df] under local_datetime; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6c3884f5] under offset_datetime; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : local date -> local_date
2024-07-10 21:28:47 - Registering alternate key : local time -> local_time
2024-07-10 21:28:47 - Registering alternate key : local datetime -> local_datetime
2024-07-10 21:28:47 - Registering alternate key : offset datetime -> offset_datetime
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6778636f] under instant; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : current_instant -> instant
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2a317af7] under sql; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7b38db21] under count; prior registration was org.hibernate.dialect.function.CountFunction@4e553d60
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@76bdfc19] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b827796
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1248f83] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : day -> day_of_month
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@579ee82
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@127320df
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5b0d480c] under trunc; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : truncate -> trunc
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f2169e9] under date_trunc; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : chr -> char
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6689bf04] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5a88849
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b9615cb] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : every -> bool_and
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-10 21:28:47 - Registering alternate key : any -> bool_or
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1aea759d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@51bc649e
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7891742e] under listagg; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@357e7113] under mode; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8d23cd8] under percentile_cont; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5feaafb3] under percentile_disc; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7524125c] under rank; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7612f385] under dense_rank; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@330d16af] under percent_rank; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@16f15a4] under cume_dist; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@4dd425dc] under array; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@4549d616] under array_list; prior registration was null
2024-07-10 21:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@255d4d7] under array_agg; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@48a38a12] under array_position; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@5ee95d42] under array_positions; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@501b296a] under array_positions_list; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4202276] under array_length; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@458704ee] under array_concat; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@1db5de29] under array_prepend; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@64d1f549] under array_append; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@64c37088] under array_contains; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@524c3e54] under array_contains_nullable; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@11fb1691] under array_overlaps; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@1f229c40] under array_overlaps_nullable; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@41dc34c8] under array_get; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@12051d38] under array_set; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@1693d505] under array_remove; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@2f8b48c3] under array_remove_index; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2af31aba] under array_slice; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@68fc1e7f] under array_replace; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@99af41d] under array_trim; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@705eb026] under array_fill; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@8de4206] under array_fill_list; prior registration was null
2024-07-10 21:28:48 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@7369208e] under array_to_string; prior registration was null
2024-07-10 21:28:48 - abs(NUMERIC arg)
2024-07-10 21:28:48 - Double acos(NUMERIC arg)
2024-07-10 21:28:48 - Boolean any(BOOLEAN predicate)
2024-07-10 21:28:48 - array( ... )
2024-07-10 21:28:48 - array_agg(arg)
2024-07-10 21:28:48 - array_append( ... )
2024-07-10 21:28:48 - array_concat( ... )
2024-07-10 21:28:48 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:28:48 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:28:48 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-10 21:28:48 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-10 21:28:48 - array_get(ARRAY array, INTEGER index)
2024-07-10 21:28:48 - Integer array_length(ARRAY array)
2024-07-10 21:28:48 - array_list( ... )
2024-07-10 21:28:48 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-10 21:28:48 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-10 21:28:48 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-10 21:28:48 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-10 21:28:48 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-10 21:28:48 - array_prepend( ... )
2024-07-10 21:28:48 - array_remove( ... )
2024-07-10 21:28:48 - array_remove_index( ... )
2024-07-10 21:28:48 - array_replace( ... )
2024-07-10 21:28:48 - array_set( ... )
2024-07-10 21:28:48 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-10 21:28:48 - String array_to_string( ... )
2024-07-10 21:28:48 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-10 21:28:48 - Integer ascii(STRING arg)
2024-07-10 21:28:48 - Double asin(NUMERIC arg)
2024-07-10 21:28:48 - Double atan(NUMERIC arg)
2024-07-10 21:28:48 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:28:48 - avg(NUMERIC arg)
2024-07-10 21:28:48 - bit_and(arg)
2024-07-10 21:28:48 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-10 21:28:48 - bit_or(arg)
2024-07-10 21:28:48 - bitand(arg0, arg1)
2024-07-10 21:28:48 - bitnot(arg)
2024-07-10 21:28:48 - bitor(arg0, arg1)
2024-07-10 21:28:48 - bitxor(arg0, arg1)
2024-07-10 21:28:48 - Boolean bool_and(BOOLEAN predicate)
2024-07-10 21:28:48 - Boolean bool_or(BOOLEAN predicate)
2024-07-10 21:28:48 - cast(arg as Type)
2024-07-10 21:28:48 - ceiling(NUMERIC arg)
2024-07-10 21:28:48 - Character char(INTEGER arg)
2024-07-10 21:28:48 - Integer character_length(STRING_OR_CLOB arg)
2024-07-10 21:28:48 - Character chr(INTEGER arg)
2024-07-10 21:28:48 - coalesce(arg0[, arg1[, ...]])
2024-07-10 21:28:48 - String collate(STRING string as COLLATION collation)
2024-07-10 21:28:48 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-10 21:28:48 - Double cos(NUMERIC arg)
2024-07-10 21:28:48 - Double cosh(NUMERIC arg)
2024-07-10 21:28:48 - Double cot(NUMERIC arg)
2024-07-10 21:28:48 - Long count([distinct ]{arg|*})
2024-07-10 21:28:48 - Double cume_dist([arg0[, ...]])
2024-07-10 21:28:48 - Date curdate()
2024-07-10 21:28:48 - Date current date
2024-07-10 21:28:48 - Time current time
2024-07-10 21:28:48 - Timestamp current timestamp
2024-07-10 21:28:48 - Date current_date
2024-07-10 21:28:48 - Instant current_instant
2024-07-10 21:28:48 - Time current_time
2024-07-10 21:28:48 - Timestamp current_timestamp
2024-07-10 21:28:48 - Time curtime()
2024-07-10 21:28:48 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-10 21:28:48 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:28:48 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:28:48 - Integer day(DATE arg)
2024-07-10 21:28:48 - Integer day_of_month(DATE arg)
2024-07-10 21:28:48 - Integer day_of_week(DATE arg)
2024-07-10 21:28:48 - Integer day_of_year(DATE arg)
2024-07-10 21:28:48 - String dayname(DATE arg)
2024-07-10 21:28:48 - Double degrees(NUMERIC arg)
2024-07-10 21:28:48 - Long dense_rank([arg0[, ...]])
2024-07-10 21:28:48 - Boolean every(BOOLEAN predicate)
2024-07-10 21:28:48 - Double exp(NUMERIC arg)
2024-07-10 21:28:48 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-10 21:28:48 - first_valueANY value
2024-07-10 21:28:48 - floor(NUMERIC arg)
2024-07-10 21:28:48 - String format(TEMPORAL datetime as STRING pattern)
2024-07-10 21:28:48 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:28:48 - Integer hour(TIME arg)
2024-07-10 21:28:48 - ifnull(arg0, arg1)
2024-07-10 21:28:48 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-10 21:28:48 - Instant instant
2024-07-10 21:28:48 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-10 21:28:48 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:28:48 - last_valueANY value
2024-07-10 21:28:48 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:28:48 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:28:48 - String left(STRING string, INTEGER length)
2024-07-10 21:28:48 - Integer length(STRING_OR_CLOB arg)
2024-07-10 21:28:48 - String listagg(STRING arg0, STRING arg1)
2024-07-10 21:28:48 - Double ln(NUMERIC arg)
2024-07-10 21:28:48 - LocalDate local date
2024-07-10 21:28:48 - LocalDateTime local datetime
2024-07-10 21:28:48 - LocalTime local time
2024-07-10 21:28:48 - LocalDate local_date
2024-07-10 21:28:48 - LocalDateTime local_datetime
2024-07-10 21:28:48 - LocalTime local_time
2024-07-10 21:28:48 - Time localtime
2024-07-10 21:28:48 - Timestamp localtimestamp
2024-07-10 21:28:48 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-10 21:28:48 - Double log(NUMERIC base, NUMERIC arg)
2024-07-10 21:28:48 - Double log10(NUMERIC arg)
2024-07-10 21:28:48 - String lower(STRING string)
2024-07-10 21:28:48 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:28:48 - String ltrim(STRING string)
2024-07-10 21:28:48 - max(COMPARABLE arg)
2024-07-10 21:28:48 - Double median(NUMERIC arg)
2024-07-10 21:28:48 - Integer microsecond(TIME arg)
2024-07-10 21:28:48 - min(COMPARABLE arg)
2024-07-10 21:28:48 - Integer minute(TIME arg)
2024-07-10 21:28:48 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-10 21:28:48 - mode()
2024-07-10 21:28:48 - Integer month(DATE arg)
2024-07-10 21:28:48 - String monthname(DATE arg)
2024-07-10 21:28:48 - Timestamp now()
2024-07-10 21:28:48 - nth_valueANY value, INTEGER nth
2024-07-10 21:28:48 - nullif(arg0, arg1)
2024-07-10 21:28:48 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-10 21:28:48 - OffsetDateTime offset datetime
2024-07-10 21:28:48 - OffsetDateTime offset_datetime
2024-07-10 21:28:48 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-10 21:28:48 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-10 21:28:48 - Double percent_rank([arg0[, ...]])
2024-07-10 21:28:48 - percentile_cont(NUMERIC arg)
2024-07-10 21:28:48 - percentile_disc(NUMERIC arg)
2024-07-10 21:28:48 - Double pi
2024-07-10 21:28:48 - Integer position(STRING pattern in STRING string)
2024-07-10 21:28:48 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:28:48 - Integer quarter(DATE arg)
2024-07-10 21:28:48 - Double radians(NUMERIC arg)
2024-07-10 21:28:48 - Double rand([INTEGER seed])
2024-07-10 21:28:48 - Long rank([arg0[, ...]])
2024-07-10 21:28:48 - String repeat(STRING string, INTEGER times)
2024-07-10 21:28:48 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-10 21:28:48 - String right(STRING string, INTEGER length)
2024-07-10 21:28:48 - round(NUMERIC number[, INTEGER places])
2024-07-10 21:28:48 - Long row_number()
2024-07-10 21:28:48 - Long rownum()
2024-07-10 21:28:48 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:28:48 - String rtrim(STRING string)
2024-07-10 21:28:48 - Integer second(TIME arg)
2024-07-10 21:28:48 - Integer sign(NUMERIC arg)
2024-07-10 21:28:48 - Double sin(NUMERIC arg)
2024-07-10 21:28:48 - Double sinh(NUMERIC arg)
2024-07-10 21:28:48 - String soundex(arg)
2024-07-10 21:28:48 - String space(INTEGER arg)
2024-07-10 21:28:48 - Object sql
2024-07-10 21:28:48 - Double sqrt(NUMERIC arg)
2024-07-10 21:28:48 - Double stddev_pop(NUMERIC arg)
2024-07-10 21:28:48 - Double stddev_samp(NUMERIC arg)
2024-07-10 21:28:48 - String str(arg)
2024-07-10 21:28:48 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-10 21:28:48 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-10 21:28:48 - sum(arg)
2024-07-10 21:28:48 - Timestamp sysdate
2024-07-10 21:28:48 - Double tan(NUMERIC arg)
2024-07-10 21:28:48 - Double tanh(NUMERIC arg)
2024-07-10 21:28:48 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:28:48 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:28:48 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-10 21:28:48 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-10 21:28:48 - trunc( ... )
2024-07-10 21:28:48 - truncate( ... )
2024-07-10 21:28:48 - String upper(STRING string)
2024-07-10 21:28:48 - Double var_pop(NUMERIC arg)
2024-07-10 21:28:48 - Double var_samp(NUMERIC arg)
2024-07-10 21:28:48 - Integer week(DATE arg)
2024-07-10 21:28:48 - Integer year(DATE arg)
2024-07-10 21:28:48 - Starting QueryInterpretationCache(2048)
2024-07-10 21:28:48 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:28:48 - Configured EntityCopyObserver strategy: disallow
2024-07-10 21:28:48 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:28:48 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:28:48 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-10 21:28:48 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:28:48 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:28:48 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-10 21:28:48 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:48 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:48 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:48 - Starting post-init callbacks
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-10 21:28:48 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:28:48 - Created new SQL alias : u1_0
2024-07-10 21:28:48 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-10 21:28:48 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-10 21:28:48 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-10 21:28:48 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-10 21:28:48 -  Version select: select id from users where id=?
2024-07-10 21:28:48 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:28:48 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-10 21:28:48 -  Delete (0): delete from users where id=?
2024-07-10 21:28:48 - Created new SQL alias : t1_0
2024-07-10 21:28:48 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-10 21:28:48 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b18fa79] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-10 21:28:48 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-10 21:28:48 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-10 21:28:48 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-10 21:28:48 -  Version select: select id from task where id=?
2024-07-10 21:28:48 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-10 21:28:48 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-10 21:28:48 -  Delete (0): delete from task where id=?
2024-07-10 21:28:48 - Created new SQL alias : t1_0
2024-07-10 21:28:48 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7a79a5d6] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-10 21:28:48 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-10 21:28:48 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3ed3e66d] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-10 21:28:48 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-10 21:28:48 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-10 21:28:48 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:28:48 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:28:48 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@744f0e0b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@72924f19]
2024-07-10 21:28:48 - Checking 0 named HQL queries
2024-07-10 21:28:48 - Checking 0 named SQL queries
2024-07-10 21:28:48 - drop table if exists task cascade 
2024-07-10 21:28:48 - drop table if exists users cascade 
2024-07-10 21:28:48 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-10 21:28:48 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-10 21:28:48 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-10 21:28:48 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2b27d5d3
2024-07-10 21:28:48 - Registering SessionFactory: 08f6f676-7a68-4296-abc0-6e52fbf53c15 (<unnamed>)
2024-07-10 21:28:48 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-10 21:28:48 - Instantiated SessionFactory
2024-07-10 21:28:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:28:48 - Statistics initialized [enabled=false]
2024-07-10 21:28:48 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:28:49 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:28:49 - 

Using generated security password: 381a03f9-a3b8-4c13-b0d0-9cd7e0ac2ca8

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:28:49 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:28:49 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-10 21:28:49 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-10 21:28:49 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-10 21:29:25 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 21:29:25 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-10 21:29:25 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-10 21:29:25 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:29:25 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:29:25 - Started TaskmanagementApplication in 42.083 seconds (process running for 42.789)
2024-07-10 21:31:01 - Starting TaskmanagementApplication using Java 22.0.1 with PID 32860 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:31:01 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:31:02 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:31:02 - Finished Spring Data repository scanning in 45 ms. Found 2 JPA repository interfaces.
2024-07-10 21:31:03 - Tomcat initialized with port 8080 (http)
2024-07-10 21:31:03 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:31:03 - Starting service [Tomcat]
2024-07-10 21:31:03 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:31:03 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:31:03 - Root WebApplicationContext: initialization completed in 2011 ms
2024-07-10 21:31:03 - Filter 'webMvcObservationFilter' configured for use
2024-07-10 21:31:04 - HikariPool-1 - Starting...
2024-07-10 21:31:04 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:362b1504-d583-49a3-b370-d91a8480d45b user=SA
2024-07-10 21:31:04 - HikariPool-1 - Start completed.
2024-07-10 21:31:04 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-10 21:31:04 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-10 21:31:04 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-10 21:31:04 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:31:04 - HHH000206: 'hibernate.properties' not found
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:31:04 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-10 21:31:04 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-10 21:31:04 - HHH000026: Second-level cache disabled
2024-07-10 21:31:04 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:31:04 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:31:04 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@53079ae6
2024-07-10 21:31:04 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@718ad3a6
2024-07-10 21:31:04 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@718ad3a6
2024-07-10 21:31:04 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@603c2dee
2024-07-10 21:31:04 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@603c2dee
2024-07-10 21:31:04 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:31:04 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@50d666a2
2024-07-10 21:31:04 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:31:04 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:31:04 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3f6906f4
2024-07-10 21:31:04 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:31:04 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:31:04 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1859e55c
2024-07-10 21:31:04 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:31:04 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@190bf8e4
2024-07-10 21:31:04 - Adding type registration image -> org.hibernate.type.BasicTypeReference@7a8b7e11
2024-07-10 21:31:04 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@d229912
2024-07-10 21:31:04 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@d229912
2024-07-10 21:31:04 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5a06eeef
2024-07-10 21:31:04 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1c0cf193
2024-07-10 21:31:04 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3dd66ff5
2024-07-10 21:31:04 - Adding type registration short -> org.hibernate.type.BasicTypeReference@3dd66ff5
2024-07-10 21:31:04 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3dd66ff5
2024-07-10 21:31:04 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:31:04 - Adding type registration int -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:31:04 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@24258b54
2024-07-10 21:31:04 - Adding type registration long -> org.hibernate.type.BasicTypeReference@493968a9
2024-07-10 21:31:04 - Adding type registration long -> org.hibernate.type.BasicTypeReference@493968a9
2024-07-10 21:31:04 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@493968a9
2024-07-10 21:31:04 - Adding type registration float -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:31:04 - Adding type registration float -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:31:04 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@32428874
2024-07-10 21:31:04 - Adding type registration double -> org.hibernate.type.BasicTypeReference@3c65f00e
2024-07-10 21:31:04 - Adding type registration double -> org.hibernate.type.BasicTypeReference@3c65f00e
2024-07-10 21:31:04 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3c65f00e
2024-07-10 21:31:04 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3412a3fd
2024-07-10 21:31:04 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3412a3fd
2024-07-10 21:31:04 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@36ecf9f6
2024-07-10 21:31:04 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@36ecf9f6
2024-07-10 21:31:04 - Adding type registration character -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:31:04 - Adding type registration char -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:31:04 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@104bc677
2024-07-10 21:31:04 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3bda1f0
2024-07-10 21:31:04 - Adding type registration string -> org.hibernate.type.BasicTypeReference@2211e731
2024-07-10 21:31:04 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2211e731
2024-07-10 21:31:04 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@73e399cc
2024-07-10 21:31:04 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3dd591b9
2024-07-10 21:31:04 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3dd591b9
2024-07-10 21:31:04 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3dd591b9
2024-07-10 21:31:04 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@538905d2
2024-07-10 21:31:04 - Adding type registration text -> org.hibernate.type.BasicTypeReference@7e8c58fd
2024-07-10 21:31:04 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@11ce9319
2024-07-10 21:31:04 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@780c0
2024-07-10 21:31:04 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@780c0
2024-07-10 21:31:04 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b3bb287
2024-07-10 21:31:04 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b3bb287
2024-07-10 21:31:04 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7ec5aad
2024-07-10 21:31:04 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625f5712
2024-07-10 21:31:04 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5e62ca19
2024-07-10 21:31:04 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@188bf4d8
2024-07-10 21:31:04 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7dd7ec56
2024-07-10 21:31:04 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6528d339
2024-07-10 21:31:04 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@2dd2ff87
2024-07-10 21:31:04 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@2dd2ff87
2024-07-10 21:31:04 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6a38e3d1
2024-07-10 21:31:04 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6a38e3d1
2024-07-10 21:31:04 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@28cf179c
2024-07-10 21:31:04 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@28cf179c
2024-07-10 21:31:04 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@bdda8a7
2024-07-10 21:31:04 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@bdda8a7
2024-07-10 21:31:04 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3149409c
2024-07-10 21:31:04 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3149409c
2024-07-10 21:31:04 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1c421b0f
2024-07-10 21:31:04 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4ce18cec
2024-07-10 21:31:04 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a9f8d47
2024-07-10 21:31:04 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a9f8d47
2024-07-10 21:31:04 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@51297528
2024-07-10 21:31:04 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d3f8661
2024-07-10 21:31:04 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1df9f7c6
2024-07-10 21:31:04 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b5aa48b
2024-07-10 21:31:04 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4b5aa48b
2024-07-10 21:31:04 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@51c008fd
2024-07-10 21:31:04 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@70ed902a
2024-07-10 21:31:04 - Adding type registration date -> org.hibernate.type.BasicTypeReference@22f80e36
2024-07-10 21:31:04 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@22f80e36
2024-07-10 21:31:04 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3c98981e
2024-07-10 21:31:04 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3c98981e
2024-07-10 21:31:04 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:31:04 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:31:04 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6dcee890
2024-07-10 21:31:04 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:31:04 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:31:04 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@713e49c3
2024-07-10 21:31:04 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@13d5606c
2024-07-10 21:31:04 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@6bf54260
2024-07-10 21:31:04 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7165bde6
2024-07-10 21:31:04 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7165bde6
2024-07-10 21:31:04 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:31:04 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:31:04 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@72168258
2024-07-10 21:31:04 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4af84a76
2024-07-10 21:31:04 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@b5ff70b
2024-07-10 21:31:04 - Adding type registration class -> org.hibernate.type.BasicTypeReference@5709e10b
2024-07-10 21:31:04 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5709e10b
2024-07-10 21:31:04 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@114badf0
2024-07-10 21:31:04 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@114badf0
2024-07-10 21:31:04 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@114badf0
2024-07-10 21:31:04 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6d7bb5cc
2024-07-10 21:31:04 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6d7bb5cc
2024-07-10 21:31:04 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@756200d1
2024-07-10 21:31:04 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@756200d1
2024-07-10 21:31:04 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@390a07a0
2024-07-10 21:31:04 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@390a07a0
2024-07-10 21:31:04 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@674e4c82
2024-07-10 21:31:04 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@674e4c82
2024-07-10 21:31:04 - Adding type registration url -> org.hibernate.type.BasicTypeReference@572b4072
2024-07-10 21:31:04 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@572b4072
2024-07-10 21:31:04 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@322ab6ce
2024-07-10 21:31:04 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5b74902c
2024-07-10 21:31:04 - Adding type registration object -> org.hibernate.type.JavaObjectType@c1f0c7b
2024-07-10 21:31:04 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@c1f0c7b
2024-07-10 21:31:04 - Adding type registration null -> org.hibernate.type.NullType@4a47bc9c
2024-07-10 21:31:04 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5100c143
2024-07-10 21:31:04 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@12404f9d
2024-07-10 21:31:04 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3b42b729
2024-07-10 21:31:04 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4c164f81
2024-07-10 21:31:04 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1bcb8599
2024-07-10 21:31:04 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@b671dda
2024-07-10 21:31:04 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@25b20860
2024-07-10 21:31:04 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ba63110
2024-07-10 21:31:04 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29592929] into BootstrapContext; was [null]
2024-07-10 21:31:04 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29592929) [was null]
2024-07-10 21:31:04 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5c0272e0] into BootstrapContext; was [null]
2024-07-10 21:31:04 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@60c4cf2b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@774304ca]
2024-07-10 21:31:04 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:31:04 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29592929]
2024-07-10 21:31:04 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@29592929]
2024-07-10 21:31:04 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:31:04 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:31:04 - JDBC version : 4.2
2024-07-10 21:31:04 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-10 21:31:04 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-10 21:31:04 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-10 21:31:04 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-10 21:31:04 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-10 21:31:04 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:31:04 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:31:04 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-10 21:31:04 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-10 21:31:04 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:31:04 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:31:04 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5020e5ab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19f1f330]
2024-07-10 21:31:05 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-10 21:31:05 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-10 21:31:05 - Import with entity name Task
2024-07-10 21:31:05 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-10 21:31:05 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:31:05 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:31:05 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-10 21:31:05 - building BasicValue for id
2024-07-10 21:31:05 - Skipping column re-registration: task.id
2024-07-10 21:31:05 - Building property id
2024-07-10 21:31:05 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property category with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-10 21:31:05 - building BasicValue for category
2024-07-10 21:31:05 - Skipping column re-registration: task.category
2024-07-10 21:31:05 - Building property category
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-10 21:31:05 - building BasicValue for createdAt
2024-07-10 21:31:05 - Skipping column re-registration: task.created_at
2024-07-10 21:31:05 - Building property createdAt
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property description with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-10 21:31:05 - building BasicValue for description
2024-07-10 21:31:05 - Skipping column re-registration: task.description
2024-07-10 21:31:05 - Building property description
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property priority with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-10 21:31:05 - building BasicValue for priority
2024-07-10 21:31:05 - Skipping column re-registration: task.priority
2024-07-10 21:31:05 - Building property priority
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property title with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-10 21:31:05 - building BasicValue for title
2024-07-10 21:31:05 - Skipping column re-registration: task.title
2024-07-10 21:31:05 - Building property title
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-10 21:31:05 - building BasicValue for updatedAt
2024-07-10 21:31:05 - Skipping column re-registration: task.updated_at
2024-07-10 21:31:05 - Building property updatedAt
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Building property user
2024-07-10 21:31:05 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:31:05 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-10 21:31:05 - Import with entity name User
2024-07-10 21:31:05 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-10 21:31:05 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:31:05 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:31:05 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-10 21:31:05 - building BasicValue for id
2024-07-10 21:31:05 - Skipping column re-registration: users.id
2024-07-10 21:31:05 - Building property id
2024-07-10 21:31:05 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property email with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-10 21:31:05 - building BasicValue for email
2024-07-10 21:31:05 - Skipping column re-registration: users.email
2024-07-10 21:31:05 - Building property email
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property password with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-10 21:31:05 - building BasicValue for password
2024-07-10 21:31:05 - Skipping column re-registration: users.password
2024-07-10 21:31:05 - Building property password
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:31:05 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:31:05 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Building property tasks
2024-07-10 21:31:05 - Binding column: AnnotatedColumn()
2024-07-10 21:31:05 - MetadataSourceProcessor property username with lazy=false
2024-07-10 21:31:05 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-10 21:31:05 - building BasicValue for username
2024-07-10 21:31:05 - Skipping column re-registration: users.username
2024-07-10 21:31:05 - Building property username
2024-07-10 21:31:05 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-10 21:31:05 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-10 21:31:05 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-10 21:31:05 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-10 21:31:05 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-10 21:31:05 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-10 21:31:05 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-10 21:31:05 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-10 21:31:05 - Building session factory
2024-07-10 21:31:05 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:31:05 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3b764e66, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@38834000, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.2366710440656459448, com.sun.management.jmxremote.port=60666, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=32860, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.2366710440656459448, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5b72b13a, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-10 21:31:05 - Session factory constructed with filter configurations : {}
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@f26cd76] under count; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@9a16af1] under every; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@47e70f54] under any; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25c06894] under sinh; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c2ae7d7] under cosh; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e7cb01a] under tanh; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@236206f8] under pi; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c04ec8] under log; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : length -> character_length
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@143900a6] under position; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6efc9d3f] under overlay; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7bb3294c] under trim; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4fea9f19] under cast; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37a14aa1] under collate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@362fd4e9] under extract; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@629cf53c] under ifnull; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7983a5d5] under pad; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@14580edc] under str; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@65294247] under format; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2eafb4e7] under timestampadd; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@579ee82] under timestampdiff; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : dateadd -> timestampadd
2024-07-10 21:31:05 - Registering alternate key : datediff -> timestampdiff
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dbf8cfc] under current_date; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26c1244c] under current_time; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e76134d] under current_timestamp; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : current date -> current_date
2024-07-10 21:31:05 - Registering alternate key : current time -> current_time
2024-07-10 21:31:05 - Registering alternate key : current timestamp -> current_timestamp
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a317af7] under local_date; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b38db21] under local_time; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54f4734e] under local_datetime; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a26eee6] under offset_datetime; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : local date -> local_date
2024-07-10 21:31:05 - Registering alternate key : local time -> local_time
2024-07-10 21:31:05 - Registering alternate key : local datetime -> local_datetime
2024-07-10 21:31:05 - Registering alternate key : offset datetime -> offset_datetime
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4be1c797] under instant; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : current_instant -> instant
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@19b0a9f2] under sql; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@f4c3e9] under count; prior registration was org.hibernate.dialect.function.CountFunction@f26cd76
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@3976910] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@236206f8
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e149395] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : day -> day_of_month
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7b38db21
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@54f4734e
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@57466fb7] under trunc; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : truncate -> trunc
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7891742e] under date_trunc; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : chr -> char
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bbaf983] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@143900a6
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@781bd9dd] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : every -> bool_and
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-10 21:31:05 - Registering alternate key : any -> bool_or
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1cc42abe] under format; prior registration was org.hibernate.dialect.function.FormatFunction@65294247
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@5feaafb3] under listagg; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@330d16af] under mode; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@16f15a4] under percentile_cont; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@548c5127] under percentile_disc; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@21084a6d] under rank; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@c3114ea] under dense_rank; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@642d971f] under percent_rank; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2afe825a] under cume_dist; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@1f3dafd4] under array; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@33622388] under array_list; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@3e0b1f03] under array_agg; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@6ddbbfbb] under array_position; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@7c1c0892] under array_positions; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@458704ee] under array_positions_list; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45b2d17b] under array_length; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@64d1f549] under array_concat; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@672f69f7] under array_prepend; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@6aaf1ce8] under array_append; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@11fb1691] under array_contains; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@1f229c40] under array_contains_nullable; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@3f5e64c9] under array_overlaps; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@1f847d9e] under array_overlaps_nullable; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@12051d38] under array_get; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@3d195d15] under array_set; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@2af31aba] under array_remove; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@68fc1e7f] under array_remove_index; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@99af41d] under array_slice; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@33197c2f] under array_replace; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24e79a4d] under array_trim; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@7369208e] under array_fill; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@7ba623d1] under array_fill_list; prior registration was null
2024-07-10 21:31:05 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@1239c268] under array_to_string; prior registration was null
2024-07-10 21:31:05 - abs(NUMERIC arg)
2024-07-10 21:31:05 - Double acos(NUMERIC arg)
2024-07-10 21:31:05 - Boolean any(BOOLEAN predicate)
2024-07-10 21:31:05 - array( ... )
2024-07-10 21:31:05 - array_agg(arg)
2024-07-10 21:31:05 - array_append( ... )
2024-07-10 21:31:05 - array_concat( ... )
2024-07-10 21:31:05 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:31:05 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:31:05 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-10 21:31:05 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-10 21:31:05 - array_get(ARRAY array, INTEGER index)
2024-07-10 21:31:05 - Integer array_length(ARRAY array)
2024-07-10 21:31:05 - array_list( ... )
2024-07-10 21:31:05 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-10 21:31:05 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-10 21:31:05 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-10 21:31:05 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-10 21:31:05 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-10 21:31:05 - array_prepend( ... )
2024-07-10 21:31:05 - array_remove( ... )
2024-07-10 21:31:05 - array_remove_index( ... )
2024-07-10 21:31:05 - array_replace( ... )
2024-07-10 21:31:05 - array_set( ... )
2024-07-10 21:31:05 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-10 21:31:05 - String array_to_string( ... )
2024-07-10 21:31:05 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-10 21:31:05 - Integer ascii(STRING arg)
2024-07-10 21:31:05 - Double asin(NUMERIC arg)
2024-07-10 21:31:05 - Double atan(NUMERIC arg)
2024-07-10 21:31:05 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:31:05 - avg(NUMERIC arg)
2024-07-10 21:31:05 - bit_and(arg)
2024-07-10 21:31:05 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-10 21:31:05 - bit_or(arg)
2024-07-10 21:31:05 - bitand(arg0, arg1)
2024-07-10 21:31:05 - bitnot(arg)
2024-07-10 21:31:05 - bitor(arg0, arg1)
2024-07-10 21:31:05 - bitxor(arg0, arg1)
2024-07-10 21:31:05 - Boolean bool_and(BOOLEAN predicate)
2024-07-10 21:31:05 - Boolean bool_or(BOOLEAN predicate)
2024-07-10 21:31:05 - cast(arg as Type)
2024-07-10 21:31:05 - ceiling(NUMERIC arg)
2024-07-10 21:31:05 - Character char(INTEGER arg)
2024-07-10 21:31:05 - Integer character_length(STRING_OR_CLOB arg)
2024-07-10 21:31:05 - Character chr(INTEGER arg)
2024-07-10 21:31:05 - coalesce(arg0[, arg1[, ...]])
2024-07-10 21:31:05 - String collate(STRING string as COLLATION collation)
2024-07-10 21:31:05 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-10 21:31:05 - Double cos(NUMERIC arg)
2024-07-10 21:31:05 - Double cosh(NUMERIC arg)
2024-07-10 21:31:05 - Double cot(NUMERIC arg)
2024-07-10 21:31:05 - Long count([distinct ]{arg|*})
2024-07-10 21:31:05 - Double cume_dist([arg0[, ...]])
2024-07-10 21:31:05 - Date curdate()
2024-07-10 21:31:05 - Date current date
2024-07-10 21:31:05 - Time current time
2024-07-10 21:31:05 - Timestamp current timestamp
2024-07-10 21:31:05 - Date current_date
2024-07-10 21:31:05 - Instant current_instant
2024-07-10 21:31:05 - Time current_time
2024-07-10 21:31:05 - Timestamp current_timestamp
2024-07-10 21:31:05 - Time curtime()
2024-07-10 21:31:05 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-10 21:31:05 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:31:05 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:31:05 - Integer day(DATE arg)
2024-07-10 21:31:05 - Integer day_of_month(DATE arg)
2024-07-10 21:31:05 - Integer day_of_week(DATE arg)
2024-07-10 21:31:05 - Integer day_of_year(DATE arg)
2024-07-10 21:31:05 - String dayname(DATE arg)
2024-07-10 21:31:05 - Double degrees(NUMERIC arg)
2024-07-10 21:31:05 - Long dense_rank([arg0[, ...]])
2024-07-10 21:31:05 - Boolean every(BOOLEAN predicate)
2024-07-10 21:31:05 - Double exp(NUMERIC arg)
2024-07-10 21:31:05 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-10 21:31:05 - first_valueANY value
2024-07-10 21:31:05 - floor(NUMERIC arg)
2024-07-10 21:31:05 - String format(TEMPORAL datetime as STRING pattern)
2024-07-10 21:31:05 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:31:05 - Integer hour(TIME arg)
2024-07-10 21:31:05 - ifnull(arg0, arg1)
2024-07-10 21:31:05 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-10 21:31:05 - Instant instant
2024-07-10 21:31:05 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-10 21:31:05 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:31:05 - last_valueANY value
2024-07-10 21:31:05 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:31:05 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:31:05 - String left(STRING string, INTEGER length)
2024-07-10 21:31:05 - Integer length(STRING_OR_CLOB arg)
2024-07-10 21:31:05 - String listagg(STRING arg0, STRING arg1)
2024-07-10 21:31:05 - Double ln(NUMERIC arg)
2024-07-10 21:31:05 - LocalDate local date
2024-07-10 21:31:05 - LocalDateTime local datetime
2024-07-10 21:31:05 - LocalTime local time
2024-07-10 21:31:05 - LocalDate local_date
2024-07-10 21:31:05 - LocalDateTime local_datetime
2024-07-10 21:31:05 - LocalTime local_time
2024-07-10 21:31:05 - Time localtime
2024-07-10 21:31:05 - Timestamp localtimestamp
2024-07-10 21:31:05 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-10 21:31:05 - Double log(NUMERIC base, NUMERIC arg)
2024-07-10 21:31:05 - Double log10(NUMERIC arg)
2024-07-10 21:31:05 - String lower(STRING string)
2024-07-10 21:31:05 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:31:05 - String ltrim(STRING string)
2024-07-10 21:31:05 - max(COMPARABLE arg)
2024-07-10 21:31:05 - Double median(NUMERIC arg)
2024-07-10 21:31:05 - Integer microsecond(TIME arg)
2024-07-10 21:31:05 - min(COMPARABLE arg)
2024-07-10 21:31:05 - Integer minute(TIME arg)
2024-07-10 21:31:05 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-10 21:31:05 - mode()
2024-07-10 21:31:05 - Integer month(DATE arg)
2024-07-10 21:31:05 - String monthname(DATE arg)
2024-07-10 21:31:05 - Timestamp now()
2024-07-10 21:31:05 - nth_valueANY value, INTEGER nth
2024-07-10 21:31:05 - nullif(arg0, arg1)
2024-07-10 21:31:05 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-10 21:31:05 - OffsetDateTime offset datetime
2024-07-10 21:31:05 - OffsetDateTime offset_datetime
2024-07-10 21:31:05 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-10 21:31:05 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-10 21:31:05 - Double percent_rank([arg0[, ...]])
2024-07-10 21:31:05 - percentile_cont(NUMERIC arg)
2024-07-10 21:31:05 - percentile_disc(NUMERIC arg)
2024-07-10 21:31:05 - Double pi
2024-07-10 21:31:05 - Integer position(STRING pattern in STRING string)
2024-07-10 21:31:05 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:31:05 - Integer quarter(DATE arg)
2024-07-10 21:31:05 - Double radians(NUMERIC arg)
2024-07-10 21:31:05 - Double rand([INTEGER seed])
2024-07-10 21:31:05 - Long rank([arg0[, ...]])
2024-07-10 21:31:05 - String repeat(STRING string, INTEGER times)
2024-07-10 21:31:05 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-10 21:31:05 - String right(STRING string, INTEGER length)
2024-07-10 21:31:05 - round(NUMERIC number[, INTEGER places])
2024-07-10 21:31:05 - Long row_number()
2024-07-10 21:31:05 - Long rownum()
2024-07-10 21:31:05 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:31:05 - String rtrim(STRING string)
2024-07-10 21:31:05 - Integer second(TIME arg)
2024-07-10 21:31:05 - Integer sign(NUMERIC arg)
2024-07-10 21:31:05 - Double sin(NUMERIC arg)
2024-07-10 21:31:05 - Double sinh(NUMERIC arg)
2024-07-10 21:31:05 - String soundex(arg)
2024-07-10 21:31:05 - String space(INTEGER arg)
2024-07-10 21:31:05 - Object sql
2024-07-10 21:31:05 - Double sqrt(NUMERIC arg)
2024-07-10 21:31:05 - Double stddev_pop(NUMERIC arg)
2024-07-10 21:31:05 - Double stddev_samp(NUMERIC arg)
2024-07-10 21:31:05 - String str(arg)
2024-07-10 21:31:05 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-10 21:31:05 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-10 21:31:05 - sum(arg)
2024-07-10 21:31:05 - Timestamp sysdate
2024-07-10 21:31:05 - Double tan(NUMERIC arg)
2024-07-10 21:31:05 - Double tanh(NUMERIC arg)
2024-07-10 21:31:05 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:31:05 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:31:05 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-10 21:31:05 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-10 21:31:05 - trunc( ... )
2024-07-10 21:31:05 - truncate( ... )
2024-07-10 21:31:05 - String upper(STRING string)
2024-07-10 21:31:05 - Double var_pop(NUMERIC arg)
2024-07-10 21:31:05 - Double var_samp(NUMERIC arg)
2024-07-10 21:31:05 - Integer week(DATE arg)
2024-07-10 21:31:05 - Integer year(DATE arg)
2024-07-10 21:31:05 - Starting QueryInterpretationCache(2048)
2024-07-10 21:31:05 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:31:05 - Configured EntityCopyObserver strategy: disallow
2024-07-10 21:31:05 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:31:05 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:31:05 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-10 21:31:05 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:31:05 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:31:05 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-10 21:31:05 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - Starting post-init callbacks
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-10 21:31:05 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:31:05 - Created new SQL alias : u1_0
2024-07-10 21:31:05 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-10 21:31:05 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-10 21:31:05 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-10 21:31:05 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-10 21:31:05 -  Version select: select id from users where id=?
2024-07-10 21:31:05 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:31:05 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-10 21:31:05 -  Delete (0): delete from users where id=?
2024-07-10 21:31:05 - Created new SQL alias : t1_0
2024-07-10 21:31:05 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-10 21:31:05 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@13e6ab86] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-10 21:31:05 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-10 21:31:05 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-10 21:31:05 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-10 21:31:05 -  Version select: select id from task where id=?
2024-07-10 21:31:05 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-10 21:31:05 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-10 21:31:05 -  Delete (0): delete from task where id=?
2024-07-10 21:31:05 - Created new SQL alias : t1_0
2024-07-10 21:31:05 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7aa62a90] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-10 21:31:05 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-10 21:31:05 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4f2a0909] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-10 21:31:05 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-10 21:31:05 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-10 21:31:05 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:31:05 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:31:05 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5020e5ab] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ef34eb3]
2024-07-10 21:31:05 - Checking 0 named HQL queries
2024-07-10 21:31:05 - Checking 0 named SQL queries
2024-07-10 21:31:05 - drop table if exists task cascade 
2024-07-10 21:31:05 - drop table if exists users cascade 
2024-07-10 21:31:05 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-10 21:31:05 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-10 21:31:05 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-10 21:31:05 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6fa5fc67
2024-07-10 21:31:05 - Registering SessionFactory: 3521fde1-ef61-4164-9f5c-555adb95a956 (<unnamed>)
2024-07-10 21:31:05 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-10 21:31:05 - Instantiated SessionFactory
2024-07-10 21:31:05 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:31:05 - Statistics initialized [enabled=false]
2024-07-10 21:31:06 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:31:06 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:31:06 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:31:06 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:31:06 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:31:06 - 

Using generated security password: ce826a0b-cca5-4c7c-ae22-add0679823d7

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:31:06 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:31:06 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-10 21:31:06 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-10 21:31:07 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-10 21:33:24 - Starting TaskmanagementApplication using Java 22.0.1 with PID 30604 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-10 21:33:24 - No active profile set, falling back to 1 default profile: "default"
2024-07-10 21:33:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 21:33:25 - Finished Spring Data repository scanning in 35 ms. Found 2 JPA repository interfaces.
2024-07-10 21:33:25 - Tomcat initialized with port 8080 (http)
2024-07-10 21:33:25 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-10 21:33:25 - Starting service [Tomcat]
2024-07-10 21:33:25 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 21:33:25 - Initializing Spring embedded WebApplicationContext
2024-07-10 21:33:25 - Root WebApplicationContext: initialization completed in 1746 ms
2024-07-10 21:33:26 - Filter 'webMvcObservationFilter' configured for use
2024-07-10 21:33:26 - HikariPool-1 - Starting...
2024-07-10 21:33:26 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:c7323148-753b-497f-95e5-d86ec6ac8a4a user=SA
2024-07-10 21:33:26 - HikariPool-1 - Start completed.
2024-07-10 21:33:26 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-10 21:33:26 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-10 21:33:26 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-10 21:33:26 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 21:33:26 - HHH000206: 'hibernate.properties' not found
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-10 21:33:26 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-10 21:33:26 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-10 21:33:26 - HHH000026: Second-level cache disabled
2024-07-10 21:33:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-10 21:33:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-10 21:33:26 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-10 21:33:26 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-10 21:33:26 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-10 21:33:26 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@211da640
2024-07-10 21:33:26 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@211da640
2024-07-10 21:33:26 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2ec92631
2024-07-10 21:33:26 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2ec92631
2024-07-10 21:33:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-10 21:33:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-10 21:33:26 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-10 21:33:26 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-10 21:33:26 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-10 21:33:26 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-10 21:33:26 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@294ebe11
2024-07-10 21:33:26 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@294ebe11
2024-07-10 21:33:26 - Adding type registration image -> org.hibernate.type.BasicTypeReference@4e51eda7
2024-07-10 21:33:26 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-10 21:33:26 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-10 21:33:26 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2419fe6f
2024-07-10 21:33:26 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@78fb72cb
2024-07-10 21:33:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-10 21:33:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-10 21:33:26 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-10 21:33:26 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-10 21:33:26 - Adding type registration int -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-10 21:33:26 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-10 21:33:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-10 21:33:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-10 21:33:26 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-10 21:33:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-10 21:33:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-10 21:33:26 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-10 21:33:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-10 21:33:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-10 21:33:26 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-10 21:33:26 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6cbbfe29
2024-07-10 21:33:26 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6cbbfe29
2024-07-10 21:33:26 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@25823192
2024-07-10 21:33:26 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@25823192
2024-07-10 21:33:26 - Adding type registration character -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-10 21:33:26 - Adding type registration char -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-10 21:33:26 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-10 21:33:26 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-10 21:33:26 - Adding type registration string -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-10 21:33:26 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-10 21:33:26 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5be69f7e
2024-07-10 21:33:26 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:33:26 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:33:26 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-10 21:33:26 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-10 21:33:26 - Adding type registration text -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-10 21:33:26 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-10 21:33:26 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:33:26 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-10 21:33:26 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:33:26 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-10 21:33:26 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-10 21:33:26 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6b0ba697
2024-07-10 21:33:26 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-10 21:33:26 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-10 21:33:26 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-10 21:33:26 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-10 21:33:26 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:33:26 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-10 21:33:26 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:33:26 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-10 21:33:26 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:33:26 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-10 21:33:26 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:33:26 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-10 21:33:26 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-10 21:33:26 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-10 21:33:26 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-10 21:33:26 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-10 21:33:26 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-10 21:33:26 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-10 21:33:26 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-10 21:33:26 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2168def
2024-07-10 21:33:26 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-10 21:33:26 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-10 21:33:26 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-10 21:33:26 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-10 21:33:26 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-10 21:33:26 - Adding type registration date -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-10 21:33:26 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-10 21:33:26 - Adding type registration time -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-10 21:33:26 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-10 21:33:26 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-10 21:33:26 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-10 21:33:26 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-10 21:33:26 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-10 21:33:26 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-10 21:33:26 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-10 21:33:26 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-10 21:33:26 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c3cd13a
2024-07-10 21:33:26 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-10 21:33:26 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-10 21:33:26 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-10 21:33:26 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-10 21:33:26 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-10 21:33:26 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-10 21:33:26 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-10 21:33:26 - Adding type registration class -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-10 21:33:26 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-10 21:33:26 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:33:26 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:33:26 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-10 21:33:26 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-10 21:33:26 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-10 21:33:26 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-10 21:33:26 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-10 21:33:26 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-10 21:33:26 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-10 21:33:26 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-10 21:33:26 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-10 21:33:26 - Adding type registration url -> org.hibernate.type.BasicTypeReference@d180961
2024-07-10 21:33:26 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@d180961
2024-07-10 21:33:26 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4af7ac25
2024-07-10 21:33:26 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-10 21:33:26 - Adding type registration object -> org.hibernate.type.JavaObjectType@611a2d82
2024-07-10 21:33:26 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@611a2d82
2024-07-10 21:33:26 - Adding type registration null -> org.hibernate.type.NullType@5f67181f
2024-07-10 21:33:26 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1169fdfd
2024-07-10 21:33:26 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@75add13c
2024-07-10 21:33:26 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@224d537d
2024-07-10 21:33:26 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@450d10cb
2024-07-10 21:33:26 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1bd59b82
2024-07-10 21:33:26 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a9df5
2024-07-10 21:33:26 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@48f4f03e
2024-07-10 21:33:26 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65d23aa3
2024-07-10 21:33:26 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e] into BootstrapContext; was [null]
2024-07-10 21:33:26 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e) [was null]
2024-07-10 21:33:26 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@74e4be21] into BootstrapContext; was [null]
2024-07-10 21:33:26 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4d174189] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@628bd77e]
2024-07-10 21:33:26 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 21:33:26 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e]
2024-07-10 21:33:26 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e]
2024-07-10 21:33:26 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:33:26 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-10 21:33:26 - JDBC version : 4.2
2024-07-10 21:33:26 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-10 21:33:26 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-10 21:33:26 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-10 21:33:26 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-10 21:33:26 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-10 21:33:26 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:33:26 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-10 21:33:26 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-10 21:33:26 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-10 21:33:26 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:33:26 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-10 21:33:26 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20a9fb01] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19fc0ef7]
2024-07-10 21:33:27 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-10 21:33:27 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-10 21:33:27 - Import with entity name Task
2024-07-10 21:33:27 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-10 21:33:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:33:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:33:27 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-10 21:33:27 - building BasicValue for id
2024-07-10 21:33:27 - Skipping column re-registration: task.id
2024-07-10 21:33:27 - Building property id
2024-07-10 21:33:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property category with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-10 21:33:27 - building BasicValue for category
2024-07-10 21:33:27 - Skipping column re-registration: task.category
2024-07-10 21:33:27 - Building property category
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-10 21:33:27 - building BasicValue for createdAt
2024-07-10 21:33:27 - Skipping column re-registration: task.created_at
2024-07-10 21:33:27 - Building property createdAt
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property description with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-10 21:33:27 - building BasicValue for description
2024-07-10 21:33:27 - Skipping column re-registration: task.description
2024-07-10 21:33:27 - Building property description
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property priority with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-10 21:33:27 - building BasicValue for priority
2024-07-10 21:33:27 - Skipping column re-registration: task.priority
2024-07-10 21:33:27 - Building property priority
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property title with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-10 21:33:27 - building BasicValue for title
2024-07-10 21:33:27 - Skipping column re-registration: task.title
2024-07-10 21:33:27 - Building property title
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-10 21:33:27 - building BasicValue for updatedAt
2024-07-10 21:33:27 - Skipping column re-registration: task.updated_at
2024-07-10 21:33:27 - Building property updatedAt
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Building property user
2024-07-10 21:33:27 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:33:27 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-10 21:33:27 - Import with entity name User
2024-07-10 21:33:27 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-10 21:33:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:33:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:33:27 - MetadataSourceProcessor property id with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-10 21:33:27 - building BasicValue for id
2024-07-10 21:33:27 - Skipping column re-registration: users.id
2024-07-10 21:33:27 - Building property id
2024-07-10 21:33:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property email with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-10 21:33:27 - building BasicValue for email
2024-07-10 21:33:27 - Skipping column re-registration: users.email
2024-07-10 21:33:27 - Building property email
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property password with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-10 21:33:27 - building BasicValue for password
2024-07-10 21:33:27 - Skipping column re-registration: users.password
2024-07-10 21:33:27 - Building property password
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:33:27 - Binding column: AnnotatedJoinColumn()
2024-07-10 21:33:27 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Building property tasks
2024-07-10 21:33:27 - Binding column: AnnotatedColumn()
2024-07-10 21:33:27 - MetadataSourceProcessor property username with lazy=false
2024-07-10 21:33:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-10 21:33:27 - building BasicValue for username
2024-07-10 21:33:27 - Skipping column re-registration: users.username
2024-07-10 21:33:27 - Building property username
2024-07-10 21:33:27 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-10 21:33:27 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-10 21:33:27 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-10 21:33:27 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-10 21:33:27 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-10 21:33:27 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-10 21:33:27 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-10 21:33:27 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-10 21:33:27 - Building session factory
2024-07-10 21:33:27 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:33:27 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@49222187, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5e41e6ad, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.17529557824042410935, com.sun.management.jmxremote.port=60666, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=30604, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.17529557824042410935, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2665a2e7, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-10 21:33:27 - Session factory constructed with filter configurations : {}
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7901a5ab] under count; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@391e2a] under every; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@641cea11] under any; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fccd98f] under sinh; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@309e7215] under cosh; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b30b6f8] under tanh; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e965426] under pi; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575fe6da] under log; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : length -> character_length
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@299dd381] under position; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@123d0816] under overlay; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5543d800] under trim; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5d01a2eb] under cast; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fe337a5] under collate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@655f92a1] under extract; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@637c8632] under ifnull; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@37ab1b10] under pad; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@34f8ce89] under str; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3fdede3a] under format; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2bc0603f] under timestampadd; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5a45c218] under timestampdiff; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : dateadd -> timestampadd
2024-07-10 21:33:27 - Registering alternate key : datediff -> timestampdiff
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3163e03b] under current_date; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6aa18912] under current_time; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c20505f] under current_timestamp; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : current date -> current_date
2024-07-10 21:33:27 - Registering alternate key : current time -> current_time
2024-07-10 21:33:27 - Registering alternate key : current timestamp -> current_timestamp
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cce92b5] under local_date; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2202c92f] under local_time; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@440d2d64] under local_datetime; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a712f12] under offset_datetime; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : local date -> local_date
2024-07-10 21:33:27 - Registering alternate key : local time -> local_time
2024-07-10 21:33:27 - Registering alternate key : local datetime -> local_datetime
2024-07-10 21:33:27 - Registering alternate key : offset datetime -> offset_datetime
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62525dd3] under instant; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : current_instant -> instant
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@18301763] under sql; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@237ee2e1] under count; prior registration was org.hibernate.dialect.function.CountFunction@7901a5ab
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@29c21acb] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e965426
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4113d9ab] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : day -> day_of_month
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2202c92f
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@440d2d64
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1abea1ed] under trunc; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : truncate -> trunc
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f5288c5] under date_trunc; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : chr -> char
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a9ef32e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@299dd381
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e2ee348] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : every -> bool_and
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-10 21:33:27 - Registering alternate key : any -> bool_or
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@61f08aa9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3fdede3a
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4853f592] under listagg; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@573f2e67] under mode; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d449307] under percentile_cont; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@44e7c06b] under percentile_disc; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@9715d26] under rank; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6d8096ee] under dense_rank; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@35d8ba22] under percent_rank; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fc051ce] under cume_dist; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@7a78d2aa] under array; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@254d8ef6] under array_list; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@76219fe] under array_agg; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@4c0ab04f] under array_position; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@774189d0] under array_positions; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@1bcf2c64] under array_positions_list; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5bddfe] under array_length; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@5ca3acad] under array_concat; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@583b4af4] under array_prepend; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@72c175f1] under array_append; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@1ddc889b] under array_contains; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@5ec3689b] under array_contains_nullable; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@45964b9e] under array_overlaps; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@166a5659] under array_overlaps_nullable; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a72925] under array_get; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@4f0cdd0f] under array_set; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@44df834c] under array_remove; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@73417494] under array_remove_index; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29b0c169] under array_slice; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@76ee7301] under array_replace; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71817f66] under array_trim; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@75df4b1d] under array_fill; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@43120a77] under array_fill_list; prior registration was null
2024-07-10 21:33:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@2941631f] under array_to_string; prior registration was null
2024-07-10 21:33:27 - abs(NUMERIC arg)
2024-07-10 21:33:27 - Double acos(NUMERIC arg)
2024-07-10 21:33:27 - Boolean any(BOOLEAN predicate)
2024-07-10 21:33:27 - array( ... )
2024-07-10 21:33:27 - array_agg(arg)
2024-07-10 21:33:27 - array_append( ... )
2024-07-10 21:33:27 - array_concat( ... )
2024-07-10 21:33:27 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:33:27 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-10 21:33:27 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-10 21:33:27 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-10 21:33:27 - array_get(ARRAY array, INTEGER index)
2024-07-10 21:33:27 - Integer array_length(ARRAY array)
2024-07-10 21:33:27 - array_list( ... )
2024-07-10 21:33:27 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-10 21:33:27 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-10 21:33:27 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-10 21:33:27 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-10 21:33:27 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-10 21:33:27 - array_prepend( ... )
2024-07-10 21:33:27 - array_remove( ... )
2024-07-10 21:33:27 - array_remove_index( ... )
2024-07-10 21:33:27 - array_replace( ... )
2024-07-10 21:33:27 - array_set( ... )
2024-07-10 21:33:27 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-10 21:33:27 - String array_to_string( ... )
2024-07-10 21:33:27 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-10 21:33:27 - Integer ascii(STRING arg)
2024-07-10 21:33:27 - Double asin(NUMERIC arg)
2024-07-10 21:33:27 - Double atan(NUMERIC arg)
2024-07-10 21:33:27 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:33:27 - avg(NUMERIC arg)
2024-07-10 21:33:27 - bit_and(arg)
2024-07-10 21:33:27 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-10 21:33:27 - bit_or(arg)
2024-07-10 21:33:27 - bitand(arg0, arg1)
2024-07-10 21:33:27 - bitnot(arg)
2024-07-10 21:33:27 - bitor(arg0, arg1)
2024-07-10 21:33:27 - bitxor(arg0, arg1)
2024-07-10 21:33:27 - Boolean bool_and(BOOLEAN predicate)
2024-07-10 21:33:27 - Boolean bool_or(BOOLEAN predicate)
2024-07-10 21:33:27 - cast(arg as Type)
2024-07-10 21:33:27 - ceiling(NUMERIC arg)
2024-07-10 21:33:27 - Character char(INTEGER arg)
2024-07-10 21:33:27 - Integer character_length(STRING_OR_CLOB arg)
2024-07-10 21:33:27 - Character chr(INTEGER arg)
2024-07-10 21:33:27 - coalesce(arg0[, arg1[, ...]])
2024-07-10 21:33:27 - String collate(STRING string as COLLATION collation)
2024-07-10 21:33:27 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-10 21:33:27 - Double cos(NUMERIC arg)
2024-07-10 21:33:27 - Double cosh(NUMERIC arg)
2024-07-10 21:33:27 - Double cot(NUMERIC arg)
2024-07-10 21:33:27 - Long count([distinct ]{arg|*})
2024-07-10 21:33:27 - Double cume_dist([arg0[, ...]])
2024-07-10 21:33:27 - Date curdate()
2024-07-10 21:33:27 - Date current date
2024-07-10 21:33:27 - Time current time
2024-07-10 21:33:27 - Timestamp current timestamp
2024-07-10 21:33:27 - Date current_date
2024-07-10 21:33:27 - Instant current_instant
2024-07-10 21:33:27 - Time current_time
2024-07-10 21:33:27 - Timestamp current_timestamp
2024-07-10 21:33:27 - Time curtime()
2024-07-10 21:33:27 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-10 21:33:27 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:33:27 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:33:27 - Integer day(DATE arg)
2024-07-10 21:33:27 - Integer day_of_month(DATE arg)
2024-07-10 21:33:27 - Integer day_of_week(DATE arg)
2024-07-10 21:33:27 - Integer day_of_year(DATE arg)
2024-07-10 21:33:27 - String dayname(DATE arg)
2024-07-10 21:33:27 - Double degrees(NUMERIC arg)
2024-07-10 21:33:27 - Long dense_rank([arg0[, ...]])
2024-07-10 21:33:27 - Boolean every(BOOLEAN predicate)
2024-07-10 21:33:27 - Double exp(NUMERIC arg)
2024-07-10 21:33:27 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-10 21:33:27 - first_valueANY value
2024-07-10 21:33:27 - floor(NUMERIC arg)
2024-07-10 21:33:27 - String format(TEMPORAL datetime as STRING pattern)
2024-07-10 21:33:27 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:33:27 - Integer hour(TIME arg)
2024-07-10 21:33:27 - ifnull(arg0, arg1)
2024-07-10 21:33:27 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-10 21:33:27 - Instant instant
2024-07-10 21:33:27 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-10 21:33:27 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:33:27 - last_valueANY value
2024-07-10 21:33:27 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-10 21:33:27 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-10 21:33:27 - String left(STRING string, INTEGER length)
2024-07-10 21:33:27 - Integer length(STRING_OR_CLOB arg)
2024-07-10 21:33:27 - String listagg(STRING arg0, STRING arg1)
2024-07-10 21:33:27 - Double ln(NUMERIC arg)
2024-07-10 21:33:27 - LocalDate local date
2024-07-10 21:33:27 - LocalDateTime local datetime
2024-07-10 21:33:27 - LocalTime local time
2024-07-10 21:33:27 - LocalDate local_date
2024-07-10 21:33:27 - LocalDateTime local_datetime
2024-07-10 21:33:27 - LocalTime local_time
2024-07-10 21:33:27 - Time localtime
2024-07-10 21:33:27 - Timestamp localtimestamp
2024-07-10 21:33:27 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-10 21:33:27 - Double log(NUMERIC base, NUMERIC arg)
2024-07-10 21:33:27 - Double log10(NUMERIC arg)
2024-07-10 21:33:27 - String lower(STRING string)
2024-07-10 21:33:27 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:33:27 - String ltrim(STRING string)
2024-07-10 21:33:27 - max(COMPARABLE arg)
2024-07-10 21:33:27 - Double median(NUMERIC arg)
2024-07-10 21:33:27 - Integer microsecond(TIME arg)
2024-07-10 21:33:27 - min(COMPARABLE arg)
2024-07-10 21:33:27 - Integer minute(TIME arg)
2024-07-10 21:33:27 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-10 21:33:27 - mode()
2024-07-10 21:33:27 - Integer month(DATE arg)
2024-07-10 21:33:27 - String monthname(DATE arg)
2024-07-10 21:33:27 - Timestamp now()
2024-07-10 21:33:27 - nth_valueANY value, INTEGER nth
2024-07-10 21:33:27 - nullif(arg0, arg1)
2024-07-10 21:33:27 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-10 21:33:27 - OffsetDateTime offset datetime
2024-07-10 21:33:27 - OffsetDateTime offset_datetime
2024-07-10 21:33:27 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-10 21:33:27 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-10 21:33:27 - Double percent_rank([arg0[, ...]])
2024-07-10 21:33:27 - percentile_cont(NUMERIC arg)
2024-07-10 21:33:27 - percentile_disc(NUMERIC arg)
2024-07-10 21:33:27 - Double pi
2024-07-10 21:33:27 - Integer position(STRING pattern in STRING string)
2024-07-10 21:33:27 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-10 21:33:27 - Integer quarter(DATE arg)
2024-07-10 21:33:27 - Double radians(NUMERIC arg)
2024-07-10 21:33:27 - Double rand([INTEGER seed])
2024-07-10 21:33:27 - Long rank([arg0[, ...]])
2024-07-10 21:33:27 - String repeat(STRING string, INTEGER times)
2024-07-10 21:33:27 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-10 21:33:27 - String right(STRING string, INTEGER length)
2024-07-10 21:33:27 - round(NUMERIC number[, INTEGER places])
2024-07-10 21:33:27 - Long row_number()
2024-07-10 21:33:27 - Long rownum()
2024-07-10 21:33:27 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-10 21:33:27 - String rtrim(STRING string)
2024-07-10 21:33:27 - Integer second(TIME arg)
2024-07-10 21:33:27 - Integer sign(NUMERIC arg)
2024-07-10 21:33:27 - Double sin(NUMERIC arg)
2024-07-10 21:33:27 - Double sinh(NUMERIC arg)
2024-07-10 21:33:27 - String soundex(arg)
2024-07-10 21:33:27 - String space(INTEGER arg)
2024-07-10 21:33:27 - Object sql
2024-07-10 21:33:27 - Double sqrt(NUMERIC arg)
2024-07-10 21:33:27 - Double stddev_pop(NUMERIC arg)
2024-07-10 21:33:27 - Double stddev_samp(NUMERIC arg)
2024-07-10 21:33:27 - String str(arg)
2024-07-10 21:33:27 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-10 21:33:27 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-10 21:33:27 - sum(arg)
2024-07-10 21:33:27 - Timestamp sysdate
2024-07-10 21:33:27 - Double tan(NUMERIC arg)
2024-07-10 21:33:27 - Double tanh(NUMERIC arg)
2024-07-10 21:33:27 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-10 21:33:27 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-10 21:33:27 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-10 21:33:27 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-10 21:33:27 - trunc( ... )
2024-07-10 21:33:27 - truncate( ... )
2024-07-10 21:33:27 - String upper(STRING string)
2024-07-10 21:33:27 - Double var_pop(NUMERIC arg)
2024-07-10 21:33:27 - Double var_samp(NUMERIC arg)
2024-07-10 21:33:27 - Integer week(DATE arg)
2024-07-10 21:33:27 - Integer year(DATE arg)
2024-07-10 21:33:27 - Starting QueryInterpretationCache(2048)
2024-07-10 21:33:27 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-10 21:33:27 - Configured EntityCopyObserver strategy: disallow
2024-07-10 21:33:27 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-10 21:33:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-10 21:33:27 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-10 21:33:27 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-10 21:33:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-10 21:33:27 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-10 21:33:27 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - Starting post-init callbacks
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-10 21:33:27 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-10 21:33:27 - Created new SQL alias : u1_0
2024-07-10 21:33:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-10 21:33:27 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-10 21:33:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-10 21:33:27 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-10 21:33:27 -  Version select: select id from users where id=?
2024-07-10 21:33:27 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:33:27 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-10 21:33:27 -  Delete (0): delete from users where id=?
2024-07-10 21:33:27 - Created new SQL alias : t1_0
2024-07-10 21:33:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-10 21:33:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4df54c1] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-10 21:33:27 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-10 21:33:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-10 21:33:27 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-10 21:33:27 -  Version select: select id from task where id=?
2024-07-10 21:33:27 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-10 21:33:27 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-10 21:33:27 -  Delete (0): delete from task where id=?
2024-07-10 21:33:27 - Created new SQL alias : t1_0
2024-07-10 21:33:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@58e0d1ac] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-10 21:33:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-10 21:33:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b7ebac1] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-10 21:33:27 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-10 21:33:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-10 21:33:27 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-10 21:33:27 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 21:33:27 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20a9fb01] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5bb90b89]
2024-07-10 21:33:27 - Checking 0 named HQL queries
2024-07-10 21:33:27 - Checking 0 named SQL queries
2024-07-10 21:33:27 - drop table if exists task cascade 
2024-07-10 21:33:27 - drop table if exists users cascade 
2024-07-10 21:33:27 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-10 21:33:27 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-10 21:33:27 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-10 21:33:27 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b2114ce
2024-07-10 21:33:27 - Registering SessionFactory: 3458f785-0764-4640-8d23-e065482e09dc (<unnamed>)
2024-07-10 21:33:27 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-10 21:33:27 - Instantiated SessionFactory
2024-07-10 21:33:27 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 21:33:27 - Statistics initialized [enabled=false]
2024-07-10 21:33:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:33:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:33:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:33:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-10 21:33:28 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 21:33:28 - 

Using generated security password: 7c393534-7711-4a57-9bcc-a39a55a19770

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-10 21:33:28 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-10 21:33:28 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-10 21:33:28 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-10 21:33:28 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-10 21:33:28 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 21:33:28 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-10 21:33:29 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-10 21:33:29 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-10 21:33:29 - Tomcat started on port 8080 (http) with context path '/'
2024-07-10 21:33:29 - Started TaskmanagementApplication in 5.775 seconds (process running for 6.268)
2024-07-10 21:33:29 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 21:33:29 - Initializing Servlet 'dispatcherServlet'
2024-07-10 21:33:29 - Detected StandardServletMultipartResolver
2024-07-10 21:33:29 - Detected AcceptHeaderLocaleResolver
2024-07-10 21:33:29 - Detected FixedThemeResolver
2024-07-10 21:33:29 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3cd6cab5
2024-07-10 21:33:29 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4df8f4e9
2024-07-10 21:33:29 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-10 21:33:29 - Completed initialization in 1 ms
2024-07-10 21:34:10 - Securing POST /api/users/register
2024-07-10 21:34:10 - Secured POST /api/users/register
2024-07-10 21:34:10 - POST "/api/users/register", parameters={}
2024-07-10 21:34:10 - Mapped to com.example.taskmanagement.controller.UserController#registerUser(User)
2024-07-10 21:34:10 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@5b8d4298]
2024-07-10 21:34:10 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-10 21:34:10 - begin
2024-07-10 21:34:10 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-10 21:34:10 - Executing identity-insert immediately
2024-07-10 21:34:10 - insert into users (email,password,username,id) values (?,?,?,default)
2024-07-10 21:34:10 - Initializer list is empty
2024-07-10 21:34:10 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@70e40e5e
2024-07-10 21:34:10 - Extracted JDBC value [0] - [1]
2024-07-10 21:34:10 - Extracted generated values [com.example.taskmanagement.model.User]: [Ljava.lang.Object;@2b843225
2024-07-10 21:34:11 - committing
2024-07-10 21:34:11 - Processing flush-time cascades
2024-07-10 21:34:11 - Dirty checking collections
2024-07-10 21:34:11 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-07-10 21:34:11 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-10 21:34:11 - Listing entities:
2024-07-10 21:34:11 - com.example.taskmanagement.model.User{password=$2a$10$2Dt3dqeT3FCdxOI6DFxqYe//qtcHpZuP6oY3OWlNweJHYTYB7fzgm, id=1, email=testuser@example.com, tasks=null, username=testuser}
2024-07-10 21:34:11 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-10 21:34:11 - Writing [com.example.taskmanagement.model.User@5b8d4298]
2024-07-10 21:34:11 - Completed 200 OK
2024-07-10 21:34:11 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:14:19 - Starting TaskmanagementApplication using Java 22.0.1 with PID 27772 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 09:14:19 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 09:14:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 09:14:20 - Finished Spring Data repository scanning in 58 ms. Found 2 JPA repository interfaces.
2024-07-11 09:14:21 - Tomcat initialized with port 8080 (http)
2024-07-11 09:14:21 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 09:14:21 - Starting service [Tomcat]
2024-07-11 09:14:21 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 09:14:21 - Initializing Spring embedded WebApplicationContext
2024-07-11 09:14:21 - Root WebApplicationContext: initialization completed in 2173 ms
2024-07-11 09:14:21 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 09:14:21 - HikariPool-1 - Starting...
2024-07-11 09:14:22 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:0d9be61e-4f9f-4df2-b32a-13f6a4ee45a5 user=SA
2024-07-11 09:14:22 - HikariPool-1 - Start completed.
2024-07-11 09:14:22 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-11 09:14:22 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-11 09:14:22 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 09:14:22 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 09:14:22 - HHH000206: 'hibernate.properties' not found
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 09:14:22 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 09:14:22 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 09:14:22 - HHH000026: Second-level cache disabled
2024-07-11 09:14:22 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-11 09:14:22 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-11 09:14:22 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-11 09:14:22 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-11 09:14:22 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-11 09:14:22 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@211da640
2024-07-11 09:14:22 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@211da640
2024-07-11 09:14:22 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2ec92631
2024-07-11 09:14:22 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2ec92631
2024-07-11 09:14:22 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-11 09:14:22 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-11 09:14:22 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-11 09:14:22 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-11 09:14:22 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-11 09:14:22 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-11 09:14:22 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@294ebe11
2024-07-11 09:14:22 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@294ebe11
2024-07-11 09:14:22 - Adding type registration image -> org.hibernate.type.BasicTypeReference@4e51eda7
2024-07-11 09:14:22 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-11 09:14:22 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-11 09:14:22 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@2419fe6f
2024-07-11 09:14:22 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@78fb72cb
2024-07-11 09:14:22 - Adding type registration short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-11 09:14:22 - Adding type registration short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-11 09:14:22 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-11 09:14:22 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-11 09:14:22 - Adding type registration int -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-11 09:14:22 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-11 09:14:22 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-11 09:14:22 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-11 09:14:22 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-11 09:14:22 - Adding type registration float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-11 09:14:22 - Adding type registration float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-11 09:14:22 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-11 09:14:22 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-11 09:14:22 - Adding type registration double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-11 09:14:22 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@45849604
2024-07-11 09:14:22 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6cbbfe29
2024-07-11 09:14:22 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6cbbfe29
2024-07-11 09:14:22 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@25823192
2024-07-11 09:14:22 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@25823192
2024-07-11 09:14:22 - Adding type registration character -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-11 09:14:22 - Adding type registration char -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-11 09:14:22 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-11 09:14:22 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-11 09:14:22 - Adding type registration string -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-11 09:14:22 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-11 09:14:22 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5be69f7e
2024-07-11 09:14:22 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-11 09:14:22 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-11 09:14:22 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-11 09:14:22 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-11 09:14:22 - Adding type registration text -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-11 09:14:22 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-11 09:14:22 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-11 09:14:22 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-11 09:14:22 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-11 09:14:22 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-11 09:14:22 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-11 09:14:22 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6b0ba697
2024-07-11 09:14:22 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-11 09:14:22 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-11 09:14:22 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-11 09:14:22 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-11 09:14:22 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-11 09:14:22 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-11 09:14:22 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-11 09:14:22 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-11 09:14:22 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-11 09:14:22 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-11 09:14:22 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-11 09:14:22 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-11 09:14:22 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-11 09:14:22 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-11 09:14:22 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-11 09:14:22 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-11 09:14:22 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-11 09:14:22 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-11 09:14:22 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-11 09:14:22 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2168def
2024-07-11 09:14:22 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-11 09:14:22 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-11 09:14:22 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-11 09:14:22 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-11 09:14:22 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-11 09:14:22 - Adding type registration date -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-11 09:14:22 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-11 09:14:22 - Adding type registration time -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-11 09:14:22 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-11 09:14:22 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-11 09:14:22 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-11 09:14:22 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-11 09:14:22 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-11 09:14:22 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-11 09:14:22 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@163df259
2024-07-11 09:14:22 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-11 09:14:22 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c3cd13a
2024-07-11 09:14:22 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-11 09:14:22 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-11 09:14:22 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-11 09:14:22 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-11 09:14:22 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-11 09:14:22 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-11 09:14:22 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-11 09:14:22 - Adding type registration class -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-11 09:14:22 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-11 09:14:22 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-11 09:14:22 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-11 09:14:22 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-11 09:14:22 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-11 09:14:22 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-11 09:14:22 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-11 09:14:22 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-11 09:14:22 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-11 09:14:22 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-11 09:14:22 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-11 09:14:22 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-11 09:14:22 - Adding type registration url -> org.hibernate.type.BasicTypeReference@d180961
2024-07-11 09:14:22 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@d180961
2024-07-11 09:14:22 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4af7ac25
2024-07-11 09:14:22 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-11 09:14:22 - Adding type registration object -> org.hibernate.type.JavaObjectType@611a2d82
2024-07-11 09:14:22 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@611a2d82
2024-07-11 09:14:22 - Adding type registration null -> org.hibernate.type.NullType@5f67181f
2024-07-11 09:14:22 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1169fdfd
2024-07-11 09:14:22 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@75add13c
2024-07-11 09:14:22 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@224d537d
2024-07-11 09:14:22 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@450d10cb
2024-07-11 09:14:22 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1bd59b82
2024-07-11 09:14:22 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6a9df5
2024-07-11 09:14:22 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@48f4f03e
2024-07-11 09:14:22 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65d23aa3
2024-07-11 09:14:22 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e] into BootstrapContext; was [null]
2024-07-11 09:14:22 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e) [was null]
2024-07-11 09:14:22 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@74e4be21] into BootstrapContext; was [null]
2024-07-11 09:14:22 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4d174189] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@628bd77e]
2024-07-11 09:14:22 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 09:14:22 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e]
2024-07-11 09:14:22 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@213ceb4e]
2024-07-11 09:14:22 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-11 09:14:22 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-11 09:14:22 - JDBC version : 4.2
2024-07-11 09:14:22 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-11 09:14:22 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-11 09:14:22 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-11 09:14:22 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-11 09:14:22 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-11 09:14:22 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 09:14:22 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 09:14:22 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-11 09:14:22 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-11 09:14:22 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 09:14:22 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 09:14:22 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20a9fb01] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19fc0ef7]
2024-07-11 09:14:22 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 09:14:22 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-11 09:14:22 - Import with entity name Task
2024-07-11 09:14:22 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-11 09:14:22 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 09:14:22 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 09:14:22 - MetadataSourceProcessor property id with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-11 09:14:22 - building BasicValue for id
2024-07-11 09:14:22 - Skipping column re-registration: task.id
2024-07-11 09:14:22 - Building property id
2024-07-11 09:14:22 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property category with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-11 09:14:22 - building BasicValue for category
2024-07-11 09:14:22 - Skipping column re-registration: task.category
2024-07-11 09:14:22 - Building property category
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-11 09:14:22 - building BasicValue for createdAt
2024-07-11 09:14:22 - Skipping column re-registration: task.created_at
2024-07-11 09:14:22 - Building property createdAt
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property description with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-11 09:14:22 - building BasicValue for description
2024-07-11 09:14:22 - Skipping column re-registration: task.description
2024-07-11 09:14:22 - Building property description
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property priority with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-11 09:14:22 - building BasicValue for priority
2024-07-11 09:14:22 - Skipping column re-registration: task.priority
2024-07-11 09:14:22 - Building property priority
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property title with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-11 09:14:22 - building BasicValue for title
2024-07-11 09:14:22 - Skipping column re-registration: task.title
2024-07-11 09:14:22 - Building property title
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-11 09:14:22 - building BasicValue for updatedAt
2024-07-11 09:14:22 - Skipping column re-registration: task.updated_at
2024-07-11 09:14:22 - Building property updatedAt
2024-07-11 09:14:22 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - Building property user
2024-07-11 09:14:22 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 09:14:22 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-11 09:14:22 - Import with entity name User
2024-07-11 09:14:22 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-11 09:14:22 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 09:14:22 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 09:14:22 - MetadataSourceProcessor property id with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-11 09:14:22 - building BasicValue for id
2024-07-11 09:14:22 - Skipping column re-registration: users.id
2024-07-11 09:14:22 - Building property id
2024-07-11 09:14:22 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property email with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-11 09:14:22 - building BasicValue for email
2024-07-11 09:14:22 - Skipping column re-registration: users.email
2024-07-11 09:14:22 - Building property email
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property password with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-11 09:14:22 - building BasicValue for password
2024-07-11 09:14:22 - Skipping column re-registration: users.password
2024-07-11 09:14:22 - Building property password
2024-07-11 09:14:22 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-11 09:14:22 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-11 09:14:22 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:14:22 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:14:22 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-11 09:14:22 - Building property tasks
2024-07-11 09:14:22 - Binding column: AnnotatedColumn()
2024-07-11 09:14:22 - MetadataSourceProcessor property username with lazy=false
2024-07-11 09:14:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-11 09:14:22 - building BasicValue for username
2024-07-11 09:14:22 - Skipping column re-registration: users.username
2024-07-11 09:14:22 - Building property username
2024-07-11 09:14:22 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-11 09:14:22 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-11 09:14:22 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-11 09:14:22 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-11 09:14:22 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 09:14:22 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-11 09:14:22 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-11 09:14:22 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-11 09:14:22 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-11 09:14:22 - Building session factory
2024-07-11 09:14:22 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 09:14:22 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@49222187, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5e41e6ad, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.13708474744099337953, com.sun.management.jmxremote.port=50866, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=27772, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.13708474744099337953, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2665a2e7, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-11 09:14:22 - Session factory constructed with filter configurations : {}
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7901a5ab] under count; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@391e2a] under every; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@641cea11] under any; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fccd98f] under sinh; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@309e7215] under cosh; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b30b6f8] under tanh; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e965426] under pi; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@575fe6da] under log; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : length -> character_length
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@299dd381] under position; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@123d0816] under overlay; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5543d800] under trim; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5d01a2eb] under cast; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fe337a5] under collate; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@655f92a1] under extract; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@637c8632] under ifnull; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@37ab1b10] under pad; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@34f8ce89] under str; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3fdede3a] under format; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2bc0603f] under timestampadd; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5a45c218] under timestampdiff; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : dateadd -> timestampadd
2024-07-11 09:14:22 - Registering alternate key : datediff -> timestampdiff
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3163e03b] under current_date; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6aa18912] under current_time; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c20505f] under current_timestamp; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : current date -> current_date
2024-07-11 09:14:22 - Registering alternate key : current time -> current_time
2024-07-11 09:14:22 - Registering alternate key : current timestamp -> current_timestamp
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cce92b5] under local_date; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2202c92f] under local_time; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@440d2d64] under local_datetime; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a712f12] under offset_datetime; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : local date -> local_date
2024-07-11 09:14:22 - Registering alternate key : local time -> local_time
2024-07-11 09:14:22 - Registering alternate key : local datetime -> local_datetime
2024-07-11 09:14:22 - Registering alternate key : offset datetime -> offset_datetime
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62525dd3] under instant; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : current_instant -> instant
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@18301763] under sql; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@237ee2e1] under count; prior registration was org.hibernate.dialect.function.CountFunction@7901a5ab
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@29c21acb] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e965426
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4113d9ab] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : day -> day_of_month
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2202c92f
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@440d2d64
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1abea1ed] under trunc; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : truncate -> trunc
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f5288c5] under date_trunc; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : chr -> char
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a9ef32e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@299dd381
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e2ee348] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : every -> bool_and
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-11 09:14:22 - Registering alternate key : any -> bool_or
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@61f08aa9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3fdede3a
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4853f592] under listagg; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@573f2e67] under mode; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d449307] under percentile_cont; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@44e7c06b] under percentile_disc; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@9715d26] under rank; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6d8096ee] under dense_rank; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@35d8ba22] under percent_rank; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fc051ce] under cume_dist; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@7a78d2aa] under array; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@254d8ef6] under array_list; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@76219fe] under array_agg; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@4c0ab04f] under array_position; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@774189d0] under array_positions; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@1bcf2c64] under array_positions_list; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@b5bddfe] under array_length; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@5ca3acad] under array_concat; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@583b4af4] under array_prepend; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@72c175f1] under array_append; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@1ddc889b] under array_contains; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@5ec3689b] under array_contains_nullable; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@45964b9e] under array_overlaps; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@166a5659] under array_overlaps_nullable; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a72925] under array_get; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@4f0cdd0f] under array_set; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@44df834c] under array_remove; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@73417494] under array_remove_index; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29b0c169] under array_slice; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@76ee7301] under array_replace; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71817f66] under array_trim; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@75df4b1d] under array_fill; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@43120a77] under array_fill_list; prior registration was null
2024-07-11 09:14:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@2941631f] under array_to_string; prior registration was null
2024-07-11 09:14:22 - abs(NUMERIC arg)
2024-07-11 09:14:22 - Double acos(NUMERIC arg)
2024-07-11 09:14:22 - Boolean any(BOOLEAN predicate)
2024-07-11 09:14:22 - array( ... )
2024-07-11 09:14:22 - array_agg(arg)
2024-07-11 09:14:22 - array_append( ... )
2024-07-11 09:14:22 - array_concat( ... )
2024-07-11 09:14:22 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-11 09:14:22 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-11 09:14:22 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-11 09:14:22 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-11 09:14:22 - array_get(ARRAY array, INTEGER index)
2024-07-11 09:14:22 - Integer array_length(ARRAY array)
2024-07-11 09:14:22 - array_list( ... )
2024-07-11 09:14:22 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-11 09:14:22 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-11 09:14:22 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-11 09:14:22 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-11 09:14:22 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-11 09:14:22 - array_prepend( ... )
2024-07-11 09:14:22 - array_remove( ... )
2024-07-11 09:14:22 - array_remove_index( ... )
2024-07-11 09:14:22 - array_replace( ... )
2024-07-11 09:14:22 - array_set( ... )
2024-07-11 09:14:22 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-11 09:14:22 - String array_to_string( ... )
2024-07-11 09:14:22 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-11 09:14:22 - Integer ascii(STRING arg)
2024-07-11 09:14:22 - Double asin(NUMERIC arg)
2024-07-11 09:14:22 - Double atan(NUMERIC arg)
2024-07-11 09:14:22 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-11 09:14:22 - avg(NUMERIC arg)
2024-07-11 09:14:22 - bit_and(arg)
2024-07-11 09:14:22 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-11 09:14:22 - bit_or(arg)
2024-07-11 09:14:22 - bitand(arg0, arg1)
2024-07-11 09:14:22 - bitnot(arg)
2024-07-11 09:14:22 - bitor(arg0, arg1)
2024-07-11 09:14:22 - bitxor(arg0, arg1)
2024-07-11 09:14:22 - Boolean bool_and(BOOLEAN predicate)
2024-07-11 09:14:22 - Boolean bool_or(BOOLEAN predicate)
2024-07-11 09:14:22 - cast(arg as Type)
2024-07-11 09:14:22 - ceiling(NUMERIC arg)
2024-07-11 09:14:22 - Character char(INTEGER arg)
2024-07-11 09:14:22 - Integer character_length(STRING_OR_CLOB arg)
2024-07-11 09:14:22 - Character chr(INTEGER arg)
2024-07-11 09:14:22 - coalesce(arg0[, arg1[, ...]])
2024-07-11 09:14:22 - String collate(STRING string as COLLATION collation)
2024-07-11 09:14:22 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-11 09:14:22 - Double cos(NUMERIC arg)
2024-07-11 09:14:22 - Double cosh(NUMERIC arg)
2024-07-11 09:14:22 - Double cot(NUMERIC arg)
2024-07-11 09:14:22 - Long count([distinct ]{arg|*})
2024-07-11 09:14:22 - Double cume_dist([arg0[, ...]])
2024-07-11 09:14:22 - Date curdate()
2024-07-11 09:14:22 - Date current date
2024-07-11 09:14:22 - Time current time
2024-07-11 09:14:22 - Timestamp current timestamp
2024-07-11 09:14:22 - Date current_date
2024-07-11 09:14:22 - Instant current_instant
2024-07-11 09:14:22 - Time current_time
2024-07-11 09:14:22 - Timestamp current_timestamp
2024-07-11 09:14:22 - Time curtime()
2024-07-11 09:14:22 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-11 09:14:22 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 09:14:22 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 09:14:22 - Integer day(DATE arg)
2024-07-11 09:14:22 - Integer day_of_month(DATE arg)
2024-07-11 09:14:22 - Integer day_of_week(DATE arg)
2024-07-11 09:14:22 - Integer day_of_year(DATE arg)
2024-07-11 09:14:22 - String dayname(DATE arg)
2024-07-11 09:14:22 - Double degrees(NUMERIC arg)
2024-07-11 09:14:22 - Long dense_rank([arg0[, ...]])
2024-07-11 09:14:22 - Boolean every(BOOLEAN predicate)
2024-07-11 09:14:22 - Double exp(NUMERIC arg)
2024-07-11 09:14:22 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-11 09:14:22 - first_valueANY value
2024-07-11 09:14:22 - floor(NUMERIC arg)
2024-07-11 09:14:22 - String format(TEMPORAL datetime as STRING pattern)
2024-07-11 09:14:22 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 09:14:22 - Integer hour(TIME arg)
2024-07-11 09:14:22 - ifnull(arg0, arg1)
2024-07-11 09:14:22 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-11 09:14:22 - Instant instant
2024-07-11 09:14:22 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-11 09:14:22 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-11 09:14:22 - last_valueANY value
2024-07-11 09:14:22 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-11 09:14:22 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 09:14:22 - String left(STRING string, INTEGER length)
2024-07-11 09:14:22 - Integer length(STRING_OR_CLOB arg)
2024-07-11 09:14:22 - String listagg(STRING arg0, STRING arg1)
2024-07-11 09:14:22 - Double ln(NUMERIC arg)
2024-07-11 09:14:22 - LocalDate local date
2024-07-11 09:14:22 - LocalDateTime local datetime
2024-07-11 09:14:22 - LocalTime local time
2024-07-11 09:14:22 - LocalDate local_date
2024-07-11 09:14:22 - LocalDateTime local_datetime
2024-07-11 09:14:22 - LocalTime local_time
2024-07-11 09:14:22 - Time localtime
2024-07-11 09:14:22 - Timestamp localtimestamp
2024-07-11 09:14:22 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-11 09:14:22 - Double log(NUMERIC base, NUMERIC arg)
2024-07-11 09:14:22 - Double log10(NUMERIC arg)
2024-07-11 09:14:22 - String lower(STRING string)
2024-07-11 09:14:22 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-11 09:14:22 - String ltrim(STRING string)
2024-07-11 09:14:22 - max(COMPARABLE arg)
2024-07-11 09:14:22 - Double median(NUMERIC arg)
2024-07-11 09:14:22 - Integer microsecond(TIME arg)
2024-07-11 09:14:22 - min(COMPARABLE arg)
2024-07-11 09:14:22 - Integer minute(TIME arg)
2024-07-11 09:14:22 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-11 09:14:22 - mode()
2024-07-11 09:14:22 - Integer month(DATE arg)
2024-07-11 09:14:22 - String monthname(DATE arg)
2024-07-11 09:14:22 - Timestamp now()
2024-07-11 09:14:22 - nth_valueANY value, INTEGER nth
2024-07-11 09:14:22 - nullif(arg0, arg1)
2024-07-11 09:14:22 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-11 09:14:22 - OffsetDateTime offset datetime
2024-07-11 09:14:22 - OffsetDateTime offset_datetime
2024-07-11 09:14:22 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-11 09:14:22 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-11 09:14:22 - Double percent_rank([arg0[, ...]])
2024-07-11 09:14:22 - percentile_cont(NUMERIC arg)
2024-07-11 09:14:22 - percentile_disc(NUMERIC arg)
2024-07-11 09:14:22 - Double pi
2024-07-11 09:14:22 - Integer position(STRING pattern in STRING string)
2024-07-11 09:14:22 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-11 09:14:22 - Integer quarter(DATE arg)
2024-07-11 09:14:22 - Double radians(NUMERIC arg)
2024-07-11 09:14:22 - Double rand([INTEGER seed])
2024-07-11 09:14:22 - Long rank([arg0[, ...]])
2024-07-11 09:14:22 - String repeat(STRING string, INTEGER times)
2024-07-11 09:14:22 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-11 09:14:22 - String right(STRING string, INTEGER length)
2024-07-11 09:14:22 - round(NUMERIC number[, INTEGER places])
2024-07-11 09:14:22 - Long row_number()
2024-07-11 09:14:22 - Long rownum()
2024-07-11 09:14:22 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-11 09:14:22 - String rtrim(STRING string)
2024-07-11 09:14:22 - Integer second(TIME arg)
2024-07-11 09:14:22 - Integer sign(NUMERIC arg)
2024-07-11 09:14:22 - Double sin(NUMERIC arg)
2024-07-11 09:14:22 - Double sinh(NUMERIC arg)
2024-07-11 09:14:22 - String soundex(arg)
2024-07-11 09:14:22 - String space(INTEGER arg)
2024-07-11 09:14:22 - Object sql
2024-07-11 09:14:22 - Double sqrt(NUMERIC arg)
2024-07-11 09:14:22 - Double stddev_pop(NUMERIC arg)
2024-07-11 09:14:22 - Double stddev_samp(NUMERIC arg)
2024-07-11 09:14:22 - String str(arg)
2024-07-11 09:14:22 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-11 09:14:22 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-11 09:14:22 - sum(arg)
2024-07-11 09:14:22 - Timestamp sysdate
2024-07-11 09:14:22 - Double tan(NUMERIC arg)
2024-07-11 09:14:22 - Double tanh(NUMERIC arg)
2024-07-11 09:14:22 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 09:14:22 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 09:14:22 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-11 09:14:22 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-11 09:14:22 - trunc( ... )
2024-07-11 09:14:22 - truncate( ... )
2024-07-11 09:14:22 - String upper(STRING string)
2024-07-11 09:14:22 - Double var_pop(NUMERIC arg)
2024-07-11 09:14:22 - Double var_samp(NUMERIC arg)
2024-07-11 09:14:22 - Integer week(DATE arg)
2024-07-11 09:14:22 - Integer year(DATE arg)
2024-07-11 09:14:22 - Starting QueryInterpretationCache(2048)
2024-07-11 09:14:22 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 09:14:22 - Configured EntityCopyObserver strategy: disallow
2024-07-11 09:14:23 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 09:14:23 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 09:14:23 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-11 09:14:23 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 09:14:23 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 09:14:23 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-11 09:14:23 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-11 09:14:23 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-11 09:14:23 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-11 09:14:23 - Starting post-init callbacks
2024-07-11 09:14:23 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 09:14:23 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-11 09:14:23 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-11 09:14:23 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-11 09:14:23 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-11 09:14:23 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-11 09:14:23 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 09:14:23 - Created new SQL alias : u1_0
2024-07-11 09:14:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 09:14:23 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-11 09:14:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 09:14:23 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-11 09:14:23 -  Version select: select id from users where id=?
2024-07-11 09:14:23 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-11 09:14:23 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-11 09:14:23 -  Delete (0): delete from users where id=?
2024-07-11 09:14:23 - Created new SQL alias : t1_0
2024-07-11 09:14:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 09:14:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@363ee411] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 09:14:23 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-11 09:14:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-11 09:14:23 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-11 09:14:23 -  Version select: select id from task where id=?
2024-07-11 09:14:23 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-11 09:14:23 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 09:14:23 -  Delete (0): delete from task where id=?
2024-07-11 09:14:23 - Created new SQL alias : t1_0
2024-07-11 09:14:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@288e50c1] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-11 09:14:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-11 09:14:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b6fc231] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-11 09:14:23 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-11 09:14:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-11 09:14:23 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 09:14:23 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 09:14:23 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@20a9fb01] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2220c5f7]
2024-07-11 09:14:23 - Checking 0 named HQL queries
2024-07-11 09:14:23 - Checking 0 named SQL queries
2024-07-11 09:14:23 - drop table if exists task cascade 
2024-07-11 09:14:23 - drop table if exists users cascade 
2024-07-11 09:14:23 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-11 09:14:23 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-11 09:14:23 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-11 09:14:23 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3ddc5a75
2024-07-11 09:14:23 - Registering SessionFactory: 65e4ba89-6792-4304-8992-d18d80a9435e (<unnamed>)
2024-07-11 09:14:23 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 09:14:23 - Instantiated SessionFactory
2024-07-11 09:14:23 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 09:14:23 - Statistics initialized [enabled=false]
2024-07-11 09:14:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:14:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:14:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:14:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:14:23 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 09:14:23 - 

Using generated security password: adc2b3cb-b4f4-4c9e-b791-cecd90ac140d

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-11 09:14:23 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-11 09:14:23 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-11 09:14:24 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-11 09:14:24 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-11 09:14:24 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 09:14:24 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-11 09:14:24 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-11 09:14:24 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-11 09:14:24 - Tomcat started on port 8080 (http) with context path '/'
2024-07-11 09:14:24 - Started TaskmanagementApplication in 5.816 seconds (process running for 6.316)
2024-07-11 09:14:25 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 09:14:25 - Initializing Servlet 'dispatcherServlet'
2024-07-11 09:14:25 - Detected StandardServletMultipartResolver
2024-07-11 09:14:25 - Detected AcceptHeaderLocaleResolver
2024-07-11 09:14:25 - Detected FixedThemeResolver
2024-07-11 09:14:25 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2154de40
2024-07-11 09:14:25 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4164ab12
2024-07-11 09:14:25 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-11 09:14:25 - Completed initialization in 1 ms
2024-07-11 09:16:48 - Securing POST /api/users/register
2024-07-11 09:16:48 - Secured POST /api/users/register
2024-07-11 09:16:48 - POST "/api/users/register", parameters={}
2024-07-11 09:16:48 - Mapped to com.example.taskmanagement.controller.UserController#registerUser(User)
2024-07-11 09:16:48 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@65d3af7d]
2024-07-11 09:16:48 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 09:16:48 - begin
2024-07-11 09:16:48 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 09:16:48 - Executing identity-insert immediately
2024-07-11 09:16:48 - insert into users (email,password,username,id) values (?,?,?,default)
2024-07-11 09:16:48 - Initializer list is empty
2024-07-11 09:16:48 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@3435462a
2024-07-11 09:16:48 - Extracted JDBC value [0] - [1]
2024-07-11 09:16:48 - Extracted generated values [com.example.taskmanagement.model.User]: [Ljava.lang.Object;@1ab758e
2024-07-11 09:16:48 - committing
2024-07-11 09:16:48 - Processing flush-time cascades
2024-07-11 09:16:48 - Dirty checking collections
2024-07-11 09:16:48 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-07-11 09:16:48 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-11 09:16:48 - Listing entities:
2024-07-11 09:16:48 - com.example.taskmanagement.model.User{password=$2a$10$exf9FUbIGXoDfcsYDt3Lue3pzC4lditp6YL6/XDdog/ILjGLM.EDq, id=1, email=testuser@example.com, tasks=null, username=testuser}
2024-07-11 09:16:48 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 09:16:48 - Writing [com.example.taskmanagement.model.User@65d3af7d]
2024-07-11 09:16:48 - Completed 200 OK
2024-07-11 09:16:48 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:17:21 - Securing GET /api/users/login?vscodeBrowserReqId=1720660641705
2024-07-11 09:17:21 - Secured GET /api/users/login?vscodeBrowserReqId=1720660641705
2024-07-11 09:17:21 - GET "/api/users/login?vscodeBrowserReqId=1720660641705", parameters={masked}
2024-07-11 09:17:21 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-11 09:17:21 - Completed 405 METHOD_NOT_ALLOWED
2024-07-11 09:17:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:17:21 - Securing GET /error?vscodeBrowserReqId=1720660641705
2024-07-11 09:17:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:17:21 - Saved request http://127.0.0.1:8080/error?vscodeBrowserReqId=1720660641705&continue to session
2024-07-11 09:17:21 - Pre-authenticated entry point called. Rejecting access
2024-07-11 09:17:48 - Securing POST /api/users/login
2024-07-11 09:17:48 - Secured POST /api/users/login
2024-07-11 09:17:48 - POST "/api/users/login", parameters={}
2024-07-11 09:17:48 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-11 09:17:48 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@4d528faa]
2024-07-11 09:17:48 - Created new SQL alias : u1_0
2024-07-11 09:17:48 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(648474441500))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 09:17:48 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@45912259
2024-07-11 09:17:48 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(648474441500).username) 
2024-07-11 09:17:48 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(648474441500)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(648474441500).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(648474441500).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(648474441500).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(648474441500).username]

2024-07-11 09:17:48 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(648474441500)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 09:17:48 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-11 09:17:48 - Initializer list:
	  com.example.taskmanagement.model.User(648474441500).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(648474441500).tasks)@1692320610 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User(648474441500) -> EntityResultInitializer(com.example.taskmanagement.model.User(648474441500))@943476925 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 09:17:48 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-11 09:17:48 - Extracted JDBC value [0] - [1]
2024-07-11 09:17:48 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(648474441500)): 1
2024-07-11 09:17:48 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(648474441500).tasks#1
2024-07-11 09:17:48 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(648474441500)#1] : 233424546
2024-07-11 09:17:48 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 09:17:48 - Extracted JDBC value [2] - [$2a$10$exf9FUbIGXoDfcsYDt3Lue3pzC4lditp6YL6/XDdog/ILjGLM.EDq]
2024-07-11 09:17:48 - Extracted JDBC value [3] - [testuser]
2024-07-11 09:17:48 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(648474441500)#1
2024-07-11 09:17:48 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67802245
2024-07-11 09:17:48 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-11 09:17:48 - Writing ["Login successful!"]
2024-07-11 09:17:48 - Completed 200 OK
2024-07-11 09:17:48 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:18:25 - Securing POST /api/tasks
2024-07-11 09:18:25 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:18:25 - Saved request http://localhost:8080/api/tasks?continue to session
2024-07-11 09:18:25 - Pre-authenticated entry point called. Rejecting access
2024-07-11 09:18:25 - Securing POST /error
2024-07-11 09:18:25 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:18:25 - Saved request http://localhost:8080/error?continue to session
2024-07-11 09:18:25 - Pre-authenticated entry point called. Rejecting access
2024-07-11 09:19:28 - Starting TaskmanagementApplication using Java 22.0.1 with PID 10488 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 09:19:28 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 09:19:29 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 09:19:29 - Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2024-07-11 09:19:30 - Tomcat initialized with port 8080 (http)
2024-07-11 09:19:30 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 09:19:30 - Starting service [Tomcat]
2024-07-11 09:19:30 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 09:19:30 - Initializing Spring embedded WebApplicationContext
2024-07-11 09:19:30 - Root WebApplicationContext: initialization completed in 1532 ms
2024-07-11 09:19:30 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 09:19:30 - HikariPool-1 - Starting...
2024-07-11 09:19:30 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:636172ff-e428-48a6-8378-5dd0af97a236 user=SA
2024-07-11 09:19:30 - HikariPool-1 - Start completed.
2024-07-11 09:19:30 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-11 09:19:30 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-11 09:19:30 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 09:19:30 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 09:19:30 - HHH000206: 'hibernate.properties' not found
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 09:19:30 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 09:19:30 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 09:19:30 - HHH000026: Second-level cache disabled
2024-07-11 09:19:31 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e9b3b3c
2024-07-11 09:19:31 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e9b3b3c
2024-07-11 09:19:31 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3e9b3b3c
2024-07-11 09:19:31 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3c97f5e9
2024-07-11 09:19:31 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3c97f5e9
2024-07-11 09:19:31 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@32e7b78d
2024-07-11 09:19:31 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@32e7b78d
2024-07-11 09:19:31 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-11 09:19:31 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4583b617
2024-07-11 09:19:31 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-11 09:19:31 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-11 09:19:31 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@22a63740
2024-07-11 09:19:31 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@211da640
2024-07-11 09:19:31 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@211da640
2024-07-11 09:19:31 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@211da640
2024-07-11 09:19:31 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2ec92631
2024-07-11 09:19:31 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2ec92631
2024-07-11 09:19:31 - Adding type registration image -> org.hibernate.type.BasicTypeReference@76220ef1
2024-07-11 09:19:31 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-11 09:19:31 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@65ad2b42
2024-07-11 09:19:31 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@294ebe11
2024-07-11 09:19:31 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4e51eda7
2024-07-11 09:19:31 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-11 09:19:31 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-11 09:19:31 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2862271a
2024-07-11 09:19:31 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2419fe6f
2024-07-11 09:19:31 - Adding type registration int -> org.hibernate.type.BasicTypeReference@2419fe6f
2024-07-11 09:19:31 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2419fe6f
2024-07-11 09:19:31 - Adding type registration long -> org.hibernate.type.BasicTypeReference@78fb72cb
2024-07-11 09:19:31 - Adding type registration long -> org.hibernate.type.BasicTypeReference@78fb72cb
2024-07-11 09:19:31 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@78fb72cb
2024-07-11 09:19:31 - Adding type registration float -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-11 09:19:31 - Adding type registration float -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-11 09:19:31 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@398694a6
2024-07-11 09:19:31 - Adding type registration double -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-11 09:19:31 - Adding type registration double -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-11 09:19:31 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@653e7b
2024-07-11 09:19:31 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-11 09:19:31 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6b64429e
2024-07-11 09:19:31 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-11 09:19:31 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@48aa0813
2024-07-11 09:19:31 - Adding type registration character -> org.hibernate.type.BasicTypeReference@45849604
2024-07-11 09:19:31 - Adding type registration char -> org.hibernate.type.BasicTypeReference@45849604
2024-07-11 09:19:31 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@45849604
2024-07-11 09:19:31 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6cbbfe29
2024-07-11 09:19:31 - Adding type registration string -> org.hibernate.type.BasicTypeReference@25823192
2024-07-11 09:19:31 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@25823192
2024-07-11 09:19:31 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3df04fa1
2024-07-11 09:19:31 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-11 09:19:31 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-11 09:19:31 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-11 09:19:31 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-11 09:19:31 - Adding type registration text -> org.hibernate.type.BasicTypeReference@5be69f7e
2024-07-11 09:19:31 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-11 09:19:31 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-11 09:19:31 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-11 09:19:31 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-11 09:19:31 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-11 09:19:31 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-11 09:19:31 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-11 09:19:31 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-11 09:19:31 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-11 09:19:31 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6b0ba697
2024-07-11 09:19:31 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-11 09:19:31 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-11 09:19:31 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-11 09:19:31 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-11 09:19:31 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-11 09:19:31 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-11 09:19:31 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-11 09:19:31 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-11 09:19:31 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-11 09:19:31 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-11 09:19:31 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-11 09:19:31 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-11 09:19:31 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-11 09:19:31 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-11 09:19:31 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-11 09:19:31 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-11 09:19:31 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-11 09:19:31 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-11 09:19:31 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-11 09:19:31 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-11 09:19:31 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2168def
2024-07-11 09:19:31 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-11 09:19:31 - Adding type registration date -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-11 09:19:31 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-11 09:19:31 - Adding type registration time -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-11 09:19:31 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-11 09:19:31 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-11 09:19:31 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-11 09:19:31 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-11 09:19:31 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-11 09:19:31 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-11 09:19:31 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-11 09:19:31 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-11 09:19:31 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-11 09:19:31 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@163df259
2024-07-11 09:19:31 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@163df259
2024-07-11 09:19:31 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-11 09:19:31 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-11 09:19:31 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-11 09:19:31 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3c3cd13a
2024-07-11 09:19:31 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-11 09:19:31 - Adding type registration class -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-11 09:19:31 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-11 09:19:31 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-11 09:19:31 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-11 09:19:31 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-11 09:19:31 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-11 09:19:31 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-11 09:19:31 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-11 09:19:31 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-11 09:19:31 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@46188a89
2024-07-11 09:19:31 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@46188a89
2024-07-11 09:19:31 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-11 09:19:31 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-11 09:19:31 - Adding type registration url -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-11 09:19:31 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-11 09:19:31 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-11 09:19:31 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-11 09:19:31 - Adding type registration object -> org.hibernate.type.JavaObjectType@18b3db6e
2024-07-11 09:19:31 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@18b3db6e
2024-07-11 09:19:31 - Adding type registration null -> org.hibernate.type.NullType@4331be30
2024-07-11 09:19:31 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5cd71ee2
2024-07-11 09:19:31 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3dad535f
2024-07-11 09:19:31 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5f67181f
2024-07-11 09:19:31 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1169fdfd
2024-07-11 09:19:31 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@75add13c
2024-07-11 09:19:31 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@224d537d
2024-07-11 09:19:31 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@450d10cb
2024-07-11 09:19:31 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1bd59b82
2024-07-11 09:19:31 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@12421766] into BootstrapContext; was [null]
2024-07-11 09:19:31 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@12421766) [was null]
2024-07-11 09:19:31 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2bd2430f] into BootstrapContext; was [null]
2024-07-11 09:19:31 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2890e479] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6eb00cbe]
2024-07-11 09:19:31 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 09:19:31 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@12421766]
2024-07-11 09:19:31 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@12421766]
2024-07-11 09:19:31 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-11 09:19:31 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-11 09:19:31 - JDBC version : 4.2
2024-07-11 09:19:31 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-11 09:19:31 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-11 09:19:31 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-11 09:19:31 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-11 09:19:31 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-11 09:19:31 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 09:19:31 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 09:19:31 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-11 09:19:31 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-11 09:19:31 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 09:19:31 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 09:19:31 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@687fd6e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@266a47fd]
2024-07-11 09:19:31 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 09:19:31 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-11 09:19:31 - Import with entity name Task
2024-07-11 09:19:31 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-11 09:19:31 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 09:19:31 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 09:19:31 - MetadataSourceProcessor property id with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-11 09:19:31 - building BasicValue for id
2024-07-11 09:19:31 - Skipping column re-registration: task.id
2024-07-11 09:19:31 - Building property id
2024-07-11 09:19:31 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property category with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-11 09:19:31 - building BasicValue for category
2024-07-11 09:19:31 - Skipping column re-registration: task.category
2024-07-11 09:19:31 - Building property category
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-11 09:19:31 - building BasicValue for createdAt
2024-07-11 09:19:31 - Skipping column re-registration: task.created_at
2024-07-11 09:19:31 - Building property createdAt
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property description with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-11 09:19:31 - building BasicValue for description
2024-07-11 09:19:31 - Skipping column re-registration: task.description
2024-07-11 09:19:31 - Building property description
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property priority with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-11 09:19:31 - building BasicValue for priority
2024-07-11 09:19:31 - Skipping column re-registration: task.priority
2024-07-11 09:19:31 - Building property priority
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property title with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-11 09:19:31 - building BasicValue for title
2024-07-11 09:19:31 - Skipping column re-registration: task.title
2024-07-11 09:19:31 - Building property title
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-11 09:19:31 - building BasicValue for updatedAt
2024-07-11 09:19:31 - Skipping column re-registration: task.updated_at
2024-07-11 09:19:31 - Building property updatedAt
2024-07-11 09:19:31 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - Building property user
2024-07-11 09:19:31 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 09:19:31 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-11 09:19:31 - Import with entity name User
2024-07-11 09:19:31 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-11 09:19:31 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 09:19:31 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 09:19:31 - MetadataSourceProcessor property id with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-11 09:19:31 - building BasicValue for id
2024-07-11 09:19:31 - Skipping column re-registration: users.id
2024-07-11 09:19:31 - Building property id
2024-07-11 09:19:31 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property email with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-11 09:19:31 - building BasicValue for email
2024-07-11 09:19:31 - Skipping column re-registration: users.email
2024-07-11 09:19:31 - Building property email
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property password with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-11 09:19:31 - building BasicValue for password
2024-07-11 09:19:31 - Skipping column re-registration: users.password
2024-07-11 09:19:31 - Building property password
2024-07-11 09:19:31 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-11 09:19:31 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-11 09:19:31 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:19:31 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:19:31 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-11 09:19:31 - Building property tasks
2024-07-11 09:19:31 - Binding column: AnnotatedColumn()
2024-07-11 09:19:31 - MetadataSourceProcessor property username with lazy=false
2024-07-11 09:19:31 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-11 09:19:31 - building BasicValue for username
2024-07-11 09:19:31 - Skipping column re-registration: users.username
2024-07-11 09:19:31 - Building property username
2024-07-11 09:19:31 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-11 09:19:31 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-11 09:19:31 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-11 09:19:31 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-11 09:19:31 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 09:19:31 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-11 09:19:31 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-11 09:19:31 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-11 09:19:31 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-11 09:19:31 - Building session factory
2024-07-11 09:19:31 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 09:19:31 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3fa50a24, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@58041b11, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.8187583057650842847, com.sun.management.jmxremote.port=50866, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=10488, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.8187583057650842847, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@58189b85, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-11 09:19:31 - Session factory constructed with filter configurations : {}
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@639cb0c8] under count; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ba9ed19] under every; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3293030b] under any; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3055f310] under sinh; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b7c0f39] under cosh; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25b402ea] under tanh; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fccd98f] under pi; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@309e7215] under log; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : length -> character_length
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7d7c05fa] under position; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@64f613da] under overlay; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4601a148] under trim; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1c25deb0] under cast; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1be12e05] under collate; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7d60bd5a] under extract; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1d2d793d] under ifnull; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@156eeff1] under pad; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@55d87b73] under str; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@31f9f9b3] under format; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@41948c13] under timestampadd; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2b4ba2d9] under timestampdiff; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : dateadd -> timestampadd
2024-07-11 09:19:31 - Registering alternate key : datediff -> timestampdiff
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2c6efee3] under current_date; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57ac236a] under current_time; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4542af89] under current_timestamp; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : current date -> current_date
2024-07-11 09:19:31 - Registering alternate key : current time -> current_time
2024-07-11 09:19:31 - Registering alternate key : current timestamp -> current_timestamp
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3163e03b] under local_date; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6aa18912] under local_time; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c20505f] under local_datetime; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cce92b5] under offset_datetime; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : local date -> local_date
2024-07-11 09:19:31 - Registering alternate key : local time -> local_time
2024-07-11 09:19:31 - Registering alternate key : local datetime -> local_datetime
2024-07-11 09:19:31 - Registering alternate key : offset datetime -> offset_datetime
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2202c92f] under instant; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : current_instant -> instant
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@56adbb07] under sql; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7be6dabb] under count; prior registration was org.hibernate.dialect.function.CountFunction@639cb0c8
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@6e00d737] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fccd98f
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@656c0eae] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : day -> day_of_month
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6aa18912
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@5c20505f
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6b03c35c] under trunc; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : truncate -> trunc
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a05ff8e] under date_trunc; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : chr -> char
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@251e2f4a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7d7c05fa
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1abea1ed] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : every -> bool_and
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-11 09:19:31 - Registering alternate key : any -> bool_or
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6f5288c5] under format; prior registration was org.hibernate.dialect.function.FormatFunction@31f9f9b3
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@37b5a51c] under listagg; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3407ded1] under mode; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@63af52a6] under percentile_cont; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@10ae002e] under percentile_disc; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@24a807a9] under rank; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@aca594d] under dense_rank; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@736f2fb8] under percent_rank; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@9715d26] under cume_dist; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@4423692a] under array; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@2175d53f] under array_list; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@2a9e7b4d] under array_agg; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@468646ea] under array_position; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@7304ca87] under array_positions; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@32f45e15] under array_positions_list; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e7151b3] under array_length; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@1ba98508] under array_concat; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@1477d4e6] under array_prepend; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@30b97fcf] under array_append; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@43201f84] under array_contains; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@2c51c756] under array_contains_nullable; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@1db9c2cf] under array_overlaps; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@32e7df65] under array_overlaps_nullable; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1afabf06] under array_get; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@70f3bf00] under array_set; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@87f1201] under array_remove; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@236f3885] under array_remove_index; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14ee143a] under array_slice; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@703eead0] under array_replace; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@674fd531] under array_trim; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@76980c75] under array_fill; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@3696d12d] under array_fill_list; prior registration was null
2024-07-11 09:19:31 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@4930213b] under array_to_string; prior registration was null
2024-07-11 09:19:31 - abs(NUMERIC arg)
2024-07-11 09:19:31 - Double acos(NUMERIC arg)
2024-07-11 09:19:31 - Boolean any(BOOLEAN predicate)
2024-07-11 09:19:31 - array( ... )
2024-07-11 09:19:31 - array_agg(arg)
2024-07-11 09:19:31 - array_append( ... )
2024-07-11 09:19:31 - array_concat( ... )
2024-07-11 09:19:31 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-11 09:19:31 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-11 09:19:31 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-11 09:19:31 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-11 09:19:31 - array_get(ARRAY array, INTEGER index)
2024-07-11 09:19:31 - Integer array_length(ARRAY array)
2024-07-11 09:19:31 - array_list( ... )
2024-07-11 09:19:31 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-11 09:19:31 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-11 09:19:31 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-11 09:19:31 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-11 09:19:31 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-11 09:19:31 - array_prepend( ... )
2024-07-11 09:19:31 - array_remove( ... )
2024-07-11 09:19:31 - array_remove_index( ... )
2024-07-11 09:19:31 - array_replace( ... )
2024-07-11 09:19:31 - array_set( ... )
2024-07-11 09:19:31 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-11 09:19:31 - String array_to_string( ... )
2024-07-11 09:19:31 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-11 09:19:31 - Integer ascii(STRING arg)
2024-07-11 09:19:31 - Double asin(NUMERIC arg)
2024-07-11 09:19:31 - Double atan(NUMERIC arg)
2024-07-11 09:19:31 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-11 09:19:31 - avg(NUMERIC arg)
2024-07-11 09:19:31 - bit_and(arg)
2024-07-11 09:19:31 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-11 09:19:31 - bit_or(arg)
2024-07-11 09:19:31 - bitand(arg0, arg1)
2024-07-11 09:19:31 - bitnot(arg)
2024-07-11 09:19:31 - bitor(arg0, arg1)
2024-07-11 09:19:31 - bitxor(arg0, arg1)
2024-07-11 09:19:31 - Boolean bool_and(BOOLEAN predicate)
2024-07-11 09:19:31 - Boolean bool_or(BOOLEAN predicate)
2024-07-11 09:19:31 - cast(arg as Type)
2024-07-11 09:19:31 - ceiling(NUMERIC arg)
2024-07-11 09:19:31 - Character char(INTEGER arg)
2024-07-11 09:19:31 - Integer character_length(STRING_OR_CLOB arg)
2024-07-11 09:19:31 - Character chr(INTEGER arg)
2024-07-11 09:19:31 - coalesce(arg0[, arg1[, ...]])
2024-07-11 09:19:31 - String collate(STRING string as COLLATION collation)
2024-07-11 09:19:31 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-11 09:19:31 - Double cos(NUMERIC arg)
2024-07-11 09:19:31 - Double cosh(NUMERIC arg)
2024-07-11 09:19:31 - Double cot(NUMERIC arg)
2024-07-11 09:19:31 - Long count([distinct ]{arg|*})
2024-07-11 09:19:31 - Double cume_dist([arg0[, ...]])
2024-07-11 09:19:31 - Date curdate()
2024-07-11 09:19:31 - Date current date
2024-07-11 09:19:31 - Time current time
2024-07-11 09:19:31 - Timestamp current timestamp
2024-07-11 09:19:31 - Date current_date
2024-07-11 09:19:31 - Instant current_instant
2024-07-11 09:19:31 - Time current_time
2024-07-11 09:19:31 - Timestamp current_timestamp
2024-07-11 09:19:31 - Time curtime()
2024-07-11 09:19:31 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-11 09:19:31 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 09:19:31 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 09:19:31 - Integer day(DATE arg)
2024-07-11 09:19:31 - Integer day_of_month(DATE arg)
2024-07-11 09:19:31 - Integer day_of_week(DATE arg)
2024-07-11 09:19:31 - Integer day_of_year(DATE arg)
2024-07-11 09:19:31 - String dayname(DATE arg)
2024-07-11 09:19:31 - Double degrees(NUMERIC arg)
2024-07-11 09:19:31 - Long dense_rank([arg0[, ...]])
2024-07-11 09:19:31 - Boolean every(BOOLEAN predicate)
2024-07-11 09:19:31 - Double exp(NUMERIC arg)
2024-07-11 09:19:31 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-11 09:19:31 - first_valueANY value
2024-07-11 09:19:31 - floor(NUMERIC arg)
2024-07-11 09:19:31 - String format(TEMPORAL datetime as STRING pattern)
2024-07-11 09:19:31 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 09:19:31 - Integer hour(TIME arg)
2024-07-11 09:19:31 - ifnull(arg0, arg1)
2024-07-11 09:19:31 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-11 09:19:31 - Instant instant
2024-07-11 09:19:31 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-11 09:19:31 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-11 09:19:31 - last_valueANY value
2024-07-11 09:19:31 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-11 09:19:31 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 09:19:31 - String left(STRING string, INTEGER length)
2024-07-11 09:19:31 - Integer length(STRING_OR_CLOB arg)
2024-07-11 09:19:31 - String listagg(STRING arg0, STRING arg1)
2024-07-11 09:19:31 - Double ln(NUMERIC arg)
2024-07-11 09:19:31 - LocalDate local date
2024-07-11 09:19:31 - LocalDateTime local datetime
2024-07-11 09:19:31 - LocalTime local time
2024-07-11 09:19:31 - LocalDate local_date
2024-07-11 09:19:31 - LocalDateTime local_datetime
2024-07-11 09:19:31 - LocalTime local_time
2024-07-11 09:19:31 - Time localtime
2024-07-11 09:19:31 - Timestamp localtimestamp
2024-07-11 09:19:31 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-11 09:19:31 - Double log(NUMERIC base, NUMERIC arg)
2024-07-11 09:19:31 - Double log10(NUMERIC arg)
2024-07-11 09:19:31 - String lower(STRING string)
2024-07-11 09:19:31 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-11 09:19:31 - String ltrim(STRING string)
2024-07-11 09:19:31 - max(COMPARABLE arg)
2024-07-11 09:19:31 - Double median(NUMERIC arg)
2024-07-11 09:19:31 - Integer microsecond(TIME arg)
2024-07-11 09:19:31 - min(COMPARABLE arg)
2024-07-11 09:19:31 - Integer minute(TIME arg)
2024-07-11 09:19:31 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-11 09:19:31 - mode()
2024-07-11 09:19:31 - Integer month(DATE arg)
2024-07-11 09:19:31 - String monthname(DATE arg)
2024-07-11 09:19:31 - Timestamp now()
2024-07-11 09:19:31 - nth_valueANY value, INTEGER nth
2024-07-11 09:19:31 - nullif(arg0, arg1)
2024-07-11 09:19:31 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-11 09:19:31 - OffsetDateTime offset datetime
2024-07-11 09:19:31 - OffsetDateTime offset_datetime
2024-07-11 09:19:31 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-11 09:19:31 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-11 09:19:31 - Double percent_rank([arg0[, ...]])
2024-07-11 09:19:31 - percentile_cont(NUMERIC arg)
2024-07-11 09:19:31 - percentile_disc(NUMERIC arg)
2024-07-11 09:19:31 - Double pi
2024-07-11 09:19:31 - Integer position(STRING pattern in STRING string)
2024-07-11 09:19:31 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-11 09:19:31 - Integer quarter(DATE arg)
2024-07-11 09:19:31 - Double radians(NUMERIC arg)
2024-07-11 09:19:31 - Double rand([INTEGER seed])
2024-07-11 09:19:31 - Long rank([arg0[, ...]])
2024-07-11 09:19:31 - String repeat(STRING string, INTEGER times)
2024-07-11 09:19:31 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-11 09:19:31 - String right(STRING string, INTEGER length)
2024-07-11 09:19:31 - round(NUMERIC number[, INTEGER places])
2024-07-11 09:19:31 - Long row_number()
2024-07-11 09:19:31 - Long rownum()
2024-07-11 09:19:31 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-11 09:19:31 - String rtrim(STRING string)
2024-07-11 09:19:31 - Integer second(TIME arg)
2024-07-11 09:19:31 - Integer sign(NUMERIC arg)
2024-07-11 09:19:31 - Double sin(NUMERIC arg)
2024-07-11 09:19:31 - Double sinh(NUMERIC arg)
2024-07-11 09:19:31 - String soundex(arg)
2024-07-11 09:19:31 - String space(INTEGER arg)
2024-07-11 09:19:31 - Object sql
2024-07-11 09:19:31 - Double sqrt(NUMERIC arg)
2024-07-11 09:19:31 - Double stddev_pop(NUMERIC arg)
2024-07-11 09:19:31 - Double stddev_samp(NUMERIC arg)
2024-07-11 09:19:31 - String str(arg)
2024-07-11 09:19:31 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-11 09:19:31 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-11 09:19:31 - sum(arg)
2024-07-11 09:19:31 - Timestamp sysdate
2024-07-11 09:19:31 - Double tan(NUMERIC arg)
2024-07-11 09:19:31 - Double tanh(NUMERIC arg)
2024-07-11 09:19:31 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 09:19:31 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 09:19:31 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-11 09:19:31 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-11 09:19:31 - trunc( ... )
2024-07-11 09:19:31 - truncate( ... )
2024-07-11 09:19:31 - String upper(STRING string)
2024-07-11 09:19:31 - Double var_pop(NUMERIC arg)
2024-07-11 09:19:31 - Double var_samp(NUMERIC arg)
2024-07-11 09:19:31 - Integer week(DATE arg)
2024-07-11 09:19:31 - Integer year(DATE arg)
2024-07-11 09:19:31 - Starting QueryInterpretationCache(2048)
2024-07-11 09:19:31 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 09:19:31 - Configured EntityCopyObserver strategy: disallow
2024-07-11 09:19:31 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 09:19:31 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 09:19:31 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-11 09:19:31 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 09:19:31 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 09:19:31 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-11 09:19:31 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-11 09:19:31 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-11 09:19:31 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-11 09:19:31 - Starting post-init callbacks
2024-07-11 09:19:31 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 09:19:31 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-11 09:19:31 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-11 09:19:31 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-11 09:19:31 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-11 09:19:31 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-11 09:19:31 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 09:19:31 - Created new SQL alias : u1_0
2024-07-11 09:19:31 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 09:19:31 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-11 09:19:31 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 09:19:31 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-11 09:19:31 -  Version select: select id from users where id=?
2024-07-11 09:19:31 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-11 09:19:31 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-11 09:19:31 -  Delete (0): delete from users where id=?
2024-07-11 09:19:31 - Created new SQL alias : t1_0
2024-07-11 09:19:31 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 09:19:31 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@363ee411] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 09:19:31 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-11 09:19:31 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-11 09:19:31 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-11 09:19:31 -  Version select: select id from task where id=?
2024-07-11 09:19:31 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-11 09:19:31 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 09:19:31 -  Delete (0): delete from task where id=?
2024-07-11 09:19:31 - Created new SQL alias : t1_0
2024-07-11 09:19:31 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@288e50c1] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-11 09:19:31 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-11 09:19:31 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b6fc231] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-11 09:19:31 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-11 09:19:31 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-11 09:19:31 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 09:19:31 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 09:19:31 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@687fd6e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2220c5f7]
2024-07-11 09:19:31 - Checking 0 named HQL queries
2024-07-11 09:19:31 - Checking 0 named SQL queries
2024-07-11 09:19:31 - drop table if exists task cascade 
2024-07-11 09:19:31 - drop table if exists users cascade 
2024-07-11 09:19:31 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-11 09:19:31 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-11 09:19:31 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-11 09:19:31 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3ddc5a75
2024-07-11 09:19:31 - Registering SessionFactory: 4d9f0eca-a32f-4694-a9e7-4ba091f3248c (<unnamed>)
2024-07-11 09:19:31 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 09:19:31 - Instantiated SessionFactory
2024-07-11 09:19:31 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 09:19:32 - Statistics initialized [enabled=false]
2024-07-11 09:19:32 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:19:32 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:19:32 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:19:32 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:19:32 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 09:19:32 - 

Using generated security password: 7b66de7a-daa0-46f3-967a-210004a852ce

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-11 09:19:32 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-11 09:19:32 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-11 09:19:32 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-11 09:19:32 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-11 09:19:32 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 09:19:32 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-11 09:19:32 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-11 09:19:33 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-11 09:19:33 - Tomcat started on port 8080 (http) with context path '/'
2024-07-11 09:19:33 - Started TaskmanagementApplication in 4.984 seconds (process running for 5.405)
2024-07-11 09:19:34 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 09:19:34 - Initializing Servlet 'dispatcherServlet'
2024-07-11 09:19:34 - Detected StandardServletMultipartResolver
2024-07-11 09:19:34 - Detected AcceptHeaderLocaleResolver
2024-07-11 09:19:34 - Detected FixedThemeResolver
2024-07-11 09:19:34 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@428e875f
2024-07-11 09:19:34 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7ddd5715
2024-07-11 09:19:34 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-11 09:19:34 - Completed initialization in 0 ms
2024-07-11 09:19:37 - Securing POST /api/tasks
2024-07-11 09:19:37 - Secured POST /api/tasks
2024-07-11 09:19:37 - POST "/api/tasks", parameters={}
2024-07-11 09:19:37 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(Task, String)
2024-07-11 09:19:37 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.Task@21dae318]
2024-07-11 09:19:38 - Could not resolve parameter [1] in public com.example.taskmanagement.model.Task com.example.taskmanagement.controller.TaskController.createTask(com.example.taskmanagement.model.Task,java.lang.String): Required request parameter 'username' for method parameter type String is not present
2024-07-11 09:19:38 - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'username' for method parameter type String is not present]
2024-07-11 09:19:38 - Completed 400 BAD_REQUEST
2024-07-11 09:19:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:19:38 - Securing POST /error
2024-07-11 09:19:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:19:38 - Saved request http://localhost:8080/error?continue to session
2024-07-11 09:19:38 - Pre-authenticated entry point called. Rejecting access
2024-07-11 09:19:51 - Securing POST /api/users/register
2024-07-11 09:19:51 - Secured POST /api/users/register
2024-07-11 09:19:51 - POST "/api/users/register", parameters={}
2024-07-11 09:19:51 - Mapped to com.example.taskmanagement.controller.UserController#registerUser(User)
2024-07-11 09:19:51 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@15a1e7c2]
2024-07-11 09:19:51 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 09:19:51 - begin
2024-07-11 09:19:51 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 09:19:51 - Executing identity-insert immediately
2024-07-11 09:19:51 - insert into users (email,password,username,id) values (?,?,?,default)
2024-07-11 09:19:51 - Initializer list is empty
2024-07-11 09:19:51 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@1c70bbfe
2024-07-11 09:19:51 - Extracted JDBC value [0] - [1]
2024-07-11 09:19:51 - Extracted generated values [com.example.taskmanagement.model.User]: [Ljava.lang.Object;@338b0f1c
2024-07-11 09:19:51 - committing
2024-07-11 09:19:51 - Processing flush-time cascades
2024-07-11 09:19:51 - Dirty checking collections
2024-07-11 09:19:51 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-07-11 09:19:51 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-11 09:19:51 - Listing entities:
2024-07-11 09:19:51 - com.example.taskmanagement.model.User{password=$2a$10$ld1xzV89zZiNeXFiukQd.u6Hb.tmyc3uEZt0CG0nf4AZCIXfUsAXe, id=1, email=testuser@example.com, tasks=null, username=testuser}
2024-07-11 09:19:51 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 09:19:51 - Writing [com.example.taskmanagement.model.User@15a1e7c2]
2024-07-11 09:19:51 - Completed 200 OK
2024-07-11 09:19:51 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:19:58 - Securing POST /api/users/login
2024-07-11 09:19:58 - Secured POST /api/users/login
2024-07-11 09:19:58 - POST "/api/users/login", parameters={}
2024-07-11 09:19:58 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-11 09:19:58 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@51808c3]
2024-07-11 09:19:58 - Created new SQL alias : u1_0
2024-07-11 09:19:58 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(956997304300))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 09:19:58 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4d5c8bd6
2024-07-11 09:19:58 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(956997304300).username) 
2024-07-11 09:19:58 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(956997304300)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(956997304300).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(956997304300).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(956997304300).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(956997304300).username]

2024-07-11 09:19:58 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(956997304300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 09:19:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-11 09:19:58 - Initializer list:
	  com.example.taskmanagement.model.User(956997304300).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(956997304300).tasks)@1674105661 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User(956997304300) -> EntityResultInitializer(com.example.taskmanagement.model.User(956997304300))@769218282 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 09:19:58 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-11 09:19:58 - Extracted JDBC value [0] - [1]
2024-07-11 09:19:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(956997304300)): 1
2024-07-11 09:19:58 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(956997304300).tasks#1
2024-07-11 09:19:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(956997304300)#1] : 569840605
2024-07-11 09:19:58 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 09:19:58 - Extracted JDBC value [2] - [$2a$10$ld1xzV89zZiNeXFiukQd.u6Hb.tmyc3uEZt0CG0nf4AZCIXfUsAXe]
2024-07-11 09:19:58 - Extracted JDBC value [3] - [testuser]
2024-07-11 09:19:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(956997304300)#1
2024-07-11 09:19:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f4de156
2024-07-11 09:19:59 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-11 09:19:59 - Writing ["Login successful!"]
2024-07-11 09:19:59 - Completed 200 OK
2024-07-11 09:19:59 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:20:05 - Securing POST /api/tasks
2024-07-11 09:20:05 - Secured POST /api/tasks
2024-07-11 09:20:05 - POST "/api/tasks", parameters={}
2024-07-11 09:20:05 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(Task, String)
2024-07-11 09:20:05 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.Task@1d685b1e]
2024-07-11 09:20:05 - Could not resolve parameter [1] in public com.example.taskmanagement.model.Task com.example.taskmanagement.controller.TaskController.createTask(com.example.taskmanagement.model.Task,java.lang.String): Required request parameter 'username' for method parameter type String is not present
2024-07-11 09:20:05 - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'username' for method parameter type String is not present]
2024-07-11 09:20:05 - Completed 400 BAD_REQUEST
2024-07-11 09:20:05 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:20:05 - Securing POST /error
2024-07-11 09:20:05 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:20:05 - Saved request http://localhost:8080/error?continue to session
2024-07-11 09:20:05 - Pre-authenticated entry point called. Rejecting access
2024-07-11 09:28:43 - Starting TaskmanagementApplication using Java 22.0.1 with PID 14800 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 09:28:44 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 09:28:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 09:28:44 - Finished Spring Data repository scanning in 40 ms. Found 2 JPA repository interfaces.
2024-07-11 09:28:45 - Tomcat initialized with port 8080 (http)
2024-07-11 09:28:45 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 09:28:45 - Starting service [Tomcat]
2024-07-11 09:28:45 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 09:28:45 - Initializing Spring embedded WebApplicationContext
2024-07-11 09:28:45 - Root WebApplicationContext: initialization completed in 1667 ms
2024-07-11 09:28:45 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 09:28:46 - HikariPool-1 - Starting...
2024-07-11 09:28:46 - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:eb942d0c-736a-4e98-a6a3-e7ffa55799c5 user=SA
2024-07-11 09:28:46 - HikariPool-1 - Start completed.
2024-07-11 09:28:46 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-11 09:28:46 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-11 09:28:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 09:28:46 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 09:28:46 - HHH000206: 'hibernate.properties' not found
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 09:28:46 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 09:28:46 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 09:28:46 - HHH000026: Second-level cache disabled
2024-07-11 09:28:46 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-11 09:28:46 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-11 09:28:46 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5c25daad
2024-07-11 09:28:46 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-11 09:28:46 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6fdc2db6
2024-07-11 09:28:46 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5be69f7e
2024-07-11 09:28:46 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5be69f7e
2024-07-11 09:28:46 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-11 09:28:46 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@64544ee4
2024-07-11 09:28:46 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-11 09:28:46 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-11 09:28:46 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@16d61071
2024-07-11 09:28:46 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-11 09:28:46 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-11 09:28:46 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@18692e80
2024-07-11 09:28:46 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-11 09:28:46 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@779b4f9c
2024-07-11 09:28:46 - Adding type registration image -> org.hibernate.type.BasicTypeReference@31fe0ce5
2024-07-11 09:28:46 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-11 09:28:46 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@178dc733
2024-07-11 09:28:46 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4641f66c
2024-07-11 09:28:46 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6b0ba697
2024-07-11 09:28:46 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-11 09:28:46 - Adding type registration short -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-11 09:28:46 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@2a531637
2024-07-11 09:28:46 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-11 09:28:46 - Adding type registration int -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-11 09:28:46 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@539ee811
2024-07-11 09:28:46 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-11 09:28:46 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-11 09:28:46 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1aa59698
2024-07-11 09:28:46 - Adding type registration float -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-11 09:28:46 - Adding type registration float -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-11 09:28:46 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2cacb445
2024-07-11 09:28:46 - Adding type registration double -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-11 09:28:46 - Adding type registration double -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-11 09:28:46 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1e7cfd49
2024-07-11 09:28:46 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-11 09:28:46 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3a8640f7
2024-07-11 09:28:46 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-11 09:28:46 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@ca10069
2024-07-11 09:28:46 - Adding type registration character -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-11 09:28:46 - Adding type registration char -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-11 09:28:46 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@45e69324
2024-07-11 09:28:46 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c89b864
2024-07-11 09:28:46 - Adding type registration string -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-11 09:28:46 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@3400d6fa
2024-07-11 09:28:46 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@30a62a5b
2024-07-11 09:28:46 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-11 09:28:46 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-11 09:28:46 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@41a8f0d8
2024-07-11 09:28:46 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@30133a11
2024-07-11 09:28:46 - Adding type registration text -> org.hibernate.type.BasicTypeReference@2168def
2024-07-11 09:28:46 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3639b04
2024-07-11 09:28:46 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-11 09:28:46 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5cb8580
2024-07-11 09:28:46 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-11 09:28:46 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@2ca1e49a
2024-07-11 09:28:46 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1aee6d14
2024-07-11 09:28:46 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@54a6ef6
2024-07-11 09:28:46 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5c740c5a
2024-07-11 09:28:46 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7fd2a67a
2024-07-11 09:28:46 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@163df259
2024-07-11 09:28:46 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@405603b6
2024-07-11 09:28:46 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@3c3cd13a
2024-07-11 09:28:46 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@3c3cd13a
2024-07-11 09:28:46 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-11 09:28:46 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56b751b1
2024-07-11 09:28:46 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-11 09:28:46 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2f61de04
2024-07-11 09:28:46 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-11 09:28:46 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5f5a33ed
2024-07-11 09:28:46 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-11 09:28:46 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5b59c3d
2024-07-11 09:28:46 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69e36fe3
2024-07-11 09:28:46 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@48d31d25
2024-07-11 09:28:46 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@46188a89
2024-07-11 09:28:46 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@46188a89
2024-07-11 09:28:46 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6f65a203
2024-07-11 09:28:46 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d0b447b
2024-07-11 09:28:46 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4de158ca
2024-07-11 09:28:46 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-11 09:28:46 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4f2fdf3d
2024-07-11 09:28:46 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@d180961
2024-07-11 09:28:46 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4af7ac25
2024-07-11 09:28:46 - Adding type registration date -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-11 09:28:46 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@d978ab9
2024-07-11 09:28:46 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3cf06a01
2024-07-11 09:28:46 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3cf06a01
2024-07-11 09:28:46 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71ee2fff
2024-07-11 09:28:46 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71ee2fff
2024-07-11 09:28:46 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71ee2fff
2024-07-11 09:28:46 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@68f2363
2024-07-11 09:28:46 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@68f2363
2024-07-11 09:28:46 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@68f2363
2024-07-11 09:28:46 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@37fca349
2024-07-11 09:28:46 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@86377d5
2024-07-11 09:28:46 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@87220f1
2024-07-11 09:28:46 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@87220f1
2024-07-11 09:28:46 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@77998ea7
2024-07-11 09:28:46 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@77998ea7
2024-07-11 09:28:46 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@77998ea7
2024-07-11 09:28:46 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@252d8df6
2024-07-11 09:28:46 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@36638b59
2024-07-11 09:28:46 - Adding type registration class -> org.hibernate.type.BasicTypeReference@2f8f40cc
2024-07-11 09:28:46 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2f8f40cc
2024-07-11 09:28:46 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@14d81f2c
2024-07-11 09:28:46 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@14d81f2c
2024-07-11 09:28:46 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@14d81f2c
2024-07-11 09:28:46 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@774013dc
2024-07-11 09:28:46 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@774013dc
2024-07-11 09:28:46 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@229cb4d8
2024-07-11 09:28:46 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@229cb4d8
2024-07-11 09:28:46 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@76e9eed8
2024-07-11 09:28:46 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@76e9eed8
2024-07-11 09:28:46 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@30ef32eb
2024-07-11 09:28:46 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@30ef32eb
2024-07-11 09:28:46 - Adding type registration url -> org.hibernate.type.BasicTypeReference@474619d9
2024-07-11 09:28:46 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@474619d9
2024-07-11 09:28:46 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@bb5f9d
2024-07-11 09:28:46 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@391dfe7c
2024-07-11 09:28:46 - Adding type registration object -> org.hibernate.type.JavaObjectType@65d23aa3
2024-07-11 09:28:46 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@65d23aa3
2024-07-11 09:28:46 - Adding type registration null -> org.hibernate.type.NullType@5d9d8e46
2024-07-11 09:28:46 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6d0a14c2
2024-07-11 09:28:46 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5b64f771
2024-07-11 09:28:46 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@153c6603
2024-07-11 09:28:46 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@24e2355c
2024-07-11 09:28:46 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@19739906
2024-07-11 09:28:46 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@65503a26
2024-07-11 09:28:46 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@13aa54f1
2024-07-11 09:28:46 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@26d7cb0d
2024-07-11 09:28:46 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@65da4a5d] into BootstrapContext; was [null]
2024-07-11 09:28:46 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@65da4a5d) [was null]
2024-07-11 09:28:46 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@632b5c79] into BootstrapContext; was [null]
2024-07-11 09:28:46 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6a552721] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3815a7d1]
2024-07-11 09:28:46 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 09:28:46 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@65da4a5d]
2024-07-11 09:28:46 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@65da4a5d]
2024-07-11 09:28:46 - Database ->
	   name : H2
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-11 09:28:46 - Driver ->
	   name : H2 JDBC Driver
	version : 2.2.224 (2023-09-17)
	  major : 2
	  minor : 2
2024-07-11 09:28:46 - JDBC version : 4.2
2024-07-11 09:28:46 - HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.2.224
2024-07-11 09:28:46 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2024-07-11 09:28:46 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-11 09:28:46 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-11 09:28:46 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-11 09:28:46 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 09:28:46 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 09:28:46 - addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2024-07-11 09:28:46 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-11 09:28:46 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 09:28:46 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 09:28:46 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@423762ae] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7b58d678]
2024-07-11 09:28:46 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 09:28:46 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-11 09:28:46 - Import with entity name Task
2024-07-11 09:28:46 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-11 09:28:46 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 09:28:46 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 09:28:46 - MetadataSourceProcessor property id with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-11 09:28:46 - building BasicValue for id
2024-07-11 09:28:46 - Skipping column re-registration: task.id
2024-07-11 09:28:46 - Building property id
2024-07-11 09:28:46 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property category with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-11 09:28:46 - building BasicValue for category
2024-07-11 09:28:46 - Skipping column re-registration: task.category
2024-07-11 09:28:46 - Building property category
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-11 09:28:46 - building BasicValue for createdAt
2024-07-11 09:28:46 - Skipping column re-registration: task.created_at
2024-07-11 09:28:46 - Building property createdAt
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property description with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-11 09:28:46 - building BasicValue for description
2024-07-11 09:28:46 - Skipping column re-registration: task.description
2024-07-11 09:28:46 - Building property description
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property priority with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-11 09:28:46 - building BasicValue for priority
2024-07-11 09:28:46 - Skipping column re-registration: task.priority
2024-07-11 09:28:46 - Building property priority
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property title with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-11 09:28:46 - building BasicValue for title
2024-07-11 09:28:46 - Skipping column re-registration: task.title
2024-07-11 09:28:46 - Building property title
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-11 09:28:46 - building BasicValue for updatedAt
2024-07-11 09:28:46 - Skipping column re-registration: task.updated_at
2024-07-11 09:28:46 - Building property updatedAt
2024-07-11 09:28:46 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - Building property user
2024-07-11 09:28:46 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 09:28:46 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-11 09:28:46 - Import with entity name User
2024-07-11 09:28:46 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-11 09:28:46 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 09:28:46 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 09:28:46 - MetadataSourceProcessor property id with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-11 09:28:46 - building BasicValue for id
2024-07-11 09:28:46 - Skipping column re-registration: users.id
2024-07-11 09:28:46 - Building property id
2024-07-11 09:28:46 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property email with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-11 09:28:46 - building BasicValue for email
2024-07-11 09:28:46 - Skipping column re-registration: users.email
2024-07-11 09:28:46 - Building property email
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property password with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-11 09:28:46 - building BasicValue for password
2024-07-11 09:28:46 - Skipping column re-registration: users.password
2024-07-11 09:28:46 - Building property password
2024-07-11 09:28:46 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-11 09:28:46 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-11 09:28:46 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:28:46 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:28:46 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-11 09:28:46 - Building property tasks
2024-07-11 09:28:46 - Binding column: AnnotatedColumn()
2024-07-11 09:28:46 - MetadataSourceProcessor property username with lazy=false
2024-07-11 09:28:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-11 09:28:46 - building BasicValue for username
2024-07-11 09:28:46 - Skipping column re-registration: users.username
2024-07-11 09:28:46 - Building property username
2024-07-11 09:28:46 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-11 09:28:46 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-11 09:28:46 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-11 09:28:46 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-11 09:28:46 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 09:28:46 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-11 09:28:46 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-11 09:28:46 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-11 09:28:46 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-11 09:28:46 - Building session factory
2024-07-11 09:28:46 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 09:28:47 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7b0dfa91, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@642f8b7f, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, com.zaxxer.hikari.pool_number=1, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.332369644242996234, com.sun.management.jmxremote.port=51253, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=14800, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.332369644242996234, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3321fb65, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-11 09:28:47 - Session factory constructed with filter configurations : {}
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4cd6f08b] under count; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1b30b6f8] under every; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1e965426] under any; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@515fff35] under sinh; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5eb9bf7d] under cosh; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64f613da] under tanh; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f64f99f] under pi; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@16c1d11] under log; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : length -> character_length
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@1be12e05] under position; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7a2fd94c] under overlay; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@30e15628] under trim; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@30ca66c5] under cast; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4abfa2ff] under collate; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@27234b7c] under extract; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@31f9f9b3] under ifnull; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@41948c13] under pad; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@4ed19540] under str; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2202c92f] under format; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@56adbb07] under timestampadd; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7d7f966f] under timestampdiff; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : dateadd -> timestampadd
2024-07-11 09:28:47 - Registering alternate key : datediff -> timestampdiff
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@45c28c49] under current_date; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c6fc278] under current_time; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23ee92df] under current_timestamp; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : current date -> current_date
2024-07-11 09:28:47 - Registering alternate key : current time -> current_time
2024-07-11 09:28:47 - Registering alternate key : current timestamp -> current_timestamp
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a6a4595] under local_date; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b1b2255] under local_time; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4965454c] under local_datetime; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e4a4ed5] under offset_datetime; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : local date -> local_date
2024-07-11 09:28:47 - Registering alternate key : local time -> local_time
2024-07-11 09:28:47 - Registering alternate key : local datetime -> local_datetime
2024-07-11 09:28:47 - Registering alternate key : offset datetime -> offset_datetime
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5644f664] under instant; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : current_instant -> instant
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1a05ff8e] under sql; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@251e2f4a] under count; prior registration was org.hibernate.dialect.function.CountFunction@4cd6f08b
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@e2ee348] under avg; prior registration was NamedSqmFunctionTemplate(avg)
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f64f99f
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61f08aa9] under mod; prior registration was NamedSqmFunctionTemplate(mod)
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitnot)] under bitnot; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : day -> day_of_month
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4b1b2255
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4965454c
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@aca594d] under trunc; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : truncate -> trunc
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@736f2fb8] under date_trunc; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : chr -> char
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9715d26] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@1be12e05
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d8096ee] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : every -> bool_and
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2024-07-11 09:28:47 - Registering alternate key : any -> bool_or
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@35d8ba22] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2202c92f
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@180fb796] under listagg; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7a78d2aa] under mode; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@254d8ef6] under percentile_cont; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2a9e7b4d] under percentile_disc; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5eff5e4c] under rank; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2fe2fcc2] under dense_rank; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@69926b6e] under percent_rank; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7ea8224b] under cume_dist; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@15c3585] under array; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConstructorFunction@5b86f4cb] under array_list; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayAggFunction@4c0ab04f] under array_agg; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionFunction@c414eb3] under array_position; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@4e481512] under array_positions; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayPositionsFunction@48da5106] under array_positions_list; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31cddb11] under array_length; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatFunction@2c51c756] under array_concat; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@1db9c2cf] under array_prepend; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.ArrayConcatElementFunction@32e7df65] under array_append; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@49770ef9] under array_contains; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayContainsFunction@15bcecf9] under array_contains_nullable; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@77622c82] under array_overlaps; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayOverlapsFunction@44df834c] under array_overlaps_nullable; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@236f3885] under array_get; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArraySetFunction@703eead0] under array_set; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveFunction@fa689db] under array_remove; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayRemoveIndexFunction@75df4b1d] under array_remove_index; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43120a77] under array_slice; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayReplaceFunction@2941631f] under array_replace; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6130a6f5] under array_trim; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@34ab398b] under array_fill; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayFillFunction@71634e64] under array_fill_list; prior registration was null
2024-07-11 09:28:47 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.array.H2ArrayToStringFunction@33845e3d] under array_to_string; prior registration was null
2024-07-11 09:28:47 - abs(NUMERIC arg)
2024-07-11 09:28:47 - Double acos(NUMERIC arg)
2024-07-11 09:28:47 - Boolean any(BOOLEAN predicate)
2024-07-11 09:28:47 - array( ... )
2024-07-11 09:28:47 - array_agg(arg)
2024-07-11 09:28:47 - array_append( ... )
2024-07-11 09:28:47 - array_concat( ... )
2024-07-11 09:28:47 - Boolean array_contains(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-11 09:28:47 - Boolean array_contains_nullable(ARRAY haystackArray, OBJECT needleElementOrArray)
2024-07-11 09:28:47 - array_fill(OBJECT element, INTEGER elementCount)
2024-07-11 09:28:47 - array_fill_list(OBJECT element, INTEGER elementCount)
2024-07-11 09:28:47 - array_get(ARRAY array, INTEGER index)
2024-07-11 09:28:47 - Integer array_length(ARRAY array)
2024-07-11 09:28:47 - array_list( ... )
2024-07-11 09:28:47 - Boolean array_overlaps(ARRAY array0, OBJECT array1)
2024-07-11 09:28:47 - Boolean array_overlaps_nullable(ARRAY array0, OBJECT array1)
2024-07-11 09:28:47 - Integer array_position(ARRAY array, OBJECT element[, INTEGER startPosition])
2024-07-11 09:28:47 - int[] array_positions(ARRAY array, OBJECT element)
2024-07-11 09:28:47 - List array_positions_list(ARRAY array, OBJECT element)
2024-07-11 09:28:47 - array_prepend( ... )
2024-07-11 09:28:47 - array_remove( ... )
2024-07-11 09:28:47 - array_remove_index( ... )
2024-07-11 09:28:47 - array_replace( ... )
2024-07-11 09:28:47 - array_set( ... )
2024-07-11 09:28:47 - array_slice(ARRAY array, INTEGER start, INTEGER end)
2024-07-11 09:28:47 - String array_to_string( ... )
2024-07-11 09:28:47 - array_trim(ARRAY array, INTEGER elementsToRemove)
2024-07-11 09:28:47 - Integer ascii(STRING arg)
2024-07-11 09:28:47 - Double asin(NUMERIC arg)
2024-07-11 09:28:47 - Double atan(NUMERIC arg)
2024-07-11 09:28:47 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-11 09:28:47 - avg(NUMERIC arg)
2024-07-11 09:28:47 - bit_and(arg)
2024-07-11 09:28:47 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-11 09:28:47 - bit_or(arg)
2024-07-11 09:28:47 - bitand(arg0, arg1)
2024-07-11 09:28:47 - bitnot(arg)
2024-07-11 09:28:47 - bitor(arg0, arg1)
2024-07-11 09:28:47 - bitxor(arg0, arg1)
2024-07-11 09:28:47 - Boolean bool_and(BOOLEAN predicate)
2024-07-11 09:28:47 - Boolean bool_or(BOOLEAN predicate)
2024-07-11 09:28:47 - cast(arg as Type)
2024-07-11 09:28:47 - ceiling(NUMERIC arg)
2024-07-11 09:28:47 - Character char(INTEGER arg)
2024-07-11 09:28:47 - Integer character_length(STRING_OR_CLOB arg)
2024-07-11 09:28:47 - Character chr(INTEGER arg)
2024-07-11 09:28:47 - coalesce(arg0[, arg1[, ...]])
2024-07-11 09:28:47 - String collate(STRING string as COLLATION collation)
2024-07-11 09:28:47 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-11 09:28:47 - Double cos(NUMERIC arg)
2024-07-11 09:28:47 - Double cosh(NUMERIC arg)
2024-07-11 09:28:47 - Double cot(NUMERIC arg)
2024-07-11 09:28:47 - Long count([distinct ]{arg|*})
2024-07-11 09:28:47 - Double cume_dist([arg0[, ...]])
2024-07-11 09:28:47 - Date curdate()
2024-07-11 09:28:47 - Date current date
2024-07-11 09:28:47 - Time current time
2024-07-11 09:28:47 - Timestamp current timestamp
2024-07-11 09:28:47 - Date current_date
2024-07-11 09:28:47 - Instant current_instant
2024-07-11 09:28:47 - Time current_time
2024-07-11 09:28:47 - Timestamp current_timestamp
2024-07-11 09:28:47 - Time curtime()
2024-07-11 09:28:47 - date_trunc(STRING field, TEMPORAL datetime)
2024-07-11 09:28:47 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 09:28:47 - Long|Double datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 09:28:47 - Integer day(DATE arg)
2024-07-11 09:28:47 - Integer day_of_month(DATE arg)
2024-07-11 09:28:47 - Integer day_of_week(DATE arg)
2024-07-11 09:28:47 - Integer day_of_year(DATE arg)
2024-07-11 09:28:47 - String dayname(DATE arg)
2024-07-11 09:28:47 - Double degrees(NUMERIC arg)
2024-07-11 09:28:47 - Long dense_rank([arg0[, ...]])
2024-07-11 09:28:47 - Boolean every(BOOLEAN predicate)
2024-07-11 09:28:47 - Double exp(NUMERIC arg)
2024-07-11 09:28:47 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-11 09:28:47 - first_valueANY value
2024-07-11 09:28:47 - floor(NUMERIC arg)
2024-07-11 09:28:47 - String format(TEMPORAL datetime as STRING pattern)
2024-07-11 09:28:47 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 09:28:47 - Integer hour(TIME arg)
2024-07-11 09:28:47 - ifnull(arg0, arg1)
2024-07-11 09:28:47 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-11 09:28:47 - Instant instant
2024-07-11 09:28:47 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-11 09:28:47 - lagANY value[, INTEGER offset[, ANY default]]
2024-07-11 09:28:47 - last_valueANY value
2024-07-11 09:28:47 - leadANY value[, INTEGER offset[, ANY default]]
2024-07-11 09:28:47 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 09:28:47 - String left(STRING string, INTEGER length)
2024-07-11 09:28:47 - Integer length(STRING_OR_CLOB arg)
2024-07-11 09:28:47 - String listagg(STRING arg0, STRING arg1)
2024-07-11 09:28:47 - Double ln(NUMERIC arg)
2024-07-11 09:28:47 - LocalDate local date
2024-07-11 09:28:47 - LocalDateTime local datetime
2024-07-11 09:28:47 - LocalTime local time
2024-07-11 09:28:47 - LocalDate local_date
2024-07-11 09:28:47 - LocalDateTime local_datetime
2024-07-11 09:28:47 - LocalTime local_time
2024-07-11 09:28:47 - Time localtime
2024-07-11 09:28:47 - Timestamp localtimestamp
2024-07-11 09:28:47 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-11 09:28:47 - Double log(NUMERIC base, NUMERIC arg)
2024-07-11 09:28:47 - Double log10(NUMERIC arg)
2024-07-11 09:28:47 - String lower(STRING string)
2024-07-11 09:28:47 - String lpad(STRING string, INTEGER length[, STRING padding])
2024-07-11 09:28:47 - String ltrim(STRING string)
2024-07-11 09:28:47 - max(COMPARABLE arg)
2024-07-11 09:28:47 - Double median(NUMERIC arg)
2024-07-11 09:28:47 - Integer microsecond(TIME arg)
2024-07-11 09:28:47 - min(COMPARABLE arg)
2024-07-11 09:28:47 - Integer minute(TIME arg)
2024-07-11 09:28:47 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-11 09:28:47 - mode()
2024-07-11 09:28:47 - Integer month(DATE arg)
2024-07-11 09:28:47 - String monthname(DATE arg)
2024-07-11 09:28:47 - Timestamp now()
2024-07-11 09:28:47 - nth_valueANY value, INTEGER nth
2024-07-11 09:28:47 - nullif(arg0, arg1)
2024-07-11 09:28:47 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-11 09:28:47 - OffsetDateTime offset datetime
2024-07-11 09:28:47 - OffsetDateTime offset_datetime
2024-07-11 09:28:47 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-11 09:28:47 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-11 09:28:47 - Double percent_rank([arg0[, ...]])
2024-07-11 09:28:47 - percentile_cont(NUMERIC arg)
2024-07-11 09:28:47 - percentile_disc(NUMERIC arg)
2024-07-11 09:28:47 - Double pi
2024-07-11 09:28:47 - Integer position(STRING pattern in STRING string)
2024-07-11 09:28:47 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-11 09:28:47 - Integer quarter(DATE arg)
2024-07-11 09:28:47 - Double radians(NUMERIC arg)
2024-07-11 09:28:47 - Double rand([INTEGER seed])
2024-07-11 09:28:47 - Long rank([arg0[, ...]])
2024-07-11 09:28:47 - String repeat(STRING string, INTEGER times)
2024-07-11 09:28:47 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-11 09:28:47 - String right(STRING string, INTEGER length)
2024-07-11 09:28:47 - round(NUMERIC number[, INTEGER places])
2024-07-11 09:28:47 - Long row_number()
2024-07-11 09:28:47 - Long rownum()
2024-07-11 09:28:47 - String rpad(STRING string, INTEGER length[, STRING padding])
2024-07-11 09:28:47 - String rtrim(STRING string)
2024-07-11 09:28:47 - Integer second(TIME arg)
2024-07-11 09:28:47 - Integer sign(NUMERIC arg)
2024-07-11 09:28:47 - Double sin(NUMERIC arg)
2024-07-11 09:28:47 - Double sinh(NUMERIC arg)
2024-07-11 09:28:47 - String soundex(arg)
2024-07-11 09:28:47 - String space(INTEGER arg)
2024-07-11 09:28:47 - Object sql
2024-07-11 09:28:47 - Double sqrt(NUMERIC arg)
2024-07-11 09:28:47 - Double stddev_pop(NUMERIC arg)
2024-07-11 09:28:47 - Double stddev_samp(NUMERIC arg)
2024-07-11 09:28:47 - String str(arg)
2024-07-11 09:28:47 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-11 09:28:47 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-11 09:28:47 - sum(arg)
2024-07-11 09:28:47 - Timestamp sysdate
2024-07-11 09:28:47 - Double tan(NUMERIC arg)
2024-07-11 09:28:47 - Double tanh(NUMERIC arg)
2024-07-11 09:28:47 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 09:28:47 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 09:28:47 - String translate(STRING arg0, STRING arg1, STRING arg2)
2024-07-11 09:28:47 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-11 09:28:47 - trunc( ... )
2024-07-11 09:28:47 - truncate( ... )
2024-07-11 09:28:47 - String upper(STRING string)
2024-07-11 09:28:47 - Double var_pop(NUMERIC arg)
2024-07-11 09:28:47 - Double var_samp(NUMERIC arg)
2024-07-11 09:28:47 - Integer week(DATE arg)
2024-07-11 09:28:47 - Integer year(DATE arg)
2024-07-11 09:28:47 - Starting QueryInterpretationCache(2048)
2024-07-11 09:28:47 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 09:28:47 - Configured EntityCopyObserver strategy: disallow
2024-07-11 09:28:47 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 09:28:47 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 09:28:47 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-11 09:28:47 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 09:28:47 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 09:28:47 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-11 09:28:47 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-11 09:28:47 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-11 09:28:47 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-11 09:28:47 - Starting post-init callbacks
2024-07-11 09:28:47 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 09:28:47 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-11 09:28:47 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-11 09:28:47 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-11 09:28:47 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-11 09:28:47 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-11 09:28:47 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 09:28:47 - Created new SQL alias : u1_0
2024-07-11 09:28:47 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 09:28:47 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-11 09:28:47 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 09:28:47 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-11 09:28:47 -  Version select: select id from users where id=?
2024-07-11 09:28:47 -  Insert (0): insert into users (email,password,username,id) values (?,?,?,default)
2024-07-11 09:28:47 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-11 09:28:47 -  Delete (0): delete from users where id=?
2024-07-11 09:28:47 - Created new SQL alias : t1_0
2024-07-11 09:28:47 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 09:28:47 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c6653e] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 09:28:47 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-11 09:28:47 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-11 09:28:47 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-11 09:28:47 -  Version select: select id from task where id=?
2024-07-11 09:28:47 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id,id) values (?,?,?,?,?,?,?,default)
2024-07-11 09:28:47 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 09:28:47 -  Delete (0): delete from task where id=?
2024-07-11 09:28:47 - Created new SQL alias : t1_0
2024-07-11 09:28:47 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6c3627c] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-11 09:28:47 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-11 09:28:47 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b697993] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-11 09:28:47 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-11 09:28:47 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-11 09:28:47 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 09:28:47 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 09:28:47 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@423762ae] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2ee5fe1e]
2024-07-11 09:28:47 - Checking 0 named HQL queries
2024-07-11 09:28:47 - Checking 0 named SQL queries
2024-07-11 09:28:47 - drop table if exists task cascade 
2024-07-11 09:28:47 - drop table if exists users cascade 
2024-07-11 09:28:47 - create table task (created_at timestamp(6), id bigint generated by default as identity, updated_at timestamp(6), user_id bigint, category varchar(255), description varchar(255), priority varchar(255), title varchar(255), primary key (id))
2024-07-11 09:28:47 - create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), username varchar(255), primary key (id))
2024-07-11 09:28:47 - alter table if exists task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users
2024-07-11 09:28:47 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@58c93be3
2024-07-11 09:28:47 - Registering SessionFactory: a59538b8-85d1-4f5a-8ceb-2218a436982e (<unnamed>)
2024-07-11 09:28:47 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 09:28:47 - Instantiated SessionFactory
2024-07-11 09:28:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 09:28:47 - Statistics initialized [enabled=false]
2024-07-11 09:28:47 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:28:47 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:28:47 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:28:47 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:28:47 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 09:28:47 - 

Using generated security password: acad1609-8178-4820-9973-0ba2cbe569dd

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-11 09:28:48 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-11 09:28:48 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-11 09:28:48 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-11 09:28:48 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-11 09:28:48 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 09:28:48 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-11 09:28:48 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-11 09:28:48 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-11 09:28:48 - Tomcat started on port 8080 (http) with context path '/'
2024-07-11 09:28:48 - Started TaskmanagementApplication in 5.308 seconds (process running for 5.751)
2024-07-11 09:28:49 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 09:28:49 - Initializing Servlet 'dispatcherServlet'
2024-07-11 09:28:49 - Detected StandardServletMultipartResolver
2024-07-11 09:28:49 - Detected AcceptHeaderLocaleResolver
2024-07-11 09:28:49 - Detected FixedThemeResolver
2024-07-11 09:28:49 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2b1f0667
2024-07-11 09:28:49 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@753b6846
2024-07-11 09:28:49 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-11 09:28:49 - Completed initialization in 1 ms
2024-07-11 09:34:04 - Starting TaskmanagementApplication using Java 22.0.1 with PID 30800 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 09:34:04 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 09:34:05 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 09:34:05 - Finished Spring Data repository scanning in 35 ms. Found 2 JPA repository interfaces.
2024-07-11 09:34:06 - Tomcat initialized with port 8080 (http)
2024-07-11 09:34:06 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 09:34:06 - Starting service [Tomcat]
2024-07-11 09:34:06 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 09:34:06 - Initializing Spring embedded WebApplicationContext
2024-07-11 09:34:06 - Root WebApplicationContext: initialization completed in 1598 ms
2024-07-11 09:34:06 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 09:34:06 - Failed to load driver class com.mysql.cj.jdbc.Driver from HikariConfig class classloader jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
2024-07-11 09:34:06 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
2024-07-11 09:34:06 - Stopping service [Tomcat]
2024-07-11 09:34:06 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-11 09:34:06 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	... 10 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 20 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 34 common frames omitted
Caused by: java.lang.RuntimeException: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at com.zaxxer.hikari.HikariConfig.setDriverClassName(HikariConfig.java:494)
	at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperty.set(DataSourceBuilder.java:479)
	at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties.set(DataSourceBuilder.java:373)
	at org.springframework.boot.jdbc.DataSourceBuilder.build(DataSourceBuilder.java:183)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:59)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 35 common frames omitted
2024-07-11 09:35:12 - Starting TaskmanagementApplication using Java 22.0.1 with PID 31836 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 09:35:12 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 09:35:13 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 09:35:13 - Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2024-07-11 09:35:13 - Tomcat initialized with port 8080 (http)
2024-07-11 09:35:13 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 09:35:13 - Starting service [Tomcat]
2024-07-11 09:35:13 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 09:35:13 - Initializing Spring embedded WebApplicationContext
2024-07-11 09:35:13 - Root WebApplicationContext: initialization completed in 1558 ms
2024-07-11 09:35:14 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 09:35:14 - Failed to load driver class com.mysql.cj.jdbc.Driver from HikariConfig class classloader jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
2024-07-11 09:35:14 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
2024-07-11 09:35:14 - Stopping service [Tomcat]
2024-07-11 09:35:14 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-11 09:35:14 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'dataSourceScriptDatabaseInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	... 10 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 20 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.zaxxer.hikari.HikariDataSource]: Factory method 'dataSource' threw exception with message: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 34 common frames omitted
Caused by: java.lang.RuntimeException: Failed to load driver class com.mysql.cj.jdbc.Driver in either of HikariConfig class loader or Thread context classloader
	at com.zaxxer.hikari.HikariConfig.setDriverClassName(HikariConfig.java:494)
	at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperty.set(DataSourceBuilder.java:479)
	at org.springframework.boot.jdbc.DataSourceBuilder$MappedDataSourceProperties.set(DataSourceBuilder.java:373)
	at org.springframework.boot.jdbc.DataSourceBuilder.build(DataSourceBuilder.java:183)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.createDataSource(DataSourceConfiguration.java:59)
	at org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari.dataSource(DataSourceConfiguration.java:117)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 35 common frames omitted
2024-07-11 09:38:16 - Starting TaskmanagementApplication using Java 22.0.1 with PID 24948 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 09:38:16 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 09:38:17 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 09:38:17 - Finished Spring Data repository scanning in 36 ms. Found 2 JPA repository interfaces.
2024-07-11 09:38:18 - Tomcat initialized with port 8080 (http)
2024-07-11 09:38:18 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 09:38:18 - Starting service [Tomcat]
2024-07-11 09:38:18 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 09:38:18 - Initializing Spring embedded WebApplicationContext
2024-07-11 09:38:18 - Root WebApplicationContext: initialization completed in 1494 ms
2024-07-11 09:38:18 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 09:38:18 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-11 09:38:18 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-11 09:38:18 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 09:38:18 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 09:38:18 - HHH000206: 'hibernate.properties' not found
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 09:38:18 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 09:38:18 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 09:38:18 - HHH000026: Second-level cache disabled
2024-07-11 09:38:18 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 09:38:18 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 09:38:18 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 09:38:18 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-11 09:38:18 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-11 09:38:18 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 09:38:18 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 09:38:18 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5ddb302
2024-07-11 09:38:18 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5ddb302
2024-07-11 09:38:18 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 09:38:18 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 09:38:18 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 09:38:18 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-11 09:38:18 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-11 09:38:18 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-11 09:38:18 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-11 09:38:18 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-11 09:38:18 - Adding type registration image -> org.hibernate.type.BasicTypeReference@51813065
2024-07-11 09:38:18 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-11 09:38:18 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-11 09:38:18 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 09:38:18 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-11 09:38:18 - Adding type registration short -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 09:38:18 - Adding type registration short -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 09:38:18 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 09:38:18 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 09:38:18 - Adding type registration int -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 09:38:18 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 09:38:18 - Adding type registration long -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 09:38:18 - Adding type registration long -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 09:38:18 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 09:38:18 - Adding type registration float -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 09:38:18 - Adding type registration float -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 09:38:18 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 09:38:18 - Adding type registration double -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-11 09:38:18 - Adding type registration double -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-11 09:38:18 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-11 09:38:18 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 09:38:18 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 09:38:18 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-11 09:38:18 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-11 09:38:18 - Adding type registration character -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 09:38:18 - Adding type registration char -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 09:38:18 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 09:38:18 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-11 09:38:18 - Adding type registration string -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-11 09:38:18 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-11 09:38:18 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@72a34537
2024-07-11 09:38:18 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-11 09:38:18 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-11 09:38:18 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-11 09:38:18 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-11 09:38:18 - Adding type registration text -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-11 09:38:18 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-11 09:38:18 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@35536760
2024-07-11 09:38:18 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@35536760
2024-07-11 09:38:18 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-11 09:38:18 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-11 09:38:18 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-11 09:38:18 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-11 09:38:18 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-11 09:38:18 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-11 09:38:18 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-11 09:38:18 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-11 09:38:18 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-11 09:38:18 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-11 09:38:18 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-11 09:38:18 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-11 09:38:18 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-11 09:38:18 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-11 09:38:18 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-11 09:38:18 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-11 09:38:18 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-11 09:38:18 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-11 09:38:18 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-11 09:38:18 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-11 09:38:18 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-11 09:38:18 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-11 09:38:18 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-11 09:38:18 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-11 09:38:18 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-11 09:38:18 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-11 09:38:18 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-11 09:38:18 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-11 09:38:18 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-11 09:38:18 - Adding type registration date -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-11 09:38:18 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-11 09:38:18 - Adding type registration time -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-11 09:38:18 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-11 09:38:18 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-11 09:38:18 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-11 09:38:18 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-11 09:38:18 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-11 09:38:18 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-11 09:38:18 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-11 09:38:18 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-11 09:38:18 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-11 09:38:18 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-11 09:38:18 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-11 09:38:18 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-11 09:38:18 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-11 09:38:18 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-11 09:38:18 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-11 09:38:18 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-11 09:38:18 - Adding type registration class -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-11 09:38:18 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-11 09:38:18 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-11 09:38:18 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-11 09:38:18 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-11 09:38:18 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-11 09:38:18 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-11 09:38:18 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-11 09:38:18 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-11 09:38:18 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-11 09:38:18 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-11 09:38:18 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-11 09:38:18 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-11 09:38:18 - Adding type registration url -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-11 09:38:18 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-11 09:38:18 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-11 09:38:18 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-11 09:38:18 - Adding type registration object -> org.hibernate.type.JavaObjectType@1a3b1f7e
2024-07-11 09:38:18 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1a3b1f7e
2024-07-11 09:38:18 - Adding type registration null -> org.hibernate.type.NullType@5ddd84d2
2024-07-11 09:38:18 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3fd5d679
2024-07-11 09:38:18 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7aa15a80
2024-07-11 09:38:18 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4d065e1a
2024-07-11 09:38:18 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7c4ca87c
2024-07-11 09:38:18 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6dbbdf92
2024-07-11 09:38:18 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1dbeedff
2024-07-11 09:38:18 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@62b786dc
2024-07-11 09:38:18 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7ba1cdbe
2024-07-11 09:38:18 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@20231384] into BootstrapContext; was [null]
2024-07-11 09:38:18 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@20231384) [was null]
2024-07-11 09:38:18 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@73d91faf] into BootstrapContext; was [null]
2024-07-11 09:38:18 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@30fa8a6b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6f112f70]
2024-07-11 09:38:19 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 09:38:19 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@20231384]
2024-07-11 09:38:19 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@20231384]
2024-07-11 09:38:19 - HikariPool-1 - Starting...
2024-07-11 09:38:19 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@58e5fbe5
2024-07-11 09:38:19 - HikariPool-1 - Start completed.
2024-07-11 09:38:19 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-11 09:38:19 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-11 09:38:19 - JDBC version : 4.2
2024-07-11 09:38:19 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-11 09:38:19 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-11 09:38:19 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-11 09:38:19 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-11 09:38:19 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-11 09:38:19 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ecec098) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6cc44207)
2024-07-11 09:38:19 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8ecc457) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21d3d6ec)
2024-07-11 09:38:19 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49f1184e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ebaf0d)
2024-07-11 09:38:19 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@694b1ddb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5690c2a8)
2024-07-11 09:38:19 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17e2835c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d2bc56a)
2024-07-11 09:38:19 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7cbfbcd1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c6aa46c)
2024-07-11 09:38:19 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f112ade) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c82bac3)
2024-07-11 09:38:19 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ddac0b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@446a5aa5)
2024-07-11 09:38:19 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@628bcf2c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b76251c)
2024-07-11 09:38:19 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-11 09:38:19 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-11 09:38:19 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-11 09:38:19 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 09:38:19 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 09:38:19 - Adding type registration null -> org.hibernate.type.NullType@282c5075
2024-07-11 09:38:19 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5ddd84d2`
2024-07-11 09:38:19 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-11 09:38:19 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 09:38:19 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 09:38:19 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 09:38:19 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 09:38:19 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 09:38:19 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 09:38:19 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 09:38:19 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 09:38:19 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 09:38:19 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 09:38:19 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 09:38:19 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1885dc2b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4a3bf37c]
2024-07-11 09:38:19 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 09:38:19 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-11 09:38:19 - Import with entity name Task
2024-07-11 09:38:19 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-11 09:38:19 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 09:38:19 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 09:38:19 - MetadataSourceProcessor property id with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-11 09:38:19 - building BasicValue for id
2024-07-11 09:38:19 - Skipping column re-registration: task.id
2024-07-11 09:38:19 - Building property id
2024-07-11 09:38:19 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property category with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-11 09:38:19 - building BasicValue for category
2024-07-11 09:38:19 - Skipping column re-registration: task.category
2024-07-11 09:38:19 - Building property category
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-11 09:38:19 - building BasicValue for createdAt
2024-07-11 09:38:19 - Skipping column re-registration: task.created_at
2024-07-11 09:38:19 - Building property createdAt
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property description with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-11 09:38:19 - building BasicValue for description
2024-07-11 09:38:19 - Skipping column re-registration: task.description
2024-07-11 09:38:19 - Building property description
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property priority with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-11 09:38:19 - building BasicValue for priority
2024-07-11 09:38:19 - Skipping column re-registration: task.priority
2024-07-11 09:38:19 - Building property priority
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property title with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-11 09:38:19 - building BasicValue for title
2024-07-11 09:38:19 - Skipping column re-registration: task.title
2024-07-11 09:38:19 - Building property title
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-11 09:38:19 - building BasicValue for updatedAt
2024-07-11 09:38:19 - Skipping column re-registration: task.updated_at
2024-07-11 09:38:19 - Building property updatedAt
2024-07-11 09:38:19 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - Building property user
2024-07-11 09:38:19 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 09:38:19 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-11 09:38:19 - Import with entity name User
2024-07-11 09:38:19 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-11 09:38:19 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 09:38:19 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 09:38:19 - MetadataSourceProcessor property id with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-11 09:38:19 - building BasicValue for id
2024-07-11 09:38:19 - Skipping column re-registration: users.id
2024-07-11 09:38:19 - Building property id
2024-07-11 09:38:19 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property email with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-11 09:38:19 - building BasicValue for email
2024-07-11 09:38:19 - Skipping column re-registration: users.email
2024-07-11 09:38:19 - Building property email
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property password with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-11 09:38:19 - building BasicValue for password
2024-07-11 09:38:19 - Skipping column re-registration: users.password
2024-07-11 09:38:19 - Building property password
2024-07-11 09:38:19 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-11 09:38:19 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-11 09:38:19 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:38:19 - Binding column: AnnotatedJoinColumn()
2024-07-11 09:38:19 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-11 09:38:19 - Building property tasks
2024-07-11 09:38:19 - Binding column: AnnotatedColumn()
2024-07-11 09:38:19 - MetadataSourceProcessor property username with lazy=false
2024-07-11 09:38:19 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-11 09:38:19 - building BasicValue for username
2024-07-11 09:38:19 - Skipping column re-registration: users.username
2024-07-11 09:38:19 - Building property username
2024-07-11 09:38:19 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-11 09:38:19 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-11 09:38:19 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-11 09:38:19 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-11 09:38:19 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 09:38:19 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-11 09:38:19 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-11 09:38:19 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-11 09:38:19 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-11 09:38:19 - Building session factory
2024-07-11 09:38:19 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 09:38:19 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@556843a5, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3c5044fa, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.7176746818961465876, com.sun.management.jmxremote.port=51253, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=24948, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.7176746818961465876, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3db5195, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-11 09:38:19 - Session factory constructed with filter configurations : {}
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@70273633] under count; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@658098a2] under every; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@50628080] under any; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37393dab] under sinh; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4866a755] under cosh; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1361e880] under tanh; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3506bc8b] under pi; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bac0be5] under log; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-11 09:38:19 - Registering alternate key : length -> character_length
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7fff419d] under position; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7f2542f] under overlay; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3a44993c] under trim; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@42fd8f2f] under cast; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7eea934d] under collate; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@11cdf948] under extract; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@511a307e] under ifnull; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@23cb8fcb] under pad; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@34c6b52e] under str; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2b409174] under format; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7167d81b] under timestampadd; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2cb53bfc] under timestampdiff; prior registration was null
2024-07-11 09:38:19 - Registering alternate key : dateadd -> timestampadd
2024-07-11 09:38:19 - Registering alternate key : datediff -> timestampdiff
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@28fef9a2] under current_date; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dfab58d] under current_time; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29d29657] under current_timestamp; prior registration was null
2024-07-11 09:38:19 - Registering alternate key : current date -> current_date
2024-07-11 09:38:19 - Registering alternate key : current time -> current_time
2024-07-11 09:38:19 - Registering alternate key : current timestamp -> current_timestamp
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e0d9e3f] under local_date; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@516155b5] under local_time; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@799fc4c9] under local_datetime; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@44428583] under offset_datetime; prior registration was null
2024-07-11 09:38:19 - Registering alternate key : local date -> local_date
2024-07-11 09:38:19 - Registering alternate key : local time -> local_time
2024-07-11 09:38:19 - Registering alternate key : local datetime -> local_datetime
2024-07-11 09:38:19 - Registering alternate key : offset datetime -> offset_datetime
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@265c0752] under instant; prior registration was null
2024-07-11 09:38:19 - Registering alternate key : current_instant -> instant
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6c6b00f1] under sql; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bac0be5
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5b31a9e3] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@282240] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-11 09:38:19 - Registering alternate key : day -> dayofmonth
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b590f6a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7fff419d
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@60e5eed0] under trunc; prior registration was null
2024-07-11 09:38:19 - Registering alternate key : truncate -> trunc
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@680937c9] under bitand; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77ad2767] under bitor; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e460ca1] under bitxor; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@411ae0d7] under bitnot; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@608c2042] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2b409174
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@516155b5
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@799fc4c9
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e84a52b] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3506bc8b
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@40199d5e] under chr; prior registration was null
2024-07-11 09:38:19 - Registering alternate key : char -> chr
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5693d1d2] under sysdate; prior registration was null
2024-07-11 09:38:19 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@4840ec68] under listagg; prior registration was null
2024-07-11 09:38:19 - abs(NUMERIC arg)
2024-07-11 09:38:19 - Double acos(NUMERIC arg)
2024-07-11 09:38:19 - adddate(DATE datetime, INTEGER days)
2024-07-11 09:38:19 - addtime(TIME datetime, TIME time)
2024-07-11 09:38:19 - Boolean any(BOOLEAN arg)
2024-07-11 09:38:19 - Integer ascii(STRING arg)
2024-07-11 09:38:19 - Double asin(NUMERIC arg)
2024-07-11 09:38:19 - Double atan(NUMERIC arg)
2024-07-11 09:38:19 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-11 09:38:19 - avg(arg)
2024-07-11 09:38:19 - bit_and(arg)
2024-07-11 09:38:19 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-11 09:38:19 - bit_or(arg)
2024-07-11 09:38:19 - bitand(arg0, arg1)
2024-07-11 09:38:19 - bitnot(arg)
2024-07-11 09:38:19 - bitor(arg0, arg1)
2024-07-11 09:38:19 - bitxor(arg0, arg1)
2024-07-11 09:38:19 - cast(arg as Type)
2024-07-11 09:38:19 - ceiling(NUMERIC arg)
2024-07-11 09:38:19 - Character char(INTEGER arg)
2024-07-11 09:38:19 - Integer character_length(STRING_OR_CLOB arg)
2024-07-11 09:38:19 - Character chr(INTEGER arg)
2024-07-11 09:38:19 - coalesce(arg0[, arg1[, ...]])
2024-07-11 09:38:19 - String collate(STRING string as COLLATION collation)
2024-07-11 09:38:19 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-11 09:38:19 - Double cos(NUMERIC arg)
2024-07-11 09:38:19 - Double cosh(NUMERIC arg)
2024-07-11 09:38:19 - Double cot(NUMERIC arg)
2024-07-11 09:38:19 - Long count([distinct ]{arg|*})
2024-07-11 09:38:19 - Integer crc32(arg)
2024-07-11 09:38:19 - Date curdate()
2024-07-11 09:38:19 - Date current date
2024-07-11 09:38:19 - Time current time
2024-07-11 09:38:19 - Timestamp current timestamp
2024-07-11 09:38:19 - Date current_date
2024-07-11 09:38:19 - Instant current_instant
2024-07-11 09:38:19 - Time current_time
2024-07-11 09:38:19 - Timestamp current_timestamp
2024-07-11 09:38:19 - Time curtime()
2024-07-11 09:38:19 - Date date(arg)
2024-07-11 09:38:19 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 09:38:19 - Integer datediff(DATE end, DATE start)
2024-07-11 09:38:19 - Integer day(DATE arg)
2024-07-11 09:38:19 - String dayname(DATE arg)
2024-07-11 09:38:19 - Integer dayofmonth(DATE arg)
2024-07-11 09:38:19 - Integer dayofweek(DATE arg)
2024-07-11 09:38:19 - Integer dayofyear(DATE arg)
2024-07-11 09:38:19 - Double degrees(NUMERIC arg)
2024-07-11 09:38:19 - Boolean every(BOOLEAN arg)
2024-07-11 09:38:19 - Double exp(NUMERIC arg)
2024-07-11 09:38:19 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-11 09:38:19 - floor(NUMERIC arg)
2024-07-11 09:38:19 - String format(TEMPORAL datetime as STRING pattern)
2024-07-11 09:38:19 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 09:38:19 - Integer hour(TIME arg)
2024-07-11 09:38:19 - ifnull(arg0, arg1)
2024-07-11 09:38:19 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-11 09:38:19 - Instant instant
2024-07-11 09:38:19 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-11 09:38:19 - Date last_day(DATE arg)
2024-07-11 09:38:19 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 09:38:19 - String left(STRING string, INTEGER length)
2024-07-11 09:38:19 - Integer length(STRING_OR_CLOB arg)
2024-07-11 09:38:19 - String listagg(STRING arg0, STRING arg1)
2024-07-11 09:38:19 - Double ln(NUMERIC arg)
2024-07-11 09:38:19 - LocalDate local date
2024-07-11 09:38:19 - LocalDateTime local datetime
2024-07-11 09:38:19 - LocalTime local time
2024-07-11 09:38:19 - LocalDate local_date
2024-07-11 09:38:19 - LocalDateTime local_datetime
2024-07-11 09:38:19 - LocalTime local_time
2024-07-11 09:38:19 - Timestamp localtime
2024-07-11 09:38:19 - Timestamp localtimestamp
2024-07-11 09:38:19 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-11 09:38:19 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-11 09:38:19 - Double log10(NUMERIC arg)
2024-07-11 09:38:19 - Double log2(NUMERIC arg)
2024-07-11 09:38:19 - String lower(STRING string)
2024-07-11 09:38:19 - String lpad(string, length[, padding])
2024-07-11 09:38:19 - String ltrim(STRING string[, STRING characters])
2024-07-11 09:38:19 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-11 09:38:19 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-11 09:38:19 - max(COMPARABLE arg)
2024-07-11 09:38:19 - String md5(arg)
2024-07-11 09:38:19 - Integer microsecond(TIME arg)
2024-07-11 09:38:19 - min(COMPARABLE arg)
2024-07-11 09:38:19 - Integer minute(TIME arg)
2024-07-11 09:38:19 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-11 09:38:19 - Integer month(DATE arg)
2024-07-11 09:38:19 - String monthname(DATE arg)
2024-07-11 09:38:19 - Timestamp now()
2024-07-11 09:38:19 - nullif(arg0, arg1)
2024-07-11 09:38:19 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-11 09:38:19 - OffsetDateTime offset datetime
2024-07-11 09:38:19 - OffsetDateTime offset_datetime
2024-07-11 09:38:19 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-11 09:38:19 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-11 09:38:19 - Double pi
2024-07-11 09:38:19 - Integer position(STRING pattern in STRING string)
2024-07-11 09:38:19 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-11 09:38:19 - Integer quarter(DATE arg)
2024-07-11 09:38:19 - Double radians(NUMERIC arg)
2024-07-11 09:38:19 - Double rand([INTEGER seed])
2024-07-11 09:38:19 - String repeat(STRING string, INTEGER times)
2024-07-11 09:38:19 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-11 09:38:19 - String reverse(STRING arg)
2024-07-11 09:38:19 - String right(STRING string, INTEGER length)
2024-07-11 09:38:19 - round(NUMERIC number[, INTEGER places])
2024-07-11 09:38:19 - String rpad(string, length[, padding])
2024-07-11 09:38:19 - String rtrim(STRING string[, STRING characters])
2024-07-11 09:38:19 - Integer second(TIME arg)
2024-07-11 09:38:19 - String sha(arg)
2024-07-11 09:38:19 - String sha1(arg)
2024-07-11 09:38:19 - String sha2(arg0, arg1)
2024-07-11 09:38:19 - Integer sign(NUMERIC arg)
2024-07-11 09:38:19 - Double sin(NUMERIC arg)
2024-07-11 09:38:19 - Double sinh(NUMERIC arg)
2024-07-11 09:38:19 - String soundex(arg)
2024-07-11 09:38:19 - String space(INTEGER arg)
2024-07-11 09:38:19 - Object sql
2024-07-11 09:38:19 - Double sqrt(NUMERIC arg)
2024-07-11 09:38:19 - Double stddev(NUMERIC arg)
2024-07-11 09:38:19 - Double stddev_pop(NUMERIC arg)
2024-07-11 09:38:19 - Double stddev_samp(NUMERIC arg)
2024-07-11 09:38:19 - String str(arg)
2024-07-11 09:38:19 - subdate(DATE datetime, INTEGER days)
2024-07-11 09:38:19 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-11 09:38:19 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-11 09:38:19 - subtime(TIME datetime, TIME time)
2024-07-11 09:38:19 - sum(arg)
2024-07-11 09:38:19 - Timestamp sysdate()
2024-07-11 09:38:19 - Double tan(NUMERIC arg)
2024-07-11 09:38:19 - Double tanh(NUMERIC arg)
2024-07-11 09:38:19 - String time(arg)
2024-07-11 09:38:19 - Timestamp timestamp(arg0[, arg1])
2024-07-11 09:38:19 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 09:38:19 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 09:38:19 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-11 09:38:19 - trunc( ... )
2024-07-11 09:38:19 - truncate( ... )
2024-07-11 09:38:19 - String upper(STRING string)
2024-07-11 09:38:19 - Date utc_date
2024-07-11 09:38:19 - Time utc_time
2024-07-11 09:38:19 - Timestamp utc_timestamp
2024-07-11 09:38:19 - Double var_pop(NUMERIC arg)
2024-07-11 09:38:19 - Double var_samp(NUMERIC arg)
2024-07-11 09:38:19 - Double variance(NUMERIC arg)
2024-07-11 09:38:19 - Integer week(DATE arg)
2024-07-11 09:38:19 - Integer year(DATE arg)
2024-07-11 09:38:19 - Starting QueryInterpretationCache(2048)
2024-07-11 09:38:19 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 09:38:19 - Configured EntityCopyObserver strategy: disallow
2024-07-11 09:38:19 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 09:38:19 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 09:38:19 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-11 09:38:19 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 09:38:19 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 09:38:19 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-11 09:38:19 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-11 09:38:19 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-11 09:38:19 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-11 09:38:19 - Starting post-init callbacks
2024-07-11 09:38:19 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 09:38:19 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-11 09:38:19 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-11 09:38:19 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-11 09:38:19 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-11 09:38:19 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-11 09:38:19 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 09:38:19 - Created new SQL alias : u1_0
2024-07-11 09:38:19 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 09:38:19 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-11 09:38:19 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 09:38:19 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-11 09:38:19 -  Version select: select id from users where id=?
2024-07-11 09:38:19 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-11 09:38:19 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-11 09:38:19 -  Delete (0): delete from users where id=?
2024-07-11 09:38:19 - Created new SQL alias : t1_0
2024-07-11 09:38:19 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 09:38:19 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5b01b3f8] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 09:38:19 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-11 09:38:19 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-11 09:38:19 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-11 09:38:19 -  Version select: select id from task where id=?
2024-07-11 09:38:19 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-11 09:38:19 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 09:38:19 -  Delete (0): delete from task where id=?
2024-07-11 09:38:19 - Created new SQL alias : t1_0
2024-07-11 09:38:19 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@26b150cd] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-11 09:38:19 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-11 09:38:19 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1e1d813a] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-11 09:38:19 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-11 09:38:19 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-11 09:38:19 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 09:38:19 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 09:38:19 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1885dc2b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3af6d7a7]
2024-07-11 09:38:19 - Checking 0 named HQL queries
2024-07-11 09:38:19 - Checking 0 named SQL queries
2024-07-11 09:38:19 - create table task (id bigint not null auto_increment, category varchar(255), created_at datetime(6), description varchar(255), priority varchar(255), title varchar(255), updated_at datetime(6), user_id bigint, primary key (id)) engine=InnoDB
2024-07-11 09:38:19 - create table users (id bigint not null auto_increment, email varchar(255), password varchar(255), username varchar(255), primary key (id)) engine=InnoDB
2024-07-11 09:38:19 - alter table task add constraint FKbhwpp8tr117vvbxhf5sbkdkc9 foreign key (user_id) references users (id)
2024-07-11 09:38:19 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7fb2645b
2024-07-11 09:38:19 - Registering SessionFactory: d7353b70-f90f-4cfc-9f79-d5bd37e742af (<unnamed>)
2024-07-11 09:38:19 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 09:38:19 - Instantiated SessionFactory
2024-07-11 09:38:19 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 09:38:20 - Statistics initialized [enabled=false]
2024-07-11 09:38:20 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:38:20 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:38:20 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:38:20 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 09:38:20 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 09:38:20 - 

Using generated security password: d52e6b1c-7273-4dcd-a6e7-1402ae208e34

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-11 09:38:20 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-11 09:38:20 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-11 09:38:20 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-11 09:38:20 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-11 09:38:20 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 09:38:21 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-11 09:38:21 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-11 09:38:21 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-11 09:38:21 - Tomcat started on port 8080 (http) with context path '/'
2024-07-11 09:38:21 - Started TaskmanagementApplication in 4.868 seconds (process running for 5.307)
2024-07-11 09:38:22 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 09:38:22 - Initializing Servlet 'dispatcherServlet'
2024-07-11 09:38:22 - Detected StandardServletMultipartResolver
2024-07-11 09:38:22 - Detected AcceptHeaderLocaleResolver
2024-07-11 09:38:22 - Detected FixedThemeResolver
2024-07-11 09:38:22 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@79cfc008
2024-07-11 09:38:22 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@748015f8
2024-07-11 09:38:22 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-11 09:38:22 - Completed initialization in 1 ms
2024-07-11 09:40:22 - Securing POST /api/users/register
2024-07-11 09:40:22 - Secured POST /api/users/register
2024-07-11 09:40:22 - POST "/api/users/register", parameters={}
2024-07-11 09:40:22 - Mapped to com.example.taskmanagement.controller.UserController#registerUser(User)
2024-07-11 09:40:22 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@216d2df6]
2024-07-11 09:40:22 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 09:40:22 - begin
2024-07-11 09:40:22 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 09:40:22 - Executing identity-insert immediately
2024-07-11 09:40:22 - insert into users (email,password,username) values (?,?,?)
2024-07-11 09:40:22 - Initializer list is empty
2024-07-11 09:40:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@2eae6106
2024-07-11 09:40:22 - Extracted JDBC value [0] - [1]
2024-07-11 09:40:22 - Extracted generated values [com.example.taskmanagement.model.User]: [Ljava.lang.Object;@36ffb96d
2024-07-11 09:40:22 - committing
2024-07-11 09:40:22 - Processing flush-time cascades
2024-07-11 09:40:22 - Dirty checking collections
2024-07-11 09:40:22 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-07-11 09:40:22 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-11 09:40:22 - Listing entities:
2024-07-11 09:40:22 - com.example.taskmanagement.model.User{password=$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z., id=1, email=testuser@example.com, tasks=null, username=testuser}
2024-07-11 09:40:22 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 09:40:22 - Writing [com.example.taskmanagement.model.User@216d2df6]
2024-07-11 09:40:22 - Completed 200 OK
2024-07-11 09:40:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:43:21 - Securing POST /api/users/login
2024-07-11 09:43:21 - Secured POST /api/users/login
2024-07-11 09:43:21 - POST "/api/users/login", parameters={}
2024-07-11 09:43:21 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-11 09:43:21 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@43e855b]
2024-07-11 09:43:21 - Created new SQL alias : u1_0
2024-07-11 09:43:21 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(2085051968200))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 09:43:21 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@134a37da
2024-07-11 09:43:21 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(2085051968200).username) 
2024-07-11 09:43:21 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(2085051968200)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(2085051968200).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(2085051968200).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(2085051968200).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(2085051968200).username]

2024-07-11 09:43:21 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(2085051968200)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 09:43:21 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-11 09:43:21 - Initializer list:
	  com.example.taskmanagement.model.User(2085051968200).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(2085051968200).tasks)@106269854 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User(2085051968200) -> EntityResultInitializer(com.example.taskmanagement.model.User(2085051968200))@716531591 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 09:43:21 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-11 09:43:21 - Extracted JDBC value [0] - [1]
2024-07-11 09:43:21 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(2085051968200)): 1
2024-07-11 09:43:21 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(2085051968200).tasks#1
2024-07-11 09:43:21 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(2085051968200)#1] : 1169001591
2024-07-11 09:43:21 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 09:43:21 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 09:43:21 - Extracted JDBC value [3] - [testuser]
2024-07-11 09:43:21 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(2085051968200)#1
2024-07-11 09:43:21 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a7a2f8b
2024-07-11 09:43:21 - Using 'text/plain', given [*/*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-11 09:43:21 - Writing ["Login successful!"]
2024-07-11 09:43:21 - Completed 200 OK
2024-07-11 09:43:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:43:44 - Securing POST /api/tasks
2024-07-11 09:43:44 - Secured POST /api/tasks
2024-07-11 09:43:44 - POST "/api/tasks", parameters={}
2024-07-11 09:43:44 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(Task, String)
2024-07-11 09:43:44 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.Task@1409d58c]
2024-07-11 09:43:44 - Could not resolve parameter [1] in public com.example.taskmanagement.model.Task com.example.taskmanagement.controller.TaskController.createTask(com.example.taskmanagement.model.Task,java.lang.String): Required request parameter 'username' for method parameter type String is not present
2024-07-11 09:43:44 - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'username' for method parameter type String is not present]
2024-07-11 09:43:44 - Completed 400 BAD_REQUEST
2024-07-11 09:43:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:43:44 - Securing POST /error
2024-07-11 09:43:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 09:43:44 - Saved request http://localhost:8080/error?continue to session
2024-07-11 09:43:44 - Pre-authenticated entry point called. Rejecting access
2024-07-11 09:49:20 - Securing POST /api/tasks?username=testuser
2024-07-11 09:49:20 - Secured POST /api/tasks?username=testuser
2024-07-11 09:49:20 - POST "/api/tasks?username=testuser", parameters={masked}
2024-07-11 09:49:20 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(Task, String)
2024-07-11 09:49:20 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.Task@38b27740]
2024-07-11 09:49:20 - Created new SQL alias : u1_0
2024-07-11 09:49:20 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(2085051968200))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 09:49:20 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31ec1039
2024-07-11 09:49:20 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(2085051968200).username) 
2024-07-11 09:49:20 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(2085051968200)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(2085051968200).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(2085051968200).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(2085051968200).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(2085051968200).username]

2024-07-11 09:49:20 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(2085051968200)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 09:49:20 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-11 09:49:20 - Initializer list:
	  com.example.taskmanagement.model.User(2085051968200).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(2085051968200).tasks)@1176944572 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User(2085051968200) -> EntityResultInitializer(com.example.taskmanagement.model.User(2085051968200))@395969177 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 09:49:20 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-11 09:49:20 - Extracted JDBC value [0] - [1]
2024-07-11 09:49:20 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(2085051968200)): 1
2024-07-11 09:49:20 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(2085051968200).tasks#1
2024-07-11 09:49:20 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(2085051968200)#1] : 102228400
2024-07-11 09:49:20 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 09:49:20 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 09:49:20 - Extracted JDBC value [3] - [testuser]
2024-07-11 09:49:20 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(2085051968200)#1
2024-07-11 09:49:20 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35fd2d67
2024-07-11 09:49:20 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 09:49:20 - begin
2024-07-11 09:49:20 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 09:49:20 - Executing identity-insert immediately
2024-07-11 09:49:20 - insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-11 09:49:20 - Initializer list is empty
2024-07-11 09:49:20 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@32717d90
2024-07-11 09:49:20 - Extracted JDBC value [0] - [1]
2024-07-11 09:49:20 - Extracted generated values [com.example.taskmanagement.model.Task]: [Ljava.lang.Object;@1c727bd5
2024-07-11 09:49:20 - committing
2024-07-11 09:49:20 - Processing flush-time cascades
2024-07-11 09:49:20 - Dirty checking collections
2024-07-11 09:49:20 - Collection found: [com.example.taskmanagement.model.User.tasks#1], was: [com.example.taskmanagement.model.User.tasks#1] (uninitialized)
2024-07-11 09:49:20 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2024-07-11 09:49:20 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-11 09:49:20 - Listing entities:
2024-07-11 09:49:20 - com.example.taskmanagement.model.User{password=$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z., id=1, email=testuser@example.com, tasks=<uninitialized>, username=testuser}
2024-07-11 09:49:20 - com.example.taskmanagement.model.Task{createdAt=null, description=This is a test task, id=1, category=Work, priority=High, title=Test Task, user=com.example.taskmanagement.model.User#1, updatedAt=null}
2024-07-11 09:49:20 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 09:49:20 - Writing [com.example.taskmanagement.model.Task@38b27740]
2024-07-11 09:49:20 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 09:49:20 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@417998141 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@681566796)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@179825344 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@753380076)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1701687680 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-11 09:49:20 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-11 09:49:20 - Extracted JDBC value [0] - [1]
2024-07-11 09:49:20 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 09:49:20 - Extracted JDBC value [1] - [1]
2024-07-11 09:49:20 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 1
2024-07-11 09:49:20 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#1] : org.hibernate.collection.spi.PersistentSet@1105114401
2024-07-11 09:49:20 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#1] -> org.hibernate.collection.spi.PersistentSet@1105114401
2024-07-11 09:49:20 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@78f9c22f
2024-07-11 09:49:20 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#1]
2024-07-11 09:49:20 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-11 09:49:20 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-11 09:49:20 - Completed 200 OK
2024-07-11 09:49:20 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:06:46 - Starting TaskmanagementApplication using Java 22.0.1 with PID 11788 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 10:06:46 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 10:06:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 10:06:47 - Finished Spring Data repository scanning in 41 ms. Found 2 JPA repository interfaces.
2024-07-11 10:06:48 - Tomcat initialized with port 8080 (http)
2024-07-11 10:06:48 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 10:06:48 - Starting service [Tomcat]
2024-07-11 10:06:48 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 10:06:48 - Initializing Spring embedded WebApplicationContext
2024-07-11 10:06:48 - Root WebApplicationContext: initialization completed in 1647 ms
2024-07-11 10:06:48 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 10:06:48 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-11 10:06:48 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-11 10:06:48 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 10:06:48 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 10:06:48 - HHH000206: 'hibernate.properties' not found
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 10:06:48 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 10:06:48 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 10:06:48 - HHH000026: Second-level cache disabled
2024-07-11 10:06:48 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-11 10:06:48 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-11 10:06:48 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-11 10:06:48 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2acca224
2024-07-11 10:06:48 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2acca224
2024-07-11 10:06:48 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 10:06:48 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 10:06:48 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-11 10:06:48 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-11 10:06:48 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 10:06:48 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 10:06:48 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 10:06:48 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5ddb302
2024-07-11 10:06:48 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5ddb302
2024-07-11 10:06:48 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5ddb302
2024-07-11 10:06:48 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 10:06:48 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 10:06:48 - Adding type registration image -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-11 10:06:48 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-11 10:06:48 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-11 10:06:48 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@51813065
2024-07-11 10:06:48 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-11 10:06:48 - Adding type registration short -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 10:06:48 - Adding type registration short -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 10:06:48 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 10:06:48 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-11 10:06:48 - Adding type registration int -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-11 10:06:48 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-11 10:06:48 - Adding type registration long -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 10:06:48 - Adding type registration long -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 10:06:48 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 10:06:48 - Adding type registration float -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 10:06:48 - Adding type registration float -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 10:06:48 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 10:06:48 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 10:06:48 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 10:06:48 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 10:06:48 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 10:06:48 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 10:06:48 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-11 10:06:48 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-11 10:06:48 - Adding type registration character -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 10:06:48 - Adding type registration char -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 10:06:48 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 10:06:48 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-11 10:06:48 - Adding type registration string -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 10:06:48 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 10:06:48 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-11 10:06:48 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-11 10:06:48 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-11 10:06:48 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-11 10:06:48 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@72a34537
2024-07-11 10:06:48 - Adding type registration text -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-11 10:06:48 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-11 10:06:48 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-11 10:06:48 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-11 10:06:48 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-11 10:06:48 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-11 10:06:48 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@35536760
2024-07-11 10:06:48 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-11 10:06:48 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-11 10:06:48 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-11 10:06:48 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-11 10:06:48 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-11 10:06:48 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-11 10:06:48 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-11 10:06:48 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-11 10:06:48 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-11 10:06:48 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-11 10:06:48 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-11 10:06:48 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-11 10:06:48 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-11 10:06:48 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-11 10:06:48 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-11 10:06:48 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-11 10:06:48 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-11 10:06:48 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-11 10:06:48 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-11 10:06:48 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-11 10:06:48 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-11 10:06:48 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-11 10:06:48 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-11 10:06:48 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-11 10:06:48 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-11 10:06:48 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-11 10:06:48 - Adding type registration date -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-11 10:06:48 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-11 10:06:48 - Adding type registration time -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-11 10:06:48 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-11 10:06:48 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-11 10:06:48 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-11 10:06:48 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-11 10:06:48 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-11 10:06:48 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-11 10:06:48 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-11 10:06:48 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-11 10:06:48 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-11 10:06:48 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-11 10:06:48 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-11 10:06:48 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-11 10:06:48 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-11 10:06:48 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-11 10:06:48 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-11 10:06:48 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-11 10:06:48 - Adding type registration class -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-11 10:06:48 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-11 10:06:48 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-11 10:06:48 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-11 10:06:48 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-11 10:06:48 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-11 10:06:48 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-11 10:06:48 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-11 10:06:48 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-11 10:06:48 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-11 10:06:48 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-11 10:06:48 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-11 10:06:48 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-11 10:06:48 - Adding type registration url -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-11 10:06:48 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-11 10:06:48 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-11 10:06:48 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-11 10:06:48 - Adding type registration object -> org.hibernate.type.JavaObjectType@2558f65c
2024-07-11 10:06:48 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2558f65c
2024-07-11 10:06:48 - Adding type registration null -> org.hibernate.type.NullType@66a472b9
2024-07-11 10:06:48 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@428eb3d5
2024-07-11 10:06:48 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5ddd84d2
2024-07-11 10:06:48 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3fd5d679
2024-07-11 10:06:48 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7aa15a80
2024-07-11 10:06:48 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4d065e1a
2024-07-11 10:06:48 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7c4ca87c
2024-07-11 10:06:48 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6dbbdf92
2024-07-11 10:06:48 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1dbeedff
2024-07-11 10:06:48 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58bad46f] into BootstrapContext; was [null]
2024-07-11 10:06:48 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58bad46f) [was null]
2024-07-11 10:06:48 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3bcc8f13] into BootstrapContext; was [null]
2024-07-11 10:06:48 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3cb04dd] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@73d91faf]
2024-07-11 10:06:49 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 10:06:49 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58bad46f]
2024-07-11 10:06:49 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58bad46f]
2024-07-11 10:06:49 - HikariPool-1 - Starting...
2024-07-11 10:06:49 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@54e18a46
2024-07-11 10:06:49 - HikariPool-1 - Start completed.
2024-07-11 10:06:49 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-11 10:06:49 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-11 10:06:49 - JDBC version : 4.2
2024-07-11 10:06:49 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-11 10:06:49 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-11 10:06:49 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-11 10:06:49 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-11 10:06:49 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-11 10:06:49 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61b0af9f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71fb1da3)
2024-07-11 10:06:49 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ecec098) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6cc44207)
2024-07-11 10:06:49 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8ecc457) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21d3d6ec)
2024-07-11 10:06:49 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f1184e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ebaf0d)
2024-07-11 10:06:49 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@694b1ddb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5690c2a8)
2024-07-11 10:06:49 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17e2835c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d2bc56a)
2024-07-11 10:06:49 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7cbfbcd1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c6aa46c)
2024-07-11 10:06:49 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f112ade) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c82bac3)
2024-07-11 10:06:49 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ddac0b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@446a5aa5)
2024-07-11 10:06:49 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-11 10:06:49 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-11 10:06:49 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-11 10:06:49 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 10:06:49 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 10:06:49 - Adding type registration null -> org.hibernate.type.NullType@10f10230
2024-07-11 10:06:49 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@66a472b9`
2024-07-11 10:06:49 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-11 10:06:49 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 10:06:49 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 10:06:49 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 10:06:49 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 10:06:49 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 10:06:49 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 10:06:49 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 10:06:49 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 10:06:49 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 10:06:49 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 10:06:49 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 10:06:49 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@716e6fa5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@91a1005]
2024-07-11 10:06:49 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 10:06:49 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-11 10:06:49 - Import with entity name Task
2024-07-11 10:06:49 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-11 10:06:49 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 10:06:49 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 10:06:49 - MetadataSourceProcessor property id with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-11 10:06:49 - building BasicValue for id
2024-07-11 10:06:49 - Skipping column re-registration: task.id
2024-07-11 10:06:49 - Building property id
2024-07-11 10:06:49 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property category with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-11 10:06:49 - building BasicValue for category
2024-07-11 10:06:49 - Skipping column re-registration: task.category
2024-07-11 10:06:49 - Building property category
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-11 10:06:49 - building BasicValue for createdAt
2024-07-11 10:06:49 - Skipping column re-registration: task.created_at
2024-07-11 10:06:49 - Building property createdAt
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property description with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-11 10:06:49 - building BasicValue for description
2024-07-11 10:06:49 - Skipping column re-registration: task.description
2024-07-11 10:06:49 - Building property description
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property priority with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-11 10:06:49 - building BasicValue for priority
2024-07-11 10:06:49 - Skipping column re-registration: task.priority
2024-07-11 10:06:49 - Building property priority
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property title with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-11 10:06:49 - building BasicValue for title
2024-07-11 10:06:49 - Skipping column re-registration: task.title
2024-07-11 10:06:49 - Building property title
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-11 10:06:49 - building BasicValue for updatedAt
2024-07-11 10:06:49 - Skipping column re-registration: task.updated_at
2024-07-11 10:06:49 - Building property updatedAt
2024-07-11 10:06:49 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - Building property user
2024-07-11 10:06:49 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 10:06:49 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-11 10:06:49 - Import with entity name User
2024-07-11 10:06:49 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-11 10:06:49 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 10:06:49 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 10:06:49 - MetadataSourceProcessor property id with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-11 10:06:49 - building BasicValue for id
2024-07-11 10:06:49 - Skipping column re-registration: users.id
2024-07-11 10:06:49 - Building property id
2024-07-11 10:06:49 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property email with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-11 10:06:49 - building BasicValue for email
2024-07-11 10:06:49 - Skipping column re-registration: users.email
2024-07-11 10:06:49 - Building property email
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property password with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-11 10:06:49 - building BasicValue for password
2024-07-11 10:06:49 - Skipping column re-registration: users.password
2024-07-11 10:06:49 - Building property password
2024-07-11 10:06:49 - Binding column: AnnotatedJoinColumn()
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-11 10:06:49 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-11 10:06:49 - Binding column: AnnotatedJoinColumn()
2024-07-11 10:06:49 - Binding column: AnnotatedJoinColumn()
2024-07-11 10:06:49 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-11 10:06:49 - Building property tasks
2024-07-11 10:06:49 - Binding column: AnnotatedColumn()
2024-07-11 10:06:49 - MetadataSourceProcessor property username with lazy=false
2024-07-11 10:06:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-11 10:06:49 - building BasicValue for username
2024-07-11 10:06:49 - Skipping column re-registration: users.username
2024-07-11 10:06:49 - Building property username
2024-07-11 10:06:49 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-11 10:06:49 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-11 10:06:49 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-11 10:06:49 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-11 10:06:49 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 10:06:49 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-11 10:06:49 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-11 10:06:49 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-11 10:06:49 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-11 10:06:49 - Building session factory
2024-07-11 10:06:49 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 10:06:49 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2ec23ec3, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7c2e88b9, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.14986518005613590610, com.sun.management.jmxremote.port=51253, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=11788, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.14986518005613590610, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@556843a5, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-11 10:06:49 - Session factory constructed with filter configurations : {}
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@52849956] under count; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@55821edf] under every; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5e5a2b74] under any; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fce8243] under sinh; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52fe87e0] under cosh; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37393dab] under tanh; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4866a755] under pi; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1361e880] under log; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-11 10:06:49 - Registering alternate key : length -> character_length
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3ea1729e] under position; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@870a9f2] under overlay; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@301f9aa0] under trim; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@5adc71e7] under cast; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fc5a558] under collate; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@153d14e3] under extract; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2fd8b081] under ifnull; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@10d97b64] under pad; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7efba9b9] under str; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@d17d554] under format; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@229d508c] under timestampadd; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2f3c7b24] under timestampdiff; prior registration was null
2024-07-11 10:06:49 - Registering alternate key : dateadd -> timestampadd
2024-07-11 10:06:49 - Registering alternate key : datediff -> timestampdiff
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3bbdf835] under current_date; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d114d27] under current_time; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@28fef9a2] under current_timestamp; prior registration was null
2024-07-11 10:06:49 - Registering alternate key : current date -> current_date
2024-07-11 10:06:49 - Registering alternate key : current time -> current_time
2024-07-11 10:06:49 - Registering alternate key : current timestamp -> current_timestamp
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dfab58d] under local_date; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29d29657] under local_time; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e0d9e3f] under local_datetime; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@516155b5] under offset_datetime; prior registration was null
2024-07-11 10:06:49 - Registering alternate key : local date -> local_date
2024-07-11 10:06:49 - Registering alternate key : local time -> local_time
2024-07-11 10:06:49 - Registering alternate key : local datetime -> local_datetime
2024-07-11 10:06:49 - Registering alternate key : offset datetime -> offset_datetime
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@799fc4c9] under instant; prior registration was null
2024-07-11 10:06:49 - Registering alternate key : current_instant -> instant
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7a75183d] under sql; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1361e880
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1a7437d8] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6f695077] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-11 10:06:49 - Registering alternate key : day -> dayofmonth
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b31a9e3] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3ea1729e
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@644f6e89] under trunc; prior registration was null
2024-07-11 10:06:49 - Registering alternate key : truncate -> trunc
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9ae0794] under bitand; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e5eed0] under bitor; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@680937c9] under bitxor; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77ad2767] under bitnot; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@e460ca1] under format; prior registration was org.hibernate.dialect.function.FormatFunction@d17d554
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@29d29657
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@e0d9e3f
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@411ae0d7] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4866a755
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@608c2042] under chr; prior registration was null
2024-07-11 10:06:49 - Registering alternate key : char -> chr
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e84a52b] under sysdate; prior registration was null
2024-07-11 10:06:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@c6a3f47] under listagg; prior registration was null
2024-07-11 10:06:49 - abs(NUMERIC arg)
2024-07-11 10:06:49 - Double acos(NUMERIC arg)
2024-07-11 10:06:49 - adddate(DATE datetime, INTEGER days)
2024-07-11 10:06:49 - addtime(TIME datetime, TIME time)
2024-07-11 10:06:49 - Boolean any(BOOLEAN arg)
2024-07-11 10:06:49 - Integer ascii(STRING arg)
2024-07-11 10:06:49 - Double asin(NUMERIC arg)
2024-07-11 10:06:49 - Double atan(NUMERIC arg)
2024-07-11 10:06:49 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-11 10:06:49 - avg(arg)
2024-07-11 10:06:49 - bit_and(arg)
2024-07-11 10:06:49 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-11 10:06:49 - bit_or(arg)
2024-07-11 10:06:49 - bitand(arg0, arg1)
2024-07-11 10:06:49 - bitnot(arg)
2024-07-11 10:06:49 - bitor(arg0, arg1)
2024-07-11 10:06:49 - bitxor(arg0, arg1)
2024-07-11 10:06:49 - cast(arg as Type)
2024-07-11 10:06:49 - ceiling(NUMERIC arg)
2024-07-11 10:06:49 - Character char(INTEGER arg)
2024-07-11 10:06:49 - Integer character_length(STRING_OR_CLOB arg)
2024-07-11 10:06:49 - Character chr(INTEGER arg)
2024-07-11 10:06:49 - coalesce(arg0[, arg1[, ...]])
2024-07-11 10:06:49 - String collate(STRING string as COLLATION collation)
2024-07-11 10:06:49 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-11 10:06:49 - Double cos(NUMERIC arg)
2024-07-11 10:06:49 - Double cosh(NUMERIC arg)
2024-07-11 10:06:49 - Double cot(NUMERIC arg)
2024-07-11 10:06:49 - Long count([distinct ]{arg|*})
2024-07-11 10:06:49 - Integer crc32(arg)
2024-07-11 10:06:49 - Date curdate()
2024-07-11 10:06:49 - Date current date
2024-07-11 10:06:49 - Time current time
2024-07-11 10:06:49 - Timestamp current timestamp
2024-07-11 10:06:49 - Date current_date
2024-07-11 10:06:49 - Instant current_instant
2024-07-11 10:06:49 - Time current_time
2024-07-11 10:06:49 - Timestamp current_timestamp
2024-07-11 10:06:49 - Time curtime()
2024-07-11 10:06:49 - Date date(arg)
2024-07-11 10:06:49 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 10:06:49 - Integer datediff(DATE end, DATE start)
2024-07-11 10:06:49 - Integer day(DATE arg)
2024-07-11 10:06:49 - String dayname(DATE arg)
2024-07-11 10:06:49 - Integer dayofmonth(DATE arg)
2024-07-11 10:06:49 - Integer dayofweek(DATE arg)
2024-07-11 10:06:49 - Integer dayofyear(DATE arg)
2024-07-11 10:06:49 - Double degrees(NUMERIC arg)
2024-07-11 10:06:49 - Boolean every(BOOLEAN arg)
2024-07-11 10:06:49 - Double exp(NUMERIC arg)
2024-07-11 10:06:49 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-11 10:06:49 - floor(NUMERIC arg)
2024-07-11 10:06:49 - String format(TEMPORAL datetime as STRING pattern)
2024-07-11 10:06:49 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 10:06:49 - Integer hour(TIME arg)
2024-07-11 10:06:49 - ifnull(arg0, arg1)
2024-07-11 10:06:49 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-11 10:06:49 - Instant instant
2024-07-11 10:06:49 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-11 10:06:49 - Date last_day(DATE arg)
2024-07-11 10:06:49 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 10:06:49 - String left(STRING string, INTEGER length)
2024-07-11 10:06:49 - Integer length(STRING_OR_CLOB arg)
2024-07-11 10:06:49 - String listagg(STRING arg0, STRING arg1)
2024-07-11 10:06:49 - Double ln(NUMERIC arg)
2024-07-11 10:06:49 - LocalDate local date
2024-07-11 10:06:49 - LocalDateTime local datetime
2024-07-11 10:06:49 - LocalTime local time
2024-07-11 10:06:49 - LocalDate local_date
2024-07-11 10:06:49 - LocalDateTime local_datetime
2024-07-11 10:06:49 - LocalTime local_time
2024-07-11 10:06:49 - Timestamp localtime
2024-07-11 10:06:49 - Timestamp localtimestamp
2024-07-11 10:06:49 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-11 10:06:49 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-11 10:06:49 - Double log10(NUMERIC arg)
2024-07-11 10:06:49 - Double log2(NUMERIC arg)
2024-07-11 10:06:49 - String lower(STRING string)
2024-07-11 10:06:49 - String lpad(string, length[, padding])
2024-07-11 10:06:49 - String ltrim(STRING string[, STRING characters])
2024-07-11 10:06:49 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-11 10:06:49 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-11 10:06:49 - max(COMPARABLE arg)
2024-07-11 10:06:49 - String md5(arg)
2024-07-11 10:06:49 - Integer microsecond(TIME arg)
2024-07-11 10:06:49 - min(COMPARABLE arg)
2024-07-11 10:06:49 - Integer minute(TIME arg)
2024-07-11 10:06:49 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-11 10:06:49 - Integer month(DATE arg)
2024-07-11 10:06:49 - String monthname(DATE arg)
2024-07-11 10:06:49 - Timestamp now()
2024-07-11 10:06:49 - nullif(arg0, arg1)
2024-07-11 10:06:49 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-11 10:06:49 - OffsetDateTime offset datetime
2024-07-11 10:06:49 - OffsetDateTime offset_datetime
2024-07-11 10:06:49 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-11 10:06:49 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-11 10:06:49 - Double pi
2024-07-11 10:06:49 - Integer position(STRING pattern in STRING string)
2024-07-11 10:06:49 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-11 10:06:49 - Integer quarter(DATE arg)
2024-07-11 10:06:49 - Double radians(NUMERIC arg)
2024-07-11 10:06:49 - Double rand([INTEGER seed])
2024-07-11 10:06:49 - String repeat(STRING string, INTEGER times)
2024-07-11 10:06:49 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-11 10:06:49 - String reverse(STRING arg)
2024-07-11 10:06:49 - String right(STRING string, INTEGER length)
2024-07-11 10:06:49 - round(NUMERIC number[, INTEGER places])
2024-07-11 10:06:49 - String rpad(string, length[, padding])
2024-07-11 10:06:49 - String rtrim(STRING string[, STRING characters])
2024-07-11 10:06:49 - Integer second(TIME arg)
2024-07-11 10:06:49 - String sha(arg)
2024-07-11 10:06:49 - String sha1(arg)
2024-07-11 10:06:49 - String sha2(arg0, arg1)
2024-07-11 10:06:49 - Integer sign(NUMERIC arg)
2024-07-11 10:06:49 - Double sin(NUMERIC arg)
2024-07-11 10:06:49 - Double sinh(NUMERIC arg)
2024-07-11 10:06:49 - String soundex(arg)
2024-07-11 10:06:49 - String space(INTEGER arg)
2024-07-11 10:06:49 - Object sql
2024-07-11 10:06:49 - Double sqrt(NUMERIC arg)
2024-07-11 10:06:49 - Double stddev(NUMERIC arg)
2024-07-11 10:06:49 - Double stddev_pop(NUMERIC arg)
2024-07-11 10:06:49 - Double stddev_samp(NUMERIC arg)
2024-07-11 10:06:49 - String str(arg)
2024-07-11 10:06:49 - subdate(DATE datetime, INTEGER days)
2024-07-11 10:06:49 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-11 10:06:49 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-11 10:06:49 - subtime(TIME datetime, TIME time)
2024-07-11 10:06:49 - sum(arg)
2024-07-11 10:06:49 - Timestamp sysdate()
2024-07-11 10:06:49 - Double tan(NUMERIC arg)
2024-07-11 10:06:49 - Double tanh(NUMERIC arg)
2024-07-11 10:06:49 - String time(arg)
2024-07-11 10:06:49 - Timestamp timestamp(arg0[, arg1])
2024-07-11 10:06:49 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 10:06:49 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 10:06:49 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-11 10:06:49 - trunc( ... )
2024-07-11 10:06:49 - truncate( ... )
2024-07-11 10:06:49 - String upper(STRING string)
2024-07-11 10:06:49 - Date utc_date
2024-07-11 10:06:49 - Time utc_time
2024-07-11 10:06:49 - Timestamp utc_timestamp
2024-07-11 10:06:49 - Double var_pop(NUMERIC arg)
2024-07-11 10:06:49 - Double var_samp(NUMERIC arg)
2024-07-11 10:06:49 - Double variance(NUMERIC arg)
2024-07-11 10:06:49 - Integer week(DATE arg)
2024-07-11 10:06:49 - Integer year(DATE arg)
2024-07-11 10:06:49 - Starting QueryInterpretationCache(2048)
2024-07-11 10:06:49 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 10:06:49 - Configured EntityCopyObserver strategy: disallow
2024-07-11 10:06:49 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 10:06:49 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 10:06:49 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-11 10:06:49 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 10:06:49 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 10:06:49 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-11 10:06:49 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-11 10:06:49 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-11 10:06:49 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-11 10:06:49 - Starting post-init callbacks
2024-07-11 10:06:49 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 10:06:49 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-11 10:06:49 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-11 10:06:49 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-11 10:06:49 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-11 10:06:49 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-11 10:06:49 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 10:06:49 - Created new SQL alias : u1_0
2024-07-11 10:06:49 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 10:06:50 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-11 10:06:50 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 10:06:50 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-11 10:06:50 -  Version select: select id from users where id=?
2024-07-11 10:06:50 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-11 10:06:50 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-11 10:06:50 -  Delete (0): delete from users where id=?
2024-07-11 10:06:50 - Created new SQL alias : t1_0
2024-07-11 10:06:50 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 10:06:50 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27c49f54] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 10:06:50 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-11 10:06:50 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-11 10:06:50 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-11 10:06:50 -  Version select: select id from task where id=?
2024-07-11 10:06:50 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-11 10:06:50 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 10:06:50 -  Delete (0): delete from task where id=?
2024-07-11 10:06:50 - Created new SQL alias : t1_0
2024-07-11 10:06:50 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@62ff3028] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-11 10:06:50 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-11 10:06:50 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1964ef9] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-11 10:06:50 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-11 10:06:50 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-11 10:06:50 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 10:06:50 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 10:06:50 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@716e6fa5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@18711946]
2024-07-11 10:06:50 - Checking 0 named HQL queries
2024-07-11 10:06:50 - Checking 0 named SQL queries
2024-07-11 10:06:50 - No alter strings for table : task
2024-07-11 10:06:50 - No alter strings for table : users
2024-07-11 10:06:50 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6af02de0
2024-07-11 10:06:50 - Registering SessionFactory: a719b6a9-b668-4671-bffd-eeb671fa301e (<unnamed>)
2024-07-11 10:06:50 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 10:06:50 - Instantiated SessionFactory
2024-07-11 10:06:50 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 10:06:50 - Statistics initialized [enabled=false]
2024-07-11 10:06:50 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 10:06:50 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 10:06:50 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 10:06:50 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 10:06:50 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 10:06:50 - 

Using generated security password: bb609149-50d2-4ff9-800c-fc2bac9865f0

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-11 10:06:50 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-11 10:06:50 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-11 10:06:50 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-11 10:06:50 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-11 10:06:51 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 10:06:51 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-11 10:06:51 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-11 10:06:51 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-11 10:06:51 - Tomcat started on port 8080 (http) with context path '/'
2024-07-11 10:06:51 - Started TaskmanagementApplication in 5.139 seconds (process running for 5.564)
2024-07-11 10:06:52 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 10:06:52 - Initializing Servlet 'dispatcherServlet'
2024-07-11 10:06:52 - Detected StandardServletMultipartResolver
2024-07-11 10:06:52 - Detected AcceptHeaderLocaleResolver
2024-07-11 10:06:52 - Detected FixedThemeResolver
2024-07-11 10:06:52 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@5b1dd206
2024-07-11 10:06:52 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@411b75b4
2024-07-11 10:06:52 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-11 10:06:52 - Completed initialization in 1 ms
2024-07-11 10:18:59 - Securing POST /api/tasks
2024-07-11 10:18:59 - Secured POST /api/tasks
2024-07-11 10:18:59 - POST "/api/tasks", parameters={}
2024-07-11 10:18:59 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(TaskDTO, String)
2024-07-11 10:18:59 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@2aaf5678]
2024-07-11 10:18:59 - Could not resolve parameter [1] in public com.example.taskmanagement.dto.TaskDTO com.example.taskmanagement.controller.TaskController.createTask(com.example.taskmanagement.dto.TaskDTO,java.lang.String): Required request parameter 'username' for method parameter type String is not present
2024-07-11 10:18:59 - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'username' for method parameter type String is not present]
2024-07-11 10:18:59 - Completed 400 BAD_REQUEST
2024-07-11 10:18:59 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:18:59 - Securing POST /error
2024-07-11 10:18:59 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:18:59 - Saved request http://localhost:8080/error?continue to session
2024-07-11 10:18:59 - Pre-authenticated entry point called. Rejecting access
2024-07-11 10:25:37 - Securing POST /api/tasks?userId=1
2024-07-11 10:25:37 - Secured POST /api/tasks?userId=1
2024-07-11 10:25:37 - POST "/api/tasks?userId=1", parameters={masked}
2024-07-11 10:25:37 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(TaskDTO, String)
2024-07-11 10:25:37 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@6dd3560a]
2024-07-11 10:25:37 - Could not resolve parameter [1] in public com.example.taskmanagement.dto.TaskDTO com.example.taskmanagement.controller.TaskController.createTask(com.example.taskmanagement.dto.TaskDTO,java.lang.String): Required request parameter 'username' for method parameter type String is not present
2024-07-11 10:25:37 - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'username' for method parameter type String is not present]
2024-07-11 10:25:37 - Completed 400 BAD_REQUEST
2024-07-11 10:25:37 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:25:37 - Securing POST /error?userId=1
2024-07-11 10:25:37 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:25:37 - Saved request http://localhost:8080/error?userId=1&continue to session
2024-07-11 10:25:37 - Pre-authenticated entry point called. Rejecting access
2024-07-11 10:25:54 - Securing POST /api/tasks?userId=1
2024-07-11 10:25:54 - Secured POST /api/tasks?userId=1
2024-07-11 10:25:54 - POST "/api/tasks?userId=1", parameters={masked}
2024-07-11 10:25:54 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(TaskDTO, String)
2024-07-11 10:25:54 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@4dc8e153]
2024-07-11 10:25:54 - Could not resolve parameter [1] in public com.example.taskmanagement.dto.TaskDTO com.example.taskmanagement.controller.TaskController.createTask(com.example.taskmanagement.dto.TaskDTO,java.lang.String): Required request parameter 'username' for method parameter type String is not present
2024-07-11 10:25:54 - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'username' for method parameter type String is not present]
2024-07-11 10:25:54 - Completed 400 BAD_REQUEST
2024-07-11 10:25:54 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:25:54 - Securing POST /error?userId=1
2024-07-11 10:25:54 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:25:54 - Saved request http://localhost:8080/error?userId=1&continue to session
2024-07-11 10:25:54 - Pre-authenticated entry point called. Rejecting access
2024-07-11 10:27:07 - Starting TaskmanagementApplication using Java 22.0.1 with PID 16668 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 10:27:07 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 10:27:08 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 10:27:08 - Finished Spring Data repository scanning in 35 ms. Found 2 JPA repository interfaces.
2024-07-11 10:27:09 - Tomcat initialized with port 8080 (http)
2024-07-11 10:27:09 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 10:27:09 - Starting service [Tomcat]
2024-07-11 10:27:09 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 10:27:09 - Initializing Spring embedded WebApplicationContext
2024-07-11 10:27:09 - Root WebApplicationContext: initialization completed in 1595 ms
2024-07-11 10:27:09 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 10:27:09 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-11 10:27:09 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-11 10:27:09 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 10:27:09 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 10:27:09 - HHH000206: 'hibernate.properties' not found
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 10:27:09 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 10:27:09 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 10:27:09 - HHH000026: Second-level cache disabled
2024-07-11 10:27:09 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@391d28ea
2024-07-11 10:27:09 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@391d28ea
2024-07-11 10:27:09 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@391d28ea
2024-07-11 10:27:09 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@23df7fad
2024-07-11 10:27:09 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@23df7fad
2024-07-11 10:27:09 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-11 10:27:09 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-11 10:27:09 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2acca224
2024-07-11 10:27:09 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2acca224
2024-07-11 10:27:09 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 10:27:09 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 10:27:09 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 10:27:09 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-11 10:27:09 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-11 10:27:09 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-11 10:27:09 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 10:27:09 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 10:27:09 - Adding type registration image -> org.hibernate.type.BasicTypeReference@5ddb302
2024-07-11 10:27:09 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 10:27:09 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 10:27:09 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-11 10:27:09 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-11 10:27:09 - Adding type registration short -> org.hibernate.type.BasicTypeReference@51813065
2024-07-11 10:27:09 - Adding type registration short -> org.hibernate.type.BasicTypeReference@51813065
2024-07-11 10:27:09 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@51813065
2024-07-11 10:27:09 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-11 10:27:09 - Adding type registration int -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-11 10:27:09 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-11 10:27:09 - Adding type registration long -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 10:27:09 - Adding type registration long -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 10:27:09 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 10:27:09 - Adding type registration float -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-11 10:27:09 - Adding type registration float -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-11 10:27:09 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-11 10:27:09 - Adding type registration double -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 10:27:09 - Adding type registration double -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 10:27:09 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 10:27:09 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 10:27:09 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 10:27:09 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 10:27:09 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 10:27:09 - Adding type registration character -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 10:27:09 - Adding type registration char -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 10:27:09 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 10:27:09 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-11 10:27:09 - Adding type registration string -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 10:27:09 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 10:27:09 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-11 10:27:09 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 10:27:09 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 10:27:09 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 10:27:09 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-11 10:27:09 - Adding type registration text -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-11 10:27:09 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@72a34537
2024-07-11 10:27:09 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-11 10:27:09 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-11 10:27:09 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-11 10:27:09 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-11 10:27:09 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-11 10:27:09 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-11 10:27:09 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@35536760
2024-07-11 10:27:09 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-11 10:27:09 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-11 10:27:09 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-11 10:27:09 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-11 10:27:09 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-11 10:27:09 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-11 10:27:09 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-11 10:27:09 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-11 10:27:09 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-11 10:27:09 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-11 10:27:09 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-11 10:27:09 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-11 10:27:09 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-11 10:27:09 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-11 10:27:09 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-11 10:27:09 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-11 10:27:09 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-11 10:27:09 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-11 10:27:09 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-11 10:27:09 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-11 10:27:09 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-11 10:27:09 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-11 10:27:09 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-11 10:27:09 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-11 10:27:09 - Adding type registration date -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-11 10:27:09 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-11 10:27:09 - Adding type registration time -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-11 10:27:09 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-11 10:27:09 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-11 10:27:09 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-11 10:27:09 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-11 10:27:09 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-11 10:27:09 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-11 10:27:09 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-11 10:27:09 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-11 10:27:09 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-11 10:27:09 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-11 10:27:09 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-11 10:27:09 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-11 10:27:09 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-11 10:27:09 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-11 10:27:09 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-11 10:27:09 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-11 10:27:09 - Adding type registration class -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-11 10:27:09 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-11 10:27:09 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-11 10:27:09 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-11 10:27:09 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-11 10:27:09 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-11 10:27:09 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-11 10:27:09 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-11 10:27:09 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-11 10:27:09 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-11 10:27:09 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-11 10:27:09 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-11 10:27:09 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-11 10:27:09 - Adding type registration url -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-11 10:27:09 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-11 10:27:09 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-11 10:27:09 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-11 10:27:09 - Adding type registration object -> org.hibernate.type.JavaObjectType@11f3400c
2024-07-11 10:27:09 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@11f3400c
2024-07-11 10:27:09 - Adding type registration null -> org.hibernate.type.NullType@15914bb5
2024-07-11 10:27:09 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7b332b23
2024-07-11 10:27:09 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@66a472b9
2024-07-11 10:27:09 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@428eb3d5
2024-07-11 10:27:09 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5ddd84d2
2024-07-11 10:27:09 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3fd5d679
2024-07-11 10:27:09 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7aa15a80
2024-07-11 10:27:09 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4d065e1a
2024-07-11 10:27:09 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7c4ca87c
2024-07-11 10:27:09 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2beee3e8] into BootstrapContext; was [null]
2024-07-11 10:27:09 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2beee3e8) [was null]
2024-07-11 10:27:09 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3ba97962] into BootstrapContext; was [null]
2024-07-11 10:27:09 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@35becbd4] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3bcc8f13]
2024-07-11 10:27:09 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 10:27:09 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2beee3e8]
2024-07-11 10:27:09 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2beee3e8]
2024-07-11 10:27:09 - HikariPool-1 - Starting...
2024-07-11 10:27:09 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7816454d
2024-07-11 10:27:09 - HikariPool-1 - Start completed.
2024-07-11 10:27:09 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-11 10:27:09 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-11 10:27:09 - JDBC version : 4.2
2024-07-11 10:27:09 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-11 10:27:09 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-11 10:27:09 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-11 10:27:09 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-11 10:27:09 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-11 10:27:10 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5cd6719d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ef591af)
2024-07-11 10:27:10 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61b0af9f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71fb1da3)
2024-07-11 10:27:10 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1ecec098) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6cc44207)
2024-07-11 10:27:10 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8ecc457) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21d3d6ec)
2024-07-11 10:27:10 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f1184e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7ebaf0d)
2024-07-11 10:27:10 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@694b1ddb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5690c2a8)
2024-07-11 10:27:10 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17e2835c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d2bc56a)
2024-07-11 10:27:10 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7cbfbcd1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c6aa46c)
2024-07-11 10:27:10 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2f112ade) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c82bac3)
2024-07-11 10:27:10 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-11 10:27:10 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-11 10:27:10 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-11 10:27:10 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 10:27:10 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 10:27:10 - Adding type registration null -> org.hibernate.type.NullType@6be80629
2024-07-11 10:27:10 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@15914bb5`
2024-07-11 10:27:10 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-11 10:27:10 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 10:27:10 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 10:27:10 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 10:27:10 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 10:27:10 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 10:27:10 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 10:27:10 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 10:27:10 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 10:27:10 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 10:27:10 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 10:27:10 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 10:27:10 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3494a35e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@352ce817]
2024-07-11 10:27:10 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 10:27:10 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-11 10:27:10 - Import with entity name Task
2024-07-11 10:27:10 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-11 10:27:10 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 10:27:10 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 10:27:10 - MetadataSourceProcessor property id with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-11 10:27:10 - building BasicValue for id
2024-07-11 10:27:10 - Skipping column re-registration: task.id
2024-07-11 10:27:10 - Building property id
2024-07-11 10:27:10 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property category with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-11 10:27:10 - building BasicValue for category
2024-07-11 10:27:10 - Skipping column re-registration: task.category
2024-07-11 10:27:10 - Building property category
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-11 10:27:10 - building BasicValue for createdAt
2024-07-11 10:27:10 - Skipping column re-registration: task.created_at
2024-07-11 10:27:10 - Building property createdAt
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property description with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-11 10:27:10 - building BasicValue for description
2024-07-11 10:27:10 - Skipping column re-registration: task.description
2024-07-11 10:27:10 - Building property description
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property priority with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-11 10:27:10 - building BasicValue for priority
2024-07-11 10:27:10 - Skipping column re-registration: task.priority
2024-07-11 10:27:10 - Building property priority
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property title with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-11 10:27:10 - building BasicValue for title
2024-07-11 10:27:10 - Skipping column re-registration: task.title
2024-07-11 10:27:10 - Building property title
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-11 10:27:10 - building BasicValue for updatedAt
2024-07-11 10:27:10 - Skipping column re-registration: task.updated_at
2024-07-11 10:27:10 - Building property updatedAt
2024-07-11 10:27:10 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - Building property user
2024-07-11 10:27:10 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 10:27:10 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-11 10:27:10 - Import with entity name User
2024-07-11 10:27:10 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-11 10:27:10 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 10:27:10 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 10:27:10 - MetadataSourceProcessor property id with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-11 10:27:10 - building BasicValue for id
2024-07-11 10:27:10 - Skipping column re-registration: users.id
2024-07-11 10:27:10 - Building property id
2024-07-11 10:27:10 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property email with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-11 10:27:10 - building BasicValue for email
2024-07-11 10:27:10 - Skipping column re-registration: users.email
2024-07-11 10:27:10 - Building property email
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property password with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-11 10:27:10 - building BasicValue for password
2024-07-11 10:27:10 - Skipping column re-registration: users.password
2024-07-11 10:27:10 - Building property password
2024-07-11 10:27:10 - Binding column: AnnotatedJoinColumn()
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-11 10:27:10 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-11 10:27:10 - Binding column: AnnotatedJoinColumn()
2024-07-11 10:27:10 - Binding column: AnnotatedJoinColumn()
2024-07-11 10:27:10 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-11 10:27:10 - Building property tasks
2024-07-11 10:27:10 - Binding column: AnnotatedColumn()
2024-07-11 10:27:10 - MetadataSourceProcessor property username with lazy=false
2024-07-11 10:27:10 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-11 10:27:10 - building BasicValue for username
2024-07-11 10:27:10 - Skipping column re-registration: users.username
2024-07-11 10:27:10 - Building property username
2024-07-11 10:27:10 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-11 10:27:10 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-11 10:27:10 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-11 10:27:10 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-11 10:27:10 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 10:27:10 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-11 10:27:10 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-11 10:27:10 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-11 10:27:10 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-11 10:27:10 - Building session factory
2024-07-11 10:27:10 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 10:27:10 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@1c36ab22, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@68303c3e, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.11934498546799388699, com.sun.management.jmxremote.port=51253, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=16668, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.11934498546799388699, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2ec23ec3, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-11 10:27:10 - Session factory constructed with filter configurations : {}
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@296a71df] under count; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@602b7944] under every; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5f8d4b51] under any; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5036a286] under sinh; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73818435] under cosh; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fce8243] under tanh; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52fe87e0] under pi; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37393dab] under log; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-11 10:27:10 - Registering alternate key : length -> character_length
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@53b8a0f7] under position; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3f6a9ba0] under overlay; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7f2542f] under trim; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1fc4483f] under cast; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d7af82] under collate; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7eea934d] under extract; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11cdf948] under ifnull; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@511a307e] under pad; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@23cb8fcb] under str; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@346e5cc] under format; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2b409174] under timestampadd; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@737445ab] under timestampdiff; prior registration was null
2024-07-11 10:27:10 - Registering alternate key : dateadd -> timestampadd
2024-07-11 10:27:10 - Registering alternate key : datediff -> timestampdiff
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2cb53bfc] under current_date; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@779448b8] under current_time; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3bbdf835] under current_timestamp; prior registration was null
2024-07-11 10:27:10 - Registering alternate key : current date -> current_date
2024-07-11 10:27:10 - Registering alternate key : current time -> current_time
2024-07-11 10:27:10 - Registering alternate key : current timestamp -> current_timestamp
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d114d27] under local_date; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@28fef9a2] under local_time; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dfab58d] under local_datetime; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29d29657] under offset_datetime; prior registration was null
2024-07-11 10:27:10 - Registering alternate key : local date -> local_date
2024-07-11 10:27:10 - Registering alternate key : local time -> local_time
2024-07-11 10:27:10 - Registering alternate key : local datetime -> local_datetime
2024-07-11 10:27:10 - Registering alternate key : offset datetime -> offset_datetime
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e0d9e3f] under instant; prior registration was null
2024-07-11 10:27:10 - Registering alternate key : current_instant -> instant
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@265c0752] under sql; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37393dab
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6c6b00f1] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@48126a17] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-11 10:27:10 - Registering alternate key : day -> dayofmonth
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a7437d8] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@53b8a0f7
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7533923b] under trunc; prior registration was null
2024-07-11 10:27:10 - Registering alternate key : truncate -> trunc
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@446981a4] under bitand; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@644f6e89] under bitor; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9ae0794] under bitxor; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e5eed0] under bitnot; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@680937c9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@346e5cc
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@28fef9a2
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7dfab58d
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77ad2767] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52fe87e0
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e460ca1] under chr; prior registration was null
2024-07-11 10:27:10 - Registering alternate key : char -> chr
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@411ae0d7] under sysdate; prior registration was null
2024-07-11 10:27:10 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5693d1d2] under listagg; prior registration was null
2024-07-11 10:27:10 - abs(NUMERIC arg)
2024-07-11 10:27:10 - Double acos(NUMERIC arg)
2024-07-11 10:27:10 - adddate(DATE datetime, INTEGER days)
2024-07-11 10:27:10 - addtime(TIME datetime, TIME time)
2024-07-11 10:27:10 - Boolean any(BOOLEAN arg)
2024-07-11 10:27:10 - Integer ascii(STRING arg)
2024-07-11 10:27:10 - Double asin(NUMERIC arg)
2024-07-11 10:27:10 - Double atan(NUMERIC arg)
2024-07-11 10:27:10 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-11 10:27:10 - avg(arg)
2024-07-11 10:27:10 - bit_and(arg)
2024-07-11 10:27:10 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-11 10:27:10 - bit_or(arg)
2024-07-11 10:27:10 - bitand(arg0, arg1)
2024-07-11 10:27:10 - bitnot(arg)
2024-07-11 10:27:10 - bitor(arg0, arg1)
2024-07-11 10:27:10 - bitxor(arg0, arg1)
2024-07-11 10:27:10 - cast(arg as Type)
2024-07-11 10:27:10 - ceiling(NUMERIC arg)
2024-07-11 10:27:10 - Character char(INTEGER arg)
2024-07-11 10:27:10 - Integer character_length(STRING_OR_CLOB arg)
2024-07-11 10:27:10 - Character chr(INTEGER arg)
2024-07-11 10:27:10 - coalesce(arg0[, arg1[, ...]])
2024-07-11 10:27:10 - String collate(STRING string as COLLATION collation)
2024-07-11 10:27:10 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-11 10:27:10 - Double cos(NUMERIC arg)
2024-07-11 10:27:10 - Double cosh(NUMERIC arg)
2024-07-11 10:27:10 - Double cot(NUMERIC arg)
2024-07-11 10:27:10 - Long count([distinct ]{arg|*})
2024-07-11 10:27:10 - Integer crc32(arg)
2024-07-11 10:27:10 - Date curdate()
2024-07-11 10:27:10 - Date current date
2024-07-11 10:27:10 - Time current time
2024-07-11 10:27:10 - Timestamp current timestamp
2024-07-11 10:27:10 - Date current_date
2024-07-11 10:27:10 - Instant current_instant
2024-07-11 10:27:10 - Time current_time
2024-07-11 10:27:10 - Timestamp current_timestamp
2024-07-11 10:27:10 - Time curtime()
2024-07-11 10:27:10 - Date date(arg)
2024-07-11 10:27:10 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 10:27:10 - Integer datediff(DATE end, DATE start)
2024-07-11 10:27:10 - Integer day(DATE arg)
2024-07-11 10:27:10 - String dayname(DATE arg)
2024-07-11 10:27:10 - Integer dayofmonth(DATE arg)
2024-07-11 10:27:10 - Integer dayofweek(DATE arg)
2024-07-11 10:27:10 - Integer dayofyear(DATE arg)
2024-07-11 10:27:10 - Double degrees(NUMERIC arg)
2024-07-11 10:27:10 - Boolean every(BOOLEAN arg)
2024-07-11 10:27:10 - Double exp(NUMERIC arg)
2024-07-11 10:27:10 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-11 10:27:10 - floor(NUMERIC arg)
2024-07-11 10:27:10 - String format(TEMPORAL datetime as STRING pattern)
2024-07-11 10:27:10 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 10:27:10 - Integer hour(TIME arg)
2024-07-11 10:27:10 - ifnull(arg0, arg1)
2024-07-11 10:27:10 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-11 10:27:10 - Instant instant
2024-07-11 10:27:10 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-11 10:27:10 - Date last_day(DATE arg)
2024-07-11 10:27:10 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 10:27:10 - String left(STRING string, INTEGER length)
2024-07-11 10:27:10 - Integer length(STRING_OR_CLOB arg)
2024-07-11 10:27:10 - String listagg(STRING arg0, STRING arg1)
2024-07-11 10:27:10 - Double ln(NUMERIC arg)
2024-07-11 10:27:10 - LocalDate local date
2024-07-11 10:27:10 - LocalDateTime local datetime
2024-07-11 10:27:10 - LocalTime local time
2024-07-11 10:27:10 - LocalDate local_date
2024-07-11 10:27:10 - LocalDateTime local_datetime
2024-07-11 10:27:10 - LocalTime local_time
2024-07-11 10:27:10 - Timestamp localtime
2024-07-11 10:27:10 - Timestamp localtimestamp
2024-07-11 10:27:10 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-11 10:27:10 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-11 10:27:10 - Double log10(NUMERIC arg)
2024-07-11 10:27:10 - Double log2(NUMERIC arg)
2024-07-11 10:27:10 - String lower(STRING string)
2024-07-11 10:27:10 - String lpad(string, length[, padding])
2024-07-11 10:27:10 - String ltrim(STRING string[, STRING characters])
2024-07-11 10:27:10 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-11 10:27:10 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-11 10:27:10 - max(COMPARABLE arg)
2024-07-11 10:27:10 - String md5(arg)
2024-07-11 10:27:10 - Integer microsecond(TIME arg)
2024-07-11 10:27:10 - min(COMPARABLE arg)
2024-07-11 10:27:10 - Integer minute(TIME arg)
2024-07-11 10:27:10 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-11 10:27:10 - Integer month(DATE arg)
2024-07-11 10:27:10 - String monthname(DATE arg)
2024-07-11 10:27:10 - Timestamp now()
2024-07-11 10:27:10 - nullif(arg0, arg1)
2024-07-11 10:27:10 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-11 10:27:10 - OffsetDateTime offset datetime
2024-07-11 10:27:10 - OffsetDateTime offset_datetime
2024-07-11 10:27:10 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-11 10:27:10 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-11 10:27:10 - Double pi
2024-07-11 10:27:10 - Integer position(STRING pattern in STRING string)
2024-07-11 10:27:10 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-11 10:27:10 - Integer quarter(DATE arg)
2024-07-11 10:27:10 - Double radians(NUMERIC arg)
2024-07-11 10:27:10 - Double rand([INTEGER seed])
2024-07-11 10:27:10 - String repeat(STRING string, INTEGER times)
2024-07-11 10:27:10 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-11 10:27:10 - String reverse(STRING arg)
2024-07-11 10:27:10 - String right(STRING string, INTEGER length)
2024-07-11 10:27:10 - round(NUMERIC number[, INTEGER places])
2024-07-11 10:27:10 - String rpad(string, length[, padding])
2024-07-11 10:27:10 - String rtrim(STRING string[, STRING characters])
2024-07-11 10:27:10 - Integer second(TIME arg)
2024-07-11 10:27:10 - String sha(arg)
2024-07-11 10:27:10 - String sha1(arg)
2024-07-11 10:27:10 - String sha2(arg0, arg1)
2024-07-11 10:27:10 - Integer sign(NUMERIC arg)
2024-07-11 10:27:10 - Double sin(NUMERIC arg)
2024-07-11 10:27:10 - Double sinh(NUMERIC arg)
2024-07-11 10:27:10 - String soundex(arg)
2024-07-11 10:27:10 - String space(INTEGER arg)
2024-07-11 10:27:10 - Object sql
2024-07-11 10:27:10 - Double sqrt(NUMERIC arg)
2024-07-11 10:27:10 - Double stddev(NUMERIC arg)
2024-07-11 10:27:10 - Double stddev_pop(NUMERIC arg)
2024-07-11 10:27:10 - Double stddev_samp(NUMERIC arg)
2024-07-11 10:27:10 - String str(arg)
2024-07-11 10:27:10 - subdate(DATE datetime, INTEGER days)
2024-07-11 10:27:10 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-11 10:27:10 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-11 10:27:10 - subtime(TIME datetime, TIME time)
2024-07-11 10:27:10 - sum(arg)
2024-07-11 10:27:10 - Timestamp sysdate()
2024-07-11 10:27:10 - Double tan(NUMERIC arg)
2024-07-11 10:27:10 - Double tanh(NUMERIC arg)
2024-07-11 10:27:10 - String time(arg)
2024-07-11 10:27:10 - Timestamp timestamp(arg0[, arg1])
2024-07-11 10:27:10 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 10:27:10 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 10:27:10 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-11 10:27:10 - trunc( ... )
2024-07-11 10:27:10 - truncate( ... )
2024-07-11 10:27:10 - String upper(STRING string)
2024-07-11 10:27:10 - Date utc_date
2024-07-11 10:27:10 - Time utc_time
2024-07-11 10:27:10 - Timestamp utc_timestamp
2024-07-11 10:27:10 - Double var_pop(NUMERIC arg)
2024-07-11 10:27:10 - Double var_samp(NUMERIC arg)
2024-07-11 10:27:10 - Double variance(NUMERIC arg)
2024-07-11 10:27:10 - Integer week(DATE arg)
2024-07-11 10:27:10 - Integer year(DATE arg)
2024-07-11 10:27:10 - Starting QueryInterpretationCache(2048)
2024-07-11 10:27:10 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 10:27:10 - Configured EntityCopyObserver strategy: disallow
2024-07-11 10:27:10 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 10:27:10 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 10:27:10 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-11 10:27:10 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 10:27:10 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 10:27:10 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-11 10:27:10 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-11 10:27:10 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-11 10:27:10 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-11 10:27:10 - Starting post-init callbacks
2024-07-11 10:27:10 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 10:27:10 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-11 10:27:10 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-11 10:27:10 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-11 10:27:10 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-11 10:27:10 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-11 10:27:10 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 10:27:10 - Created new SQL alias : u1_0
2024-07-11 10:27:10 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 10:27:10 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-11 10:27:10 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 10:27:10 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-11 10:27:10 -  Version select: select id from users where id=?
2024-07-11 10:27:10 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-11 10:27:10 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-11 10:27:10 -  Delete (0): delete from users where id=?
2024-07-11 10:27:10 - Created new SQL alias : t1_0
2024-07-11 10:27:10 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 10:27:10 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69efdfd9] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 10:27:10 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-11 10:27:10 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-11 10:27:10 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-11 10:27:10 -  Version select: select id from task where id=?
2024-07-11 10:27:10 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-11 10:27:10 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 10:27:10 -  Delete (0): delete from task where id=?
2024-07-11 10:27:10 - Created new SQL alias : t1_0
2024-07-11 10:27:10 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@45e68fac] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-11 10:27:10 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-11 10:27:10 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3c2e73ce] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-11 10:27:10 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-11 10:27:10 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-11 10:27:10 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 10:27:10 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 10:27:10 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3494a35e] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2b8b5d9e]
2024-07-11 10:27:10 - Checking 0 named HQL queries
2024-07-11 10:27:10 - Checking 0 named SQL queries
2024-07-11 10:27:10 - No alter strings for table : task
2024-07-11 10:27:10 - No alter strings for table : users
2024-07-11 10:27:10 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3749c6ac
2024-07-11 10:27:10 - Registering SessionFactory: a78ed531-8ca9-447a-a76e-b034f269a3f4 (<unnamed>)
2024-07-11 10:27:10 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 10:27:10 - Instantiated SessionFactory
2024-07-11 10:27:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 10:27:10 - Statistics initialized [enabled=false]
2024-07-11 10:27:10 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 10:27:11 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 10:27:11 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 10:27:11 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 10:27:11 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 10:27:11 - 

Using generated security password: 3f388016-7b7b-4740-8a3f-f6933ad95839

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-11 10:27:11 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-11 10:27:11 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-11 10:27:11 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-11 10:27:11 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-11 10:27:11 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 10:27:11 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-11 10:27:11 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-11 10:27:11 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-11 10:27:11 - Tomcat started on port 8080 (http) with context path '/'
2024-07-11 10:27:11 - Started TaskmanagementApplication in 4.876 seconds (process running for 5.326)
2024-07-11 10:27:13 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 10:27:13 - Initializing Servlet 'dispatcherServlet'
2024-07-11 10:27:13 - Detected StandardServletMultipartResolver
2024-07-11 10:27:13 - Detected AcceptHeaderLocaleResolver
2024-07-11 10:27:13 - Detected FixedThemeResolver
2024-07-11 10:27:13 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7f77d839
2024-07-11 10:27:13 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@781befe7
2024-07-11 10:27:13 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-11 10:27:13 - Completed initialization in 1 ms
2024-07-11 10:27:22 - Securing POST /api/tasks?userId=1
2024-07-11 10:27:22 - Secured POST /api/tasks?userId=1
2024-07-11 10:27:22 - POST "/api/tasks?userId=1", parameters={masked}
2024-07-11 10:27:22 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(TaskDTO, Long)
2024-07-11 10:27:22 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@12c354ab]
2024-07-11 10:27:22 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 10:27:22 - begin
2024-07-11 10:27:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:27:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@20068739 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@530210351 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:27:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:27:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:27:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:27:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1054889464
2024-07-11 10:27:22 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:27:22 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:27:22 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:27:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:27:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b3c755c
2024-07-11 10:27:22 - committing
2024-07-11 10:27:22 - begin
2024-07-11 10:27:22 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 10:27:22 - Executing identity-insert immediately
2024-07-11 10:27:22 - insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-11 10:27:22 - Initializer list is empty
2024-07-11 10:27:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@4c42d36e
2024-07-11 10:27:22 - Extracted JDBC value [0] - [2]
2024-07-11 10:27:22 - Extracted generated values [com.example.taskmanagement.model.Task]: [Ljava.lang.Object;@7e1aa489
2024-07-11 10:27:22 - committing
2024-07-11 10:27:22 - Processing flush-time cascades
2024-07-11 10:27:22 - Dirty checking collections
2024-07-11 10:27:22 - Collection found: [com.example.taskmanagement.model.User.tasks#1], was: [com.example.taskmanagement.model.User.tasks#1] (uninitialized)
2024-07-11 10:27:22 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2024-07-11 10:27:22 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-11 10:27:22 - Listing entities:
2024-07-11 10:27:22 - com.example.taskmanagement.model.User{password=$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z., id=1, email=testuser@example.com, tasks=<uninitialized>, username=testuser}
2024-07-11 10:27:22 - com.example.taskmanagement.model.Task{createdAt=null, description=This is a test task2, id=2, category=Work, priority=High, title=Test Task2, user=com.example.taskmanagement.model.User#1, updatedAt=null}
2024-07-11 10:27:22 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:27:22 - Writing [com.example.taskmanagement.dto.TaskDTO@1bfb6298]
2024-07-11 10:27:22 - Completed 200 OK
2024-07-11 10:27:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:30:51 - Securing PUT /api/tasks/1
2024-07-11 10:30:51 - Secured PUT /api/tasks/1
2024-07-11 10:30:51 - PUT "/api/tasks/1", parameters={}
2024-07-11 10:30:51 - Mapped to com.example.taskmanagement.controller.TaskController#updateTask(Long, TaskDTO)
2024-07-11 10:30:51 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@65f09ff5]
2024-07-11 10:30:51 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 10:30:51 - begin
2024-07-11 10:30:51 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:30:51 - Initializer list:
	  com.example.taskmanagement.model.Task.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task.user)@853248041 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@521854914)
	  com.example.taskmanagement.model.Task -> EntityResultInitializer(com.example.taskmanagement.model.Task)@2129982691 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))

2024-07-11 10:30:51 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.id=?
2024-07-11 10:30:51 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task): 1
2024-07-11 10:30:51 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task#1] : 2097677660
2024-07-11 10:30:51 - Extracted JDBC value [7] - [1]
2024-07-11 10:30:51 - Extracted JDBC value [1] - [Work]
2024-07-11 10:30:51 - Extracted JDBC value [2] - [null]
2024-07-11 10:30:51 - Extracted JDBC value [3] - [This is a test task]
2024-07-11 10:30:51 - Extracted JDBC value [4] - [High]
2024-07-11 10:30:51 - Extracted JDBC value [5] - [Test Task]
2024-07-11 10:30:51 - Extracted JDBC value [6] - [null]
2024-07-11 10:30:51 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task#1
2024-07-11 10:30:51 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@428394a4
2024-07-11 10:30:51 - committing
2024-07-11 10:30:51 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-11 10:30:51 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:30:51 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1851704836 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@816204255 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:30:51 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:30:51 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:30:51 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:30:51 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 490276424
2024-07-11 10:30:51 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:30:51 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:30:51 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:30:51 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:30:51 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3140efa8
2024-07-11 10:30:51 - begin
2024-07-11 10:30:51 - committing
2024-07-11 10:30:51 - begin
2024-07-11 10:30:51 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 10:30:51 - committing
2024-07-11 10:30:51 - Processing flush-time cascades
2024-07-11 10:30:51 - Dirty checking collections
2024-07-11 10:30:51 - Collection found: [com.example.taskmanagement.model.User.tasks#1], was: [com.example.taskmanagement.model.User.tasks#1] (uninitialized)
2024-07-11 10:30:51 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2024-07-11 10:30:51 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-11 10:30:51 - Listing entities:
2024-07-11 10:30:51 - com.example.taskmanagement.model.User{password=$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z., id=1, email=testuser@example.com, tasks=<uninitialized>, username=testuser}
2024-07-11 10:30:51 - com.example.taskmanagement.model.Task{createdAt=null, description=This is an updated task description, id=1, category=Work, priority=High, title=Updated Task, user=com.example.taskmanagement.model.User#1, updatedAt=null}
2024-07-11 10:30:51 - update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 10:30:51 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:30:51 - Writing [com.example.taskmanagement.dto.TaskDTO@526e7a81]
2024-07-11 10:30:51 - Completed 200 OK
2024-07-11 10:30:51 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:31:32 - Securing DELETE /api/tasks/2
2024-07-11 10:31:32 - Secured DELETE /api/tasks/2
2024-07-11 10:31:32 - DELETE "/api/tasks/2", parameters={}
2024-07-11 10:31:32 - Mapped to com.example.taskmanagement.controller.TaskController#deleteTask(Long)
2024-07-11 10:31:32 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 10:31:32 - begin
2024-07-11 10:31:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:31:32 - Initializer list:
	  com.example.taskmanagement.model.Task.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task.user)@882714923 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@521854914)
	  com.example.taskmanagement.model.Task -> EntityResultInitializer(com.example.taskmanagement.model.Task)@815967072 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))

2024-07-11 10:31:32 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.id=?
2024-07-11 10:31:32 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task): 2
2024-07-11 10:31:32 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task#2] : 1151308188
2024-07-11 10:31:32 - Extracted JDBC value [7] - [1]
2024-07-11 10:31:32 - Extracted JDBC value [1] - [Work]
2024-07-11 10:31:32 - Extracted JDBC value [2] - [null]
2024-07-11 10:31:32 - Extracted JDBC value [3] - [This is a test task2]
2024-07-11 10:31:32 - Extracted JDBC value [4] - [High]
2024-07-11 10:31:32 - Extracted JDBC value [5] - [Test Task2]
2024-07-11 10:31:32 - Extracted JDBC value [6] - [null]
2024-07-11 10:31:32 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task#2
2024-07-11 10:31:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6143dbc4
2024-07-11 10:31:32 - committing
2024-07-11 10:31:32 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-11 10:31:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:31:32 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1024356493 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@86316481 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:31:32 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:31:32 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:31:32 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:31:32 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1594209732
2024-07-11 10:31:32 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:31:32 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:31:32 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:31:32 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:31:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@33bf5855
2024-07-11 10:31:32 - begin
2024-07-11 10:31:32 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 10:31:32 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 10:31:32 - committing
2024-07-11 10:31:32 - Processing flush-time cascades
2024-07-11 10:31:32 - Dirty checking collections
2024-07-11 10:31:32 - Collection found: [com.example.taskmanagement.model.User.tasks#1], was: [com.example.taskmanagement.model.User.tasks#1] (uninitialized)
2024-07-11 10:31:32 - Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
2024-07-11 10:31:32 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-11 10:31:32 - Listing entities:
2024-07-11 10:31:32 - com.example.taskmanagement.model.User{password=$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z., id=1, email=testuser@example.com, tasks=<uninitialized>, username=testuser}
2024-07-11 10:31:32 - com.example.taskmanagement.model.Task{createdAt=null, description=This is a test task2, id=2, category=Work, priority=High, title=Test Task2, user=com.example.taskmanagement.model.User#1, updatedAt=null}
2024-07-11 10:31:32 - delete from task where id=?
2024-07-11 10:31:32 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:31:32 - Nothing to write: null body
2024-07-11 10:31:32 - Completed 204 NO_CONTENT
2024-07-11 10:31:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:33:40 - Securing GET /api/tasks?title=Updated
2024-07-11 10:33:40 - Secured GET /api/tasks?title=Updated
2024-07-11 10:33:40 - GET "/api/tasks?title=Updated", parameters={masked}
2024-07-11 10:33:40 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-11 10:33:40 - Created new SQL alias : t1_0
2024-07-11 10:33:40 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(5015787832900))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 10:33:40 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@131bbc51] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 10:33:40 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@17e24ff8
2024-07-11 10:33:40 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(5015787832900).title) 
2024-07-11 10:33:40 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(5015787832900)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015787832900).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015787832900).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015787832900).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015787832900).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015787832900).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015787832900).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(5015787832900).user]

2024-07-11 10:33:40 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(5015787832900)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(5015787832900).user) {
            }
          }
        }
      }
    }

2024-07-11 10:33:40 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-11 10:33:40 - Initializer list:
	  com.example.taskmanagement.model.Task(5015787832900).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(5015787832900).user)@1732913399 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@521854914)
	  com.example.taskmanagement.model.Task(5015787832900) -> EntityResultInitializer(com.example.taskmanagement.model.Task(5015787832900))@876781967 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))

2024-07-11 10:33:40 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-11 10:33:40 - Extracted JDBC value [0] - [1]
2024-07-11 10:33:40 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(5015787832900)): 1
2024-07-11 10:33:40 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(5015787832900)#1] : 291414953
2024-07-11 10:33:40 - Extracted JDBC value [7] - [1]
2024-07-11 10:33:40 - Extracted JDBC value [1] - [Work]
2024-07-11 10:33:40 - Extracted JDBC value [2] - [null]
2024-07-11 10:33:40 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-11 10:33:40 - Extracted JDBC value [4] - [High]
2024-07-11 10:33:40 - Extracted JDBC value [5] - [Updated Task]
2024-07-11 10:33:40 - Extracted JDBC value [6] - [null]
2024-07-11 10:33:40 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(5015787832900)#1
2024-07-11 10:33:40 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e9094ad
2024-07-11 10:33:40 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-11 10:33:40 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:33:40 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@602731049 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@814268070 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:33:40 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:33:40 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:33:40 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:33:40 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1305873400
2024-07-11 10:33:40 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:33:40 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:33:40 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:33:40 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:33:40 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f3a9a4
2024-07-11 10:33:40 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:33:40 - Writing [[com.example.taskmanagement.dto.TaskDTO@9f59d52]]
2024-07-11 10:33:40 - Completed 200 OK
2024-07-11 10:33:40 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:34:22 - Securing GET /api/tasks?category=Work
2024-07-11 10:34:22 - Secured GET /api/tasks?category=Work
2024-07-11 10:34:22 - GET "/api/tasks?category=Work", parameters={masked}
2024-07-11 10:34:22 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-11 10:34:22 - Created new SQL alias : t1_0
2024-07-11 10:34:22 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(5015785983000))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 10:34:22 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@40de3be1] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 10:34:22 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63f8045f
2024-07-11 10:34:22 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(5015785983000).category) 
2024-07-11 10:34:22 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(5015785983000)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015785983000).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015785983000).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015785983000).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015785983000).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015785983000).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015785983000).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(5015785983000).user]

2024-07-11 10:34:22 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(5015785983000)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(5015785983000).user) {
            }
          }
        }
      }
    }

2024-07-11 10:34:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-11 10:34:22 - Initializer list:
	  com.example.taskmanagement.model.Task(5015785983000) -> EntityResultInitializer(com.example.taskmanagement.model.Task(5015785983000))@645096685 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(5015785983000).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(5015785983000).user)@1773947572 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@521854914)

2024-07-11 10:34:22 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.category=?
2024-07-11 10:34:22 - Extracted JDBC value [0] - [1]
2024-07-11 10:34:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(5015785983000)): 1
2024-07-11 10:34:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(5015785983000)#1] : 695670652
2024-07-11 10:34:22 - Extracted JDBC value [7] - [1]
2024-07-11 10:34:22 - Extracted JDBC value [1] - [Work]
2024-07-11 10:34:22 - Extracted JDBC value [2] - [null]
2024-07-11 10:34:22 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-11 10:34:22 - Extracted JDBC value [4] - [High]
2024-07-11 10:34:22 - Extracted JDBC value [5] - [Updated Task]
2024-07-11 10:34:22 - Extracted JDBC value [6] - [null]
2024-07-11 10:34:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(5015785983000)#1
2024-07-11 10:34:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2295110c
2024-07-11 10:34:22 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-11 10:34:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:34:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@84192710 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@341415661 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:34:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:34:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:34:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:34:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 2122355093
2024-07-11 10:34:22 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:34:22 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:34:22 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:34:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:34:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4fd134bb
2024-07-11 10:34:22 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:34:22 - Writing [[com.example.taskmanagement.dto.TaskDTO@38087760]]
2024-07-11 10:34:22 - Completed 200 OK
2024-07-11 10:34:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:34:58 - Securing GET /api/tasks?priority=High
2024-07-11 10:34:58 - Secured GET /api/tasks?priority=High
2024-07-11 10:34:58 - GET "/api/tasks?priority=High", parameters={masked}
2024-07-11 10:34:58 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-11 10:34:58 - Created new SQL alias : t1_0
2024-07-11 10:34:58 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(5015783357400))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 10:34:58 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77127d71] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 10:34:58 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@412a8e29
2024-07-11 10:34:58 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(5015783357400).priority) 
2024-07-11 10:34:58 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(5015783357400)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015783357400).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015783357400).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015783357400).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015783357400).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015783357400).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(5015783357400).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(5015783357400).user]

2024-07-11 10:34:58 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(5015783357400)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(5015783357400).user) {
            }
          }
        }
      }
    }

2024-07-11 10:34:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-11 10:34:58 - Initializer list:
	  com.example.taskmanagement.model.Task(5015783357400) -> EntityResultInitializer(com.example.taskmanagement.model.Task(5015783357400))@1146742172 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(5015783357400).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(5015783357400).user)@1974320557 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@521854914)

2024-07-11 10:34:58 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.priority=?
2024-07-11 10:34:58 - Extracted JDBC value [0] - [1]
2024-07-11 10:34:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(5015783357400)): 1
2024-07-11 10:34:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(5015783357400)#1] : 1881222643
2024-07-11 10:34:58 - Extracted JDBC value [7] - [1]
2024-07-11 10:34:58 - Extracted JDBC value [1] - [Work]
2024-07-11 10:34:58 - Extracted JDBC value [2] - [null]
2024-07-11 10:34:58 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-11 10:34:58 - Extracted JDBC value [4] - [High]
2024-07-11 10:34:58 - Extracted JDBC value [5] - [Updated Task]
2024-07-11 10:34:58 - Extracted JDBC value [6] - [null]
2024-07-11 10:34:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(5015783357400)#1
2024-07-11 10:34:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6879b68f
2024-07-11 10:34:58 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-11 10:34:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:34:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2104468124 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@72898167 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:34:58 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:34:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:34:58 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:34:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1423778210
2024-07-11 10:34:58 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:34:58 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:34:58 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:34:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:34:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@314e1cfe
2024-07-11 10:34:58 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:34:58 - Writing [[com.example.taskmanagement.dto.TaskDTO@6876925d]]
2024-07-11 10:34:58 - Completed 200 OK
2024-07-11 10:34:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:37:04 - Securing PUT /api/tasks/1/priority
2024-07-11 10:37:04 - Secured PUT /api/tasks/1/priority
2024-07-11 10:37:04 - PUT "/api/tasks/1/priority", parameters={}
2024-07-11 10:37:04 - Mapped to com.example.taskmanagement.controller.TaskController#updateTaskPriority(Long, String)
2024-07-11 10:37:04 - Read "application/json;charset=UTF-8" to [""Medium"<EOL><EOL>"]
2024-07-11 10:37:04 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 10:37:04 - begin
2024-07-11 10:37:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:37:04 - Initializer list:
	  com.example.taskmanagement.model.Task.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task.user)@1806932635 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@521854914)
	  com.example.taskmanagement.model.Task -> EntityResultInitializer(com.example.taskmanagement.model.Task)@1871446837 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))

2024-07-11 10:37:04 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.id=?
2024-07-11 10:37:04 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task): 1
2024-07-11 10:37:04 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task#1] : 460250018
2024-07-11 10:37:04 - Extracted JDBC value [7] - [1]
2024-07-11 10:37:04 - Extracted JDBC value [1] - [Work]
2024-07-11 10:37:04 - Extracted JDBC value [2] - [null]
2024-07-11 10:37:04 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-11 10:37:04 - Extracted JDBC value [4] - [High]
2024-07-11 10:37:04 - Extracted JDBC value [5] - [Updated Task]
2024-07-11 10:37:04 - Extracted JDBC value [6] - [null]
2024-07-11 10:37:04 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task#1
2024-07-11 10:37:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1474e651
2024-07-11 10:37:04 - committing
2024-07-11 10:37:04 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-11 10:37:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:37:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1373361180 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1007007310 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:37:04 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:37:04 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:37:04 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:37:04 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1100678930
2024-07-11 10:37:04 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:37:04 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:37:04 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:37:04 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:37:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b895a4e
2024-07-11 10:37:04 - begin
2024-07-11 10:37:04 - committing
2024-07-11 10:37:04 - begin
2024-07-11 10:37:04 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 10:37:04 - committing
2024-07-11 10:37:04 - Processing flush-time cascades
2024-07-11 10:37:04 - Dirty checking collections
2024-07-11 10:37:04 - Collection found: [com.example.taskmanagement.model.User.tasks#1], was: [com.example.taskmanagement.model.User.tasks#1] (uninitialized)
2024-07-11 10:37:04 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2024-07-11 10:37:04 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-11 10:37:04 - Listing entities:
2024-07-11 10:37:04 - com.example.taskmanagement.model.User{password=$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z., id=1, email=testuser@example.com, tasks=<uninitialized>, username=testuser}
2024-07-11 10:37:04 - com.example.taskmanagement.model.Task{createdAt=null, description=This is an updated task description, id=1, category=Work, priority="Medium"
, title=Updated Task, user=com.example.taskmanagement.model.User#1, updatedAt=null}
2024-07-11 10:37:04 - update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 10:37:04 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:37:04 - Writing [com.example.taskmanagement.dto.TaskDTO@5943baa0]
2024-07-11 10:37:04 - Completed 200 OK
2024-07-11 10:37:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:37:18 - Securing PUT /api/tasks/1/priority
2024-07-11 10:37:18 - Secured PUT /api/tasks/1/priority
2024-07-11 10:37:18 - PUT "/api/tasks/1/priority", parameters={}
2024-07-11 10:37:18 - Mapped to com.example.taskmanagement.controller.TaskController#updateTaskPriority(Long, String)
2024-07-11 10:37:18 - Read "application/json;charset=UTF-8" to ["Medium<EOL><EOL>"]
2024-07-11 10:37:18 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 10:37:18 - begin
2024-07-11 10:37:18 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:37:18 - Initializer list:
	  com.example.taskmanagement.model.Task.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task.user)@890068645 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@521854914)
	  com.example.taskmanagement.model.Task -> EntityResultInitializer(com.example.taskmanagement.model.Task)@1007726195 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))

2024-07-11 10:37:18 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.id=?
2024-07-11 10:37:18 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task): 1
2024-07-11 10:37:18 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task#1] : 739163350
2024-07-11 10:37:18 - Extracted JDBC value [7] - [1]
2024-07-11 10:37:18 - Extracted JDBC value [1] - [Work]
2024-07-11 10:37:18 - Extracted JDBC value [2] - [null]
2024-07-11 10:37:18 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-11 10:37:18 - Extracted JDBC value [4] - ["Medium"
]
2024-07-11 10:37:18 - Extracted JDBC value [5] - [Updated Task]
2024-07-11 10:37:18 - Extracted JDBC value [6] - [null]
2024-07-11 10:37:18 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task#1
2024-07-11 10:37:18 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@15d4ec12
2024-07-11 10:37:18 - committing
2024-07-11 10:37:18 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-11 10:37:18 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:37:18 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1789202541 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@857012707 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:37:18 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:37:18 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:37:18 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:37:18 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1018819228
2024-07-11 10:37:18 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:37:18 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:37:18 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:37:18 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:37:18 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@384bb8b7
2024-07-11 10:37:18 - begin
2024-07-11 10:37:18 - committing
2024-07-11 10:37:18 - begin
2024-07-11 10:37:18 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 10:37:18 - committing
2024-07-11 10:37:18 - Processing flush-time cascades
2024-07-11 10:37:18 - Dirty checking collections
2024-07-11 10:37:18 - Collection found: [com.example.taskmanagement.model.User.tasks#1], was: [com.example.taskmanagement.model.User.tasks#1] (uninitialized)
2024-07-11 10:37:18 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2024-07-11 10:37:18 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-11 10:37:18 - Listing entities:
2024-07-11 10:37:18 - com.example.taskmanagement.model.User{password=$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z., id=1, email=testuser@example.com, tasks=<uninitialized>, username=testuser}
2024-07-11 10:37:18 - com.example.taskmanagement.model.Task{createdAt=null, description=This is an updated task description, id=1, category=Work, priority=Medium
, title=Updated Task, user=com.example.taskmanagement.model.User#1, updatedAt=null}
2024-07-11 10:37:18 - update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 10:37:18 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:37:18 - Writing [com.example.taskmanagement.dto.TaskDTO@76ae03d2]
2024-07-11 10:37:18 - Completed 200 OK
2024-07-11 10:37:18 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:37:48 - Securing PUT /api/tasks/1/priority
2024-07-11 10:37:48 - Secured PUT /api/tasks/1/priority
2024-07-11 10:37:48 - PUT "/api/tasks/1/priority", parameters={multipart}
2024-07-11 10:37:48 - Mapped to com.example.taskmanagement.controller.TaskController#updateTaskPriority(Long, String)
2024-07-11 10:37:48 - Read "multipart/form-data;boundary=--------------------------957100126408274507040096;charset=UTF-8" to []
2024-07-11 10:37:48 - Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public org.springframework.http.ResponseEntity<com.example.taskmanagement.dto.TaskDTO> com.example.taskmanagement.controller.TaskController.updateTaskPriority(java.lang.Long,java.lang.String)]
2024-07-11 10:37:48 - Completed 400 BAD_REQUEST
2024-07-11 10:37:48 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:37:48 - Securing PUT /error
2024-07-11 10:37:48 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:37:48 - Saved request http://localhost:8080/error?continue to session
2024-07-11 10:37:48 - Pre-authenticated entry point called. Rejecting access
2024-07-11 10:37:56 - Securing PUT /api/tasks/1
2024-07-11 10:37:56 - Secured PUT /api/tasks/1
2024-07-11 10:37:56 - PUT "/api/tasks/1", parameters={multipart}
2024-07-11 10:37:56 - Mapped to com.example.taskmanagement.controller.TaskController#updateTask(Long, TaskDTO)
2024-07-11 10:37:56 - Could not resolve parameter [1] in public org.springframework.http.ResponseEntity<com.example.taskmanagement.dto.TaskDTO> com.example.taskmanagement.controller.TaskController.updateTask(java.lang.Long,com.example.taskmanagement.dto.TaskDTO): Content-Type 'multipart/form-data;boundary=--------------------------245518012709626192138458;charset=UTF-8' is not supported
2024-07-11 10:37:56 - Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'multipart/form-data;boundary=--------------------------245518012709626192138458;charset=UTF-8' is not supported]
2024-07-11 10:37:56 - Completed 415 UNSUPPORTED_MEDIA_TYPE
2024-07-11 10:37:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:37:56 - Securing PUT /error
2024-07-11 10:37:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:37:56 - Saved request http://localhost:8080/error?continue to session
2024-07-11 10:37:56 - Pre-authenticated entry point called. Rejecting access
2024-07-11 10:38:02 - Securing PUT /api/tasks/1/
2024-07-11 10:38:02 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:38:02 - Saved request http://localhost:8080/api/tasks/1/?continue to session
2024-07-11 10:38:02 - Pre-authenticated entry point called. Rejecting access
2024-07-11 10:38:02 - Securing PUT /error
2024-07-11 10:38:02 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 10:38:02 - Saved request http://localhost:8080/error?continue to session
2024-07-11 10:38:02 - Pre-authenticated entry point called. Rejecting access
2024-07-11 10:38:32 - Securing PUT /api/tasks/1/priority
2024-07-11 10:38:32 - Secured PUT /api/tasks/1/priority
2024-07-11 10:38:32 - PUT "/api/tasks/1/priority", parameters={}
2024-07-11 10:38:32 - Mapped to com.example.taskmanagement.controller.TaskController#updateTaskPriority(Long, String)
2024-07-11 10:38:32 - Read "application/json;charset=UTF-8" to ["Medium<EOL><EOL>"]
2024-07-11 10:38:32 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-11 10:38:32 - begin
2024-07-11 10:38:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:38:32 - Initializer list:
	  com.example.taskmanagement.model.Task.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task.user)@1481623383 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@521854914)
	  com.example.taskmanagement.model.Task -> EntityResultInitializer(com.example.taskmanagement.model.Task)@582683510 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))

2024-07-11 10:38:32 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.id=?
2024-07-11 10:38:32 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task): 1
2024-07-11 10:38:32 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task#1] : 406940291
2024-07-11 10:38:32 - Extracted JDBC value [7] - [1]
2024-07-11 10:38:32 - Extracted JDBC value [1] - [Work]
2024-07-11 10:38:32 - Extracted JDBC value [2] - [null]
2024-07-11 10:38:32 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-11 10:38:32 - Extracted JDBC value [4] - [Medium
]
2024-07-11 10:38:32 - Extracted JDBC value [5] - [Updated Task]
2024-07-11 10:38:32 - Extracted JDBC value [6] - [null]
2024-07-11 10:38:32 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task#1
2024-07-11 10:38:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@62db3246
2024-07-11 10:38:32 - committing
2024-07-11 10:38:32 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-11 10:38:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-11 10:38:32 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1077555823 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1396465049 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-11 10:38:32 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-11 10:38:32 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-11 10:38:32 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-11 10:38:32 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1696126789
2024-07-11 10:38:32 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-11 10:38:32 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-11 10:38:32 - Extracted JDBC value [3] - [testuser]
2024-07-11 10:38:32 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-11 10:38:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4cca6313
2024-07-11 10:38:32 - begin
2024-07-11 10:38:32 - committing
2024-07-11 10:38:32 - begin
2024-07-11 10:38:32 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-11 10:38:32 - committing
2024-07-11 10:38:32 - Processing flush-time cascades
2024-07-11 10:38:32 - Dirty checking collections
2024-07-11 10:38:32 - Collection found: [com.example.taskmanagement.model.User.tasks#1], was: [com.example.taskmanagement.model.User.tasks#1] (uninitialized)
2024-07-11 10:38:32 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2024-07-11 10:38:32 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-11 10:38:32 - Listing entities:
2024-07-11 10:38:32 - com.example.taskmanagement.model.User{password=$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z., id=1, email=testuser@example.com, tasks=<uninitialized>, username=testuser}
2024-07-11 10:38:32 - com.example.taskmanagement.model.Task{createdAt=null, description=This is an updated task description, id=1, category=Work, priority=Medium
, title=Updated Task, user=com.example.taskmanagement.model.User#1, updatedAt=null}
2024-07-11 10:38:32 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-11 10:38:32 - Writing [com.example.taskmanagement.dto.TaskDTO@2df1e9a]
2024-07-11 10:38:32 - Completed 200 OK
2024-07-11 10:38:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 11:07:59 - Starting TaskmanagementApplication using Java 22.0.1 with PID 32672 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-11 11:07:59 - No active profile set, falling back to 1 default profile: "default"
2024-07-11 11:08:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 11:08:00 - Finished Spring Data repository scanning in 54 ms. Found 2 JPA repository interfaces.
2024-07-11 11:08:00 - Tomcat initialized with port 8080 (http)
2024-07-11 11:08:01 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-11 11:08:01 - Starting service [Tomcat]
2024-07-11 11:08:01 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 11:08:01 - Initializing Spring embedded WebApplicationContext
2024-07-11 11:08:01 - Root WebApplicationContext: initialization completed in 2001 ms
2024-07-11 11:08:01 - Filter 'webMvcObservationFilter' configured for use
2024-07-11 11:08:01 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-11 11:08:01 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-11 11:08:01 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-11 11:08:01 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 11:08:01 - HHH000206: 'hibernate.properties' not found
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-11 11:08:01 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-11 11:08:01 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-11 11:08:01 - HHH000026: Second-level cache disabled
2024-07-11 11:08:01 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7b1c501d
2024-07-11 11:08:01 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7b1c501d
2024-07-11 11:08:01 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7b1c501d
2024-07-11 11:08:01 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5abbb273
2024-07-11 11:08:01 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5abbb273
2024-07-11 11:08:01 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@25d9291a
2024-07-11 11:08:01 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@25d9291a
2024-07-11 11:08:01 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@445058e8
2024-07-11 11:08:01 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@445058e8
2024-07-11 11:08:01 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d5574c7
2024-07-11 11:08:01 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d5574c7
2024-07-11 11:08:01 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5d5574c7
2024-07-11 11:08:01 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5a7a6d34
2024-07-11 11:08:01 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5a7a6d34
2024-07-11 11:08:01 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5a7a6d34
2024-07-11 11:08:01 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@36871e98
2024-07-11 11:08:01 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@36871e98
2024-07-11 11:08:01 - Adding type registration image -> org.hibernate.type.BasicTypeReference@70d687b8
2024-07-11 11:08:01 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6533629
2024-07-11 11:08:01 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6533629
2024-07-11 11:08:01 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f49e81a
2024-07-11 11:08:01 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1b444b5
2024-07-11 11:08:01 - Adding type registration short -> org.hibernate.type.BasicTypeReference@459bf87c
2024-07-11 11:08:01 - Adding type registration short -> org.hibernate.type.BasicTypeReference@459bf87c
2024-07-11 11:08:01 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@459bf87c
2024-07-11 11:08:01 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-07-11 11:08:01 - Adding type registration int -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-07-11 11:08:01 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-07-11 11:08:01 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-07-11 11:08:01 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-07-11 11:08:01 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-07-11 11:08:01 - Adding type registration float -> org.hibernate.type.BasicTypeReference@391d28ea
2024-07-11 11:08:01 - Adding type registration float -> org.hibernate.type.BasicTypeReference@391d28ea
2024-07-11 11:08:01 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@391d28ea
2024-07-11 11:08:01 - Adding type registration double -> org.hibernate.type.BasicTypeReference@23df7fad
2024-07-11 11:08:01 - Adding type registration double -> org.hibernate.type.BasicTypeReference@23df7fad
2024-07-11 11:08:01 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@23df7fad
2024-07-11 11:08:01 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-11 11:08:01 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-11 11:08:01 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2acca224
2024-07-11 11:08:01 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2acca224
2024-07-11 11:08:01 - Adding type registration character -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 11:08:01 - Adding type registration char -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 11:08:01 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-11 11:08:01 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-11 11:08:01 - Adding type registration string -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 11:08:01 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-11 11:08:01 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5ddb302
2024-07-11 11:08:01 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 11:08:01 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 11:08:01 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-11 11:08:01 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-11 11:08:01 - Adding type registration text -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-11 11:08:01 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@51813065
2024-07-11 11:08:01 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-11 11:08:01 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-11 11:08:01 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 11:08:01 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-11 11:08:01 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-11 11:08:01 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-11 11:08:01 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-11 11:08:01 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-11 11:08:01 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-11 11:08:01 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-11 11:08:01 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 11:08:01 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-11 11:08:01 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-11 11:08:01 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-11 11:08:01 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 11:08:01 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-11 11:08:01 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-11 11:08:01 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-11 11:08:01 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-11 11:08:01 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-11 11:08:01 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@72a34537
2024-07-11 11:08:01 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-11 11:08:01 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-11 11:08:01 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-11 11:08:01 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-11 11:08:01 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-11 11:08:01 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@35536760
2024-07-11 11:08:01 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-11 11:08:01 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-11 11:08:01 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-11 11:08:01 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-11 11:08:01 - Adding type registration date -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-11 11:08:01 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-11 11:08:01 - Adding type registration time -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-11 11:08:01 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-11 11:08:01 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-11 11:08:01 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-11 11:08:01 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-11 11:08:01 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-11 11:08:01 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-11 11:08:01 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-11 11:08:01 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-11 11:08:01 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-11 11:08:01 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-11 11:08:01 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-11 11:08:01 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-11 11:08:01 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-11 11:08:01 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-11 11:08:01 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-11 11:08:01 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-11 11:08:01 - Adding type registration class -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-11 11:08:01 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-11 11:08:01 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-11 11:08:01 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-11 11:08:01 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-11 11:08:01 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-11 11:08:01 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-11 11:08:01 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-11 11:08:01 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-11 11:08:01 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-11 11:08:01 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-11 11:08:01 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-11 11:08:01 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-11 11:08:01 - Adding type registration url -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-11 11:08:01 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-11 11:08:01 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-11 11:08:01 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-11 11:08:01 - Adding type registration object -> org.hibernate.type.JavaObjectType@70ee9d31
2024-07-11 11:08:01 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70ee9d31
2024-07-11 11:08:01 - Adding type registration null -> org.hibernate.type.NullType@6b030101
2024-07-11 11:08:01 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@60a4e619
2024-07-11 11:08:01 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2bb3f39e
2024-07-11 11:08:01 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@11f3400c
2024-07-11 11:08:01 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@628b503a
2024-07-11 11:08:01 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2558f65c
2024-07-11 11:08:01 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@11c3ce6a
2024-07-11 11:08:01 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1a3b1f7e
2024-07-11 11:08:01 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@22899683
2024-07-11 11:08:01 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2493eec6] into BootstrapContext; was [null]
2024-07-11 11:08:01 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2493eec6) [was null]
2024-07-11 11:08:01 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@65d90b7f] into BootstrapContext; was [null]
2024-07-11 11:08:01 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2a42019a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6fc0e448]
2024-07-11 11:08:01 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 11:08:01 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2493eec6]
2024-07-11 11:08:01 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2493eec6]
2024-07-11 11:08:01 - HikariPool-1 - Starting...
2024-07-11 11:08:02 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f430ea8
2024-07-11 11:08:02 - HikariPool-1 - Start completed.
2024-07-11 11:08:02 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-11 11:08:02 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-11 11:08:02 - JDBC version : 4.2
2024-07-11 11:08:02 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-11 11:08:02 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-11 11:08:02 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-11 11:08:02 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-11 11:08:02 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-11 11:08:02 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@37083af6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55e4dd68)
2024-07-11 11:08:02 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28c7fd9d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a63ff31)
2024-07-11 11:08:02 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1c4aa701) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f36267d)
2024-07-11 11:08:02 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@788a0513) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@d65e744)
2024-07-11 11:08:02 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44de3b46) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1a85e86e)
2024-07-11 11:08:02 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@320fc4b0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10724a72)
2024-07-11 11:08:02 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25435731) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10301d6f)
2024-07-11 11:08:02 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5cd6719d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ef591af)
2024-07-11 11:08:02 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61b0af9f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71fb1da3)
2024-07-11 11:08:02 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-11 11:08:02 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-11 11:08:02 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-11 11:08:02 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 11:08:02 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-11 11:08:02 - Adding type registration null -> org.hibernate.type.NullType@30333941
2024-07-11 11:08:02 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6b030101`
2024-07-11 11:08:02 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-11 11:08:02 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 11:08:02 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-11 11:08:02 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 11:08:02 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 11:08:02 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-11 11:08:02 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 11:08:02 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 11:08:02 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-11 11:08:02 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 11:08:02 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 11:08:02 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-11 11:08:02 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ed7b9c5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@105dc246]
2024-07-11 11:08:02 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-11 11:08:02 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-11 11:08:02 - Import with entity name Task
2024-07-11 11:08:02 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-11 11:08:02 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 11:08:02 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 11:08:02 - MetadataSourceProcessor property id with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-11 11:08:02 - building BasicValue for id
2024-07-11 11:08:02 - Skipping column re-registration: task.id
2024-07-11 11:08:02 - Building property id
2024-07-11 11:08:02 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property category with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-11 11:08:02 - building BasicValue for category
2024-07-11 11:08:02 - Skipping column re-registration: task.category
2024-07-11 11:08:02 - Building property category
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-11 11:08:02 - building BasicValue for createdAt
2024-07-11 11:08:02 - Skipping column re-registration: task.created_at
2024-07-11 11:08:02 - Building property createdAt
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property description with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-11 11:08:02 - building BasicValue for description
2024-07-11 11:08:02 - Skipping column re-registration: task.description
2024-07-11 11:08:02 - Building property description
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property priority with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-11 11:08:02 - building BasicValue for priority
2024-07-11 11:08:02 - Skipping column re-registration: task.priority
2024-07-11 11:08:02 - Building property priority
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property title with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-11 11:08:02 - building BasicValue for title
2024-07-11 11:08:02 - Skipping column re-registration: task.title
2024-07-11 11:08:02 - Building property title
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-11 11:08:02 - building BasicValue for updatedAt
2024-07-11 11:08:02 - Skipping column re-registration: task.updated_at
2024-07-11 11:08:02 - Building property updatedAt
2024-07-11 11:08:02 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - Building property user
2024-07-11 11:08:02 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 11:08:02 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-11 11:08:02 - Import with entity name User
2024-07-11 11:08:02 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-11 11:08:02 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 11:08:02 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 11:08:02 - MetadataSourceProcessor property id with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-11 11:08:02 - building BasicValue for id
2024-07-11 11:08:02 - Skipping column re-registration: users.id
2024-07-11 11:08:02 - Building property id
2024-07-11 11:08:02 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property email with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-11 11:08:02 - building BasicValue for email
2024-07-11 11:08:02 - Skipping column re-registration: users.email
2024-07-11 11:08:02 - Building property email
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property password with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-11 11:08:02 - building BasicValue for password
2024-07-11 11:08:02 - Skipping column re-registration: users.password
2024-07-11 11:08:02 - Building property password
2024-07-11 11:08:02 - Binding column: AnnotatedJoinColumn()
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-11 11:08:02 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-11 11:08:02 - Binding column: AnnotatedJoinColumn()
2024-07-11 11:08:02 - Binding column: AnnotatedJoinColumn()
2024-07-11 11:08:02 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-11 11:08:02 - Building property tasks
2024-07-11 11:08:02 - Binding column: AnnotatedColumn()
2024-07-11 11:08:02 - MetadataSourceProcessor property username with lazy=false
2024-07-11 11:08:02 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-11 11:08:02 - building BasicValue for username
2024-07-11 11:08:02 - Skipping column re-registration: users.username
2024-07-11 11:08:02 - Building property username
2024-07-11 11:08:02 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-11 11:08:02 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-11 11:08:02 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-11 11:08:02 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-11 11:08:02 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 11:08:02 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-11 11:08:02 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-11 11:08:02 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-11 11:08:02 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-11 11:08:02 - Building session factory
2024-07-11 11:08:02 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 11:08:02 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@792eeae6, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@66e62fc4, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.8681345108070810045, com.sun.management.jmxremote.port=50758, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=32672, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.8681345108070810045, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7e28f150, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-11 11:08:02 - Session factory constructed with filter configurations : {}
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@21948bd1] under count; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@ea45a5b] under every; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@57f83c82] under any; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e5a2b74] under sinh; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@658098a2] under cosh; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@50628080] under tanh; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@155318b5] under pi; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1add90e0] under log; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-11 11:08:02 - Registering alternate key : length -> character_length
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5036a286] under position; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2a349a73] under overlay; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@53b8a0f7] under trim; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@af57949] under cast; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f833223] under collate; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@870a9f2] under extract; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@301f9aa0] under ifnull; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@27605b87] under pad; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7fc5a558] under str; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@23cb8fcb] under format; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@34c6b52e] under timestampadd; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1b5d1d9] under timestampdiff; prior registration was null
2024-07-11 11:08:02 - Registering alternate key : dateadd -> timestampadd
2024-07-11 11:08:02 - Registering alternate key : datediff -> timestampdiff
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2cd2c764] under current_date; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@d17d554] under current_time; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f1c7fde] under current_timestamp; prior registration was null
2024-07-11 11:08:02 - Registering alternate key : current date -> current_date
2024-07-11 11:08:02 - Registering alternate key : current time -> current_time
2024-07-11 11:08:02 - Registering alternate key : current timestamp -> current_timestamp
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b409174] under local_date; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11939a9f] under local_time; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@229d508c] under local_datetime; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e83298e] under offset_datetime; prior registration was null
2024-07-11 11:08:02 - Registering alternate key : local date -> local_date
2024-07-11 11:08:02 - Registering alternate key : local time -> local_time
2024-07-11 11:08:02 - Registering alternate key : local datetime -> local_datetime
2024-07-11 11:08:02 - Registering alternate key : offset datetime -> offset_datetime
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7167d81b] under instant; prior registration was null
2024-07-11 11:08:02 - Registering alternate key : current_instant -> instant
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@3c9cfcde] under sql; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1add90e0
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@779448b8] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3bbdf835] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-11 11:08:02 - Registering alternate key : day -> dayofmonth
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d114d27] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5036a286
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2e5c7cd5] under trunc; prior registration was null
2024-07-11 11:08:02 - Registering alternate key : truncate -> trunc
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f252762] under bitand; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b74bb75] under bitor; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@675bf541] under bitxor; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2aac87ab] under bitnot; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@c14bbab] under format; prior registration was org.hibernate.dialect.function.FormatFunction@23cb8fcb
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@11939a9f
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@229d508c
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72c5064f] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@155318b5
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4a0c04ab] under chr; prior registration was null
2024-07-11 11:08:02 - Registering alternate key : char -> chr
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@453439e] under sysdate; prior registration was null
2024-07-11 11:08:02 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@43cc7951] under listagg; prior registration was null
2024-07-11 11:08:02 - abs(NUMERIC arg)
2024-07-11 11:08:02 - Double acos(NUMERIC arg)
2024-07-11 11:08:02 - adddate(DATE datetime, INTEGER days)
2024-07-11 11:08:02 - addtime(TIME datetime, TIME time)
2024-07-11 11:08:02 - Boolean any(BOOLEAN arg)
2024-07-11 11:08:02 - Integer ascii(STRING arg)
2024-07-11 11:08:02 - Double asin(NUMERIC arg)
2024-07-11 11:08:02 - Double atan(NUMERIC arg)
2024-07-11 11:08:02 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-11 11:08:02 - avg(arg)
2024-07-11 11:08:02 - bit_and(arg)
2024-07-11 11:08:02 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-11 11:08:02 - bit_or(arg)
2024-07-11 11:08:02 - bitand(arg0, arg1)
2024-07-11 11:08:02 - bitnot(arg)
2024-07-11 11:08:02 - bitor(arg0, arg1)
2024-07-11 11:08:02 - bitxor(arg0, arg1)
2024-07-11 11:08:02 - cast(arg as Type)
2024-07-11 11:08:02 - ceiling(NUMERIC arg)
2024-07-11 11:08:02 - Character char(INTEGER arg)
2024-07-11 11:08:02 - Integer character_length(STRING_OR_CLOB arg)
2024-07-11 11:08:02 - Character chr(INTEGER arg)
2024-07-11 11:08:02 - coalesce(arg0[, arg1[, ...]])
2024-07-11 11:08:02 - String collate(STRING string as COLLATION collation)
2024-07-11 11:08:02 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-11 11:08:02 - Double cos(NUMERIC arg)
2024-07-11 11:08:02 - Double cosh(NUMERIC arg)
2024-07-11 11:08:02 - Double cot(NUMERIC arg)
2024-07-11 11:08:02 - Long count([distinct ]{arg|*})
2024-07-11 11:08:02 - Integer crc32(arg)
2024-07-11 11:08:02 - Date curdate()
2024-07-11 11:08:02 - Date current date
2024-07-11 11:08:02 - Time current time
2024-07-11 11:08:02 - Timestamp current timestamp
2024-07-11 11:08:02 - Date current_date
2024-07-11 11:08:02 - Instant current_instant
2024-07-11 11:08:02 - Time current_time
2024-07-11 11:08:02 - Timestamp current_timestamp
2024-07-11 11:08:02 - Time curtime()
2024-07-11 11:08:02 - Date date(arg)
2024-07-11 11:08:02 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 11:08:02 - Integer datediff(DATE end, DATE start)
2024-07-11 11:08:02 - Integer day(DATE arg)
2024-07-11 11:08:02 - String dayname(DATE arg)
2024-07-11 11:08:02 - Integer dayofmonth(DATE arg)
2024-07-11 11:08:02 - Integer dayofweek(DATE arg)
2024-07-11 11:08:02 - Integer dayofyear(DATE arg)
2024-07-11 11:08:02 - Double degrees(NUMERIC arg)
2024-07-11 11:08:02 - Boolean every(BOOLEAN arg)
2024-07-11 11:08:02 - Double exp(NUMERIC arg)
2024-07-11 11:08:02 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-11 11:08:02 - floor(NUMERIC arg)
2024-07-11 11:08:02 - String format(TEMPORAL datetime as STRING pattern)
2024-07-11 11:08:02 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 11:08:02 - Integer hour(TIME arg)
2024-07-11 11:08:02 - ifnull(arg0, arg1)
2024-07-11 11:08:02 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-11 11:08:02 - Instant instant
2024-07-11 11:08:02 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-11 11:08:02 - Date last_day(DATE arg)
2024-07-11 11:08:02 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-11 11:08:02 - String left(STRING string, INTEGER length)
2024-07-11 11:08:02 - Integer length(STRING_OR_CLOB arg)
2024-07-11 11:08:02 - String listagg(STRING arg0, STRING arg1)
2024-07-11 11:08:02 - Double ln(NUMERIC arg)
2024-07-11 11:08:02 - LocalDate local date
2024-07-11 11:08:02 - LocalDateTime local datetime
2024-07-11 11:08:02 - LocalTime local time
2024-07-11 11:08:02 - LocalDate local_date
2024-07-11 11:08:02 - LocalDateTime local_datetime
2024-07-11 11:08:02 - LocalTime local_time
2024-07-11 11:08:02 - Timestamp localtime
2024-07-11 11:08:02 - Timestamp localtimestamp
2024-07-11 11:08:02 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-11 11:08:02 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-11 11:08:02 - Double log10(NUMERIC arg)
2024-07-11 11:08:02 - Double log2(NUMERIC arg)
2024-07-11 11:08:02 - String lower(STRING string)
2024-07-11 11:08:02 - String lpad(string, length[, padding])
2024-07-11 11:08:02 - String ltrim(STRING string[, STRING characters])
2024-07-11 11:08:02 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-11 11:08:02 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-11 11:08:02 - max(COMPARABLE arg)
2024-07-11 11:08:02 - String md5(arg)
2024-07-11 11:08:02 - Integer microsecond(TIME arg)
2024-07-11 11:08:02 - min(COMPARABLE arg)
2024-07-11 11:08:02 - Integer minute(TIME arg)
2024-07-11 11:08:02 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-11 11:08:02 - Integer month(DATE arg)
2024-07-11 11:08:02 - String monthname(DATE arg)
2024-07-11 11:08:02 - Timestamp now()
2024-07-11 11:08:02 - nullif(arg0, arg1)
2024-07-11 11:08:02 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-11 11:08:02 - OffsetDateTime offset datetime
2024-07-11 11:08:02 - OffsetDateTime offset_datetime
2024-07-11 11:08:02 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-11 11:08:02 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-11 11:08:02 - Double pi
2024-07-11 11:08:02 - Integer position(STRING pattern in STRING string)
2024-07-11 11:08:02 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-11 11:08:02 - Integer quarter(DATE arg)
2024-07-11 11:08:02 - Double radians(NUMERIC arg)
2024-07-11 11:08:02 - Double rand([INTEGER seed])
2024-07-11 11:08:02 - String repeat(STRING string, INTEGER times)
2024-07-11 11:08:02 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-11 11:08:02 - String reverse(STRING arg)
2024-07-11 11:08:02 - String right(STRING string, INTEGER length)
2024-07-11 11:08:02 - round(NUMERIC number[, INTEGER places])
2024-07-11 11:08:02 - String rpad(string, length[, padding])
2024-07-11 11:08:02 - String rtrim(STRING string[, STRING characters])
2024-07-11 11:08:02 - Integer second(TIME arg)
2024-07-11 11:08:02 - String sha(arg)
2024-07-11 11:08:02 - String sha1(arg)
2024-07-11 11:08:02 - String sha2(arg0, arg1)
2024-07-11 11:08:02 - Integer sign(NUMERIC arg)
2024-07-11 11:08:02 - Double sin(NUMERIC arg)
2024-07-11 11:08:02 - Double sinh(NUMERIC arg)
2024-07-11 11:08:02 - String soundex(arg)
2024-07-11 11:08:02 - String space(INTEGER arg)
2024-07-11 11:08:02 - Object sql
2024-07-11 11:08:02 - Double sqrt(NUMERIC arg)
2024-07-11 11:08:02 - Double stddev(NUMERIC arg)
2024-07-11 11:08:02 - Double stddev_pop(NUMERIC arg)
2024-07-11 11:08:02 - Double stddev_samp(NUMERIC arg)
2024-07-11 11:08:02 - String str(arg)
2024-07-11 11:08:02 - subdate(DATE datetime, INTEGER days)
2024-07-11 11:08:02 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-11 11:08:02 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-11 11:08:02 - subtime(TIME datetime, TIME time)
2024-07-11 11:08:02 - sum(arg)
2024-07-11 11:08:02 - Timestamp sysdate()
2024-07-11 11:08:02 - Double tan(NUMERIC arg)
2024-07-11 11:08:02 - Double tanh(NUMERIC arg)
2024-07-11 11:08:02 - String time(arg)
2024-07-11 11:08:02 - Timestamp timestamp(arg0[, arg1])
2024-07-11 11:08:02 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-11 11:08:02 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-11 11:08:02 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-11 11:08:02 - trunc( ... )
2024-07-11 11:08:02 - truncate( ... )
2024-07-11 11:08:02 - String upper(STRING string)
2024-07-11 11:08:02 - Date utc_date
2024-07-11 11:08:02 - Time utc_time
2024-07-11 11:08:02 - Timestamp utc_timestamp
2024-07-11 11:08:02 - Double var_pop(NUMERIC arg)
2024-07-11 11:08:02 - Double var_samp(NUMERIC arg)
2024-07-11 11:08:02 - Double variance(NUMERIC arg)
2024-07-11 11:08:02 - Integer week(DATE arg)
2024-07-11 11:08:02 - Integer year(DATE arg)
2024-07-11 11:08:02 - Starting QueryInterpretationCache(2048)
2024-07-11 11:08:02 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-11 11:08:02 - Configured EntityCopyObserver strategy: disallow
2024-07-11 11:08:02 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-11 11:08:02 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-11 11:08:02 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-11 11:08:02 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-11 11:08:02 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-11 11:08:02 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-11 11:08:02 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-11 11:08:02 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-11 11:08:02 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-11 11:08:02 - Starting post-init callbacks
2024-07-11 11:08:02 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 11:08:02 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-11 11:08:02 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-11 11:08:02 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-11 11:08:02 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-11 11:08:02 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-11 11:08:02 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-11 11:08:02 - Created new SQL alias : u1_0
2024-07-11 11:08:02 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-11 11:08:02 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-11 11:08:02 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-11 11:08:02 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-11 11:08:02 -  Version select: select id from users where id=?
2024-07-11 11:08:02 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-11 11:08:02 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-11 11:08:02 -  Delete (0): delete from users where id=?
2024-07-11 11:08:02 - Created new SQL alias : t1_0
2024-07-11 11:08:02 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-11 11:08:02 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7be85f15] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-11 11:08:02 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-11 11:08:02 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-11 11:08:02 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-11 11:08:02 -  Version select: select id from task where id=?
2024-07-11 11:08:02 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-11 11:08:02 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-11 11:08:02 -  Delete (0): delete from task where id=?
2024-07-11 11:08:02 - Created new SQL alias : t1_0
2024-07-11 11:08:02 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2c1a0f82] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-11 11:08:02 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-11 11:08:02 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@721fc228] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-11 11:08:02 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-11 11:08:02 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-11 11:08:02 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-11 11:08:02 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 11:08:02 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ed7b9c5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@43e9a8a2]
2024-07-11 11:08:02 - Checking 0 named HQL queries
2024-07-11 11:08:02 - Checking 0 named SQL queries
2024-07-11 11:08:02 - No alter strings for table : task
2024-07-11 11:08:02 - No alter strings for table : users
2024-07-11 11:08:02 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69862a1
2024-07-11 11:08:02 - Registering SessionFactory: 9d50ba34-564f-482f-8015-398d8a93558f (<unnamed>)
2024-07-11 11:08:02 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-11 11:08:02 - Instantiated SessionFactory
2024-07-11 11:08:02 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 11:08:03 - Statistics initialized [enabled=false]
2024-07-11 11:08:03 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 11:08:03 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 11:08:03 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 11:08:03 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-11 11:08:03 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 11:08:03 - 

Using generated security password: d7b88b5a-ee9f-4e58-8d24-c2eaef1534d2

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-11 11:08:03 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-11 11:08:03 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-11 11:08:03 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-11 11:08:03 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-11 11:08:04 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 11:08:04 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-11 11:08:04 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-11 11:08:04 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-11 11:08:04 - Tomcat started on port 8080 (http) with context path '/'
2024-07-11 11:08:04 - Started TaskmanagementApplication in 5.852 seconds (process running for 6.269)
2024-07-11 11:08:04 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 11:08:04 - Initializing Servlet 'dispatcherServlet'
2024-07-11 11:08:04 - Detected StandardServletMultipartResolver
2024-07-11 11:08:04 - Detected AcceptHeaderLocaleResolver
2024-07-11 11:08:04 - Detected FixedThemeResolver
2024-07-11 11:08:04 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2aa176de
2024-07-11 11:08:04 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@2d73aa17
2024-07-11 11:08:04 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-11 11:08:04 - Completed initialization in 2 ms
2024-07-11 11:34:27 - Securing GET /?vscodeBrowserReqId=1720668866962
2024-07-11 11:34:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 11:34:27 - Saved request http://localhost:8080/?vscodeBrowserReqId=1720668866962&continue to session
2024-07-11 11:34:27 - Pre-authenticated entry point called. Rejecting access
2024-07-11 11:34:27 - Securing GET /error?vscodeBrowserReqId=1720668866962
2024-07-11 11:34:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-11 11:34:27 - Saved request http://localhost:8080/error?vscodeBrowserReqId=1720668866962&continue to session
2024-07-11 11:34:27 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:48:34 - Starting TaskmanagementApplication using Java 22.0.1 with PID 30728 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-12 09:48:34 - No active profile set, falling back to 1 default profile: "default"
2024-07-12 09:48:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-12 09:48:35 - Finished Spring Data repository scanning in 43 ms. Found 2 JPA repository interfaces.
2024-07-12 09:48:36 - Tomcat initialized with port 8080 (http)
2024-07-12 09:48:36 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-12 09:48:36 - Starting service [Tomcat]
2024-07-12 09:48:36 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-12 09:48:36 - Initializing Spring embedded WebApplicationContext
2024-07-12 09:48:36 - Root WebApplicationContext: initialization completed in 1922 ms
2024-07-12 09:48:36 - Filter 'webMvcObservationFilter' configured for use
2024-07-12 09:48:36 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-12 09:48:36 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-12 09:48:36 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-12 09:48:36 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-12 09:48:36 - HHH000206: 'hibernate.properties' not found
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-12 09:48:36 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-12 09:48:36 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-12 09:48:36 - HHH000026: Second-level cache disabled
2024-07-12 09:48:36 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@33e8e146
2024-07-12 09:48:36 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@33e8e146
2024-07-12 09:48:36 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@33e8e146
2024-07-12 09:48:36 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1f4d38f9
2024-07-12 09:48:36 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1f4d38f9
2024-07-12 09:48:36 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@18463720
2024-07-12 09:48:36 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@18463720
2024-07-12 09:48:36 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@64eeddd8
2024-07-12 09:48:36 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@64eeddd8
2024-07-12 09:48:36 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@10f8e2d2
2024-07-12 09:48:36 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@10f8e2d2
2024-07-12 09:48:36 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@10f8e2d2
2024-07-12 09:48:36 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@66048ac4
2024-07-12 09:48:36 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@66048ac4
2024-07-12 09:48:36 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@66048ac4
2024-07-12 09:48:36 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4f525e13
2024-07-12 09:48:36 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4f525e13
2024-07-12 09:48:36 - Adding type registration image -> org.hibernate.type.BasicTypeReference@5d404a3c
2024-07-12 09:48:36 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@af9dd34
2024-07-12 09:48:36 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@af9dd34
2024-07-12 09:48:36 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@48692405
2024-07-12 09:48:36 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@151659dd
2024-07-12 09:48:36 - Adding type registration short -> org.hibernate.type.BasicTypeReference@4a58e0e9
2024-07-12 09:48:36 - Adding type registration short -> org.hibernate.type.BasicTypeReference@4a58e0e9
2024-07-12 09:48:36 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4a58e0e9
2024-07-12 09:48:36 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@e8c84eb
2024-07-12 09:48:36 - Adding type registration int -> org.hibernate.type.BasicTypeReference@e8c84eb
2024-07-12 09:48:36 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@e8c84eb
2024-07-12 09:48:36 - Adding type registration long -> org.hibernate.type.BasicTypeReference@f44d033
2024-07-12 09:48:36 - Adding type registration long -> org.hibernate.type.BasicTypeReference@f44d033
2024-07-12 09:48:36 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@f44d033
2024-07-12 09:48:36 - Adding type registration float -> org.hibernate.type.BasicTypeReference@283bb8b7
2024-07-12 09:48:36 - Adding type registration float -> org.hibernate.type.BasicTypeReference@283bb8b7
2024-07-12 09:48:36 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@283bb8b7
2024-07-12 09:48:36 - Adding type registration double -> org.hibernate.type.BasicTypeReference@25e95af1
2024-07-12 09:48:36 - Adding type registration double -> org.hibernate.type.BasicTypeReference@25e95af1
2024-07-12 09:48:36 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@25e95af1
2024-07-12 09:48:36 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4fa8297b
2024-07-12 09:48:36 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4fa8297b
2024-07-12 09:48:36 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6644bdf5
2024-07-12 09:48:36 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6644bdf5
2024-07-12 09:48:36 - Adding type registration character -> org.hibernate.type.BasicTypeReference@13cf5f8a
2024-07-12 09:48:36 - Adding type registration char -> org.hibernate.type.BasicTypeReference@13cf5f8a
2024-07-12 09:48:36 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@13cf5f8a
2024-07-12 09:48:36 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7c9ea1d0
2024-07-12 09:48:36 - Adding type registration string -> org.hibernate.type.BasicTypeReference@72f3acc9
2024-07-12 09:48:36 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@72f3acc9
2024-07-12 09:48:36 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@319b1c77
2024-07-12 09:48:36 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@584136c1
2024-07-12 09:48:36 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@584136c1
2024-07-12 09:48:36 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@584136c1
2024-07-12 09:48:36 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@51d88c38
2024-07-12 09:48:36 - Adding type registration text -> org.hibernate.type.BasicTypeReference@3ea2f72e
2024-07-12 09:48:36 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@57b33c29
2024-07-12 09:48:36 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@615ef20
2024-07-12 09:48:36 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@615ef20
2024-07-12 09:48:36 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@13390a96
2024-07-12 09:48:36 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@13390a96
2024-07-12 09:48:36 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3a8b9458
2024-07-12 09:48:36 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7497a554
2024-07-12 09:48:36 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5dd23809
2024-07-12 09:48:36 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@664f49f
2024-07-12 09:48:36 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@60ab895f
2024-07-12 09:48:36 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@295f2d1b
2024-07-12 09:48:36 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@65015a49
2024-07-12 09:48:36 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@65015a49
2024-07-12 09:48:36 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@44e08a7a
2024-07-12 09:48:36 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@44e08a7a
2024-07-12 09:48:36 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@78bd02c8
2024-07-12 09:48:36 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@78bd02c8
2024-07-12 09:48:36 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@28dacf31
2024-07-12 09:48:36 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@28dacf31
2024-07-12 09:48:36 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47e60b71
2024-07-12 09:48:36 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47e60b71
2024-07-12 09:48:36 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@795faad
2024-07-12 09:48:36 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@17ae13d5
2024-07-12 09:48:36 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@69f3e556
2024-07-12 09:48:36 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@69f3e556
2024-07-12 09:48:36 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1eb9d69a
2024-07-12 09:48:36 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@36511772
2024-07-12 09:48:36 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51869ad6
2024-07-12 09:48:36 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@27a90ce5
2024-07-12 09:48:36 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@27a90ce5
2024-07-12 09:48:36 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77f4038c
2024-07-12 09:48:36 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@49a06087
2024-07-12 09:48:36 - Adding type registration date -> org.hibernate.type.BasicTypeReference@2c15034f
2024-07-12 09:48:36 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@2c15034f
2024-07-12 09:48:36 - Adding type registration time -> org.hibernate.type.BasicTypeReference@43b4ec0c
2024-07-12 09:48:36 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@43b4ec0c
2024-07-12 09:48:36 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@148b6f95
2024-07-12 09:48:36 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@148b6f95
2024-07-12 09:48:36 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@148b6f95
2024-07-12 09:48:36 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5ee581db
2024-07-12 09:48:36 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5ee581db
2024-07-12 09:48:36 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5ee581db
2024-07-12 09:48:36 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@5a6efe33
2024-07-12 09:48:36 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e5ebdfe
2024-07-12 09:48:36 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@71668a67
2024-07-12 09:48:36 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@71668a67
2024-07-12 09:48:36 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3ff26c9
2024-07-12 09:48:36 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3ff26c9
2024-07-12 09:48:36 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3ff26c9
2024-07-12 09:48:36 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2ecdcfe3
2024-07-12 09:48:36 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@65b73689
2024-07-12 09:48:36 - Adding type registration class -> org.hibernate.type.BasicTypeReference@2047adea
2024-07-12 09:48:36 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2047adea
2024-07-12 09:48:36 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5af40e45
2024-07-12 09:48:36 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5af40e45
2024-07-12 09:48:36 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5af40e45
2024-07-12 09:48:36 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@46591e98
2024-07-12 09:48:36 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@46591e98
2024-07-12 09:48:36 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5b6cc344
2024-07-12 09:48:36 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5b6cc344
2024-07-12 09:48:36 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2110684a
2024-07-12 09:48:36 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2110684a
2024-07-12 09:48:36 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@83e635f
2024-07-12 09:48:36 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@83e635f
2024-07-12 09:48:36 - Adding type registration url -> org.hibernate.type.BasicTypeReference@61d011e
2024-07-12 09:48:36 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@61d011e
2024-07-12 09:48:36 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3b56947a
2024-07-12 09:48:36 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1926f962
2024-07-12 09:48:36 - Adding type registration object -> org.hibernate.type.JavaObjectType@9cc0505
2024-07-12 09:48:36 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@9cc0505
2024-07-12 09:48:36 - Adding type registration null -> org.hibernate.type.NullType@4b8a0d03
2024-07-12 09:48:36 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@54f373d4
2024-07-12 09:48:36 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1c53bd49
2024-07-12 09:48:36 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@16949dfa
2024-07-12 09:48:36 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@d6d683e
2024-07-12 09:48:36 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@42cfd794
2024-07-12 09:48:36 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@43778371
2024-07-12 09:48:36 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@71beada8
2024-07-12 09:48:36 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@17f41739
2024-07-12 09:48:36 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45b8bbbf] into BootstrapContext; was [null]
2024-07-12 09:48:36 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45b8bbbf) [was null]
2024-07-12 09:48:36 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2cc34cd5] into BootstrapContext; was [null]
2024-07-12 09:48:36 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@684b26b7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2de7c84a]
2024-07-12 09:48:37 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-12 09:48:37 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45b8bbbf]
2024-07-12 09:48:37 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@45b8bbbf]
2024-07-12 09:48:37 - HikariPool-1 - Starting...
2024-07-12 09:48:37 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@79fc4e99
2024-07-12 09:48:37 - HikariPool-1 - Start completed.
2024-07-12 09:48:37 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-12 09:48:37 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-12 09:48:37 - JDBC version : 4.2
2024-07-12 09:48:37 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-12 09:48:37 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-12 09:48:37 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-12 09:48:37 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-12 09:48:37 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-12 09:48:37 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e6f5842) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@60b4c754)
2024-07-12 09:48:37 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c846d55) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@735167e1)
2024-07-12 09:48:37 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@67689c81) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21a0795f)
2024-07-12 09:48:37 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ec156fb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56d742ad)
2024-07-12 09:48:37 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@75784062) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5730b513)
2024-07-12 09:48:37 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73e25780) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1f4cb17b)
2024-07-12 09:48:37 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@280099a0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7aca299e)
2024-07-12 09:48:37 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1bf52f10) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6148827c)
2024-07-12 09:48:37 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4da9da6c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66048c9e)
2024-07-12 09:48:37 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-12 09:48:37 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-12 09:48:37 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-12 09:48:37 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-12 09:48:37 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-12 09:48:37 - Adding type registration null -> org.hibernate.type.NullType@4a773f08
2024-07-12 09:48:37 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4b8a0d03`
2024-07-12 09:48:37 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-12 09:48:37 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-12 09:48:37 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-12 09:48:37 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-12 09:48:37 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-12 09:48:37 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-12 09:48:37 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-12 09:48:37 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-12 09:48:37 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-12 09:48:37 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-12 09:48:37 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-12 09:48:37 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-12 09:48:37 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@214e3185] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75345e47]
2024-07-12 09:48:37 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-12 09:48:37 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-12 09:48:37 - Import with entity name Task
2024-07-12 09:48:37 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-12 09:48:37 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-12 09:48:37 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-12 09:48:37 - MetadataSourceProcessor property id with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-12 09:48:37 - building BasicValue for id
2024-07-12 09:48:37 - Skipping column re-registration: task.id
2024-07-12 09:48:37 - Building property id
2024-07-12 09:48:37 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property category with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-12 09:48:37 - building BasicValue for category
2024-07-12 09:48:37 - Skipping column re-registration: task.category
2024-07-12 09:48:37 - Building property category
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-12 09:48:37 - building BasicValue for createdAt
2024-07-12 09:48:37 - Skipping column re-registration: task.created_at
2024-07-12 09:48:37 - Building property createdAt
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property description with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-12 09:48:37 - building BasicValue for description
2024-07-12 09:48:37 - Skipping column re-registration: task.description
2024-07-12 09:48:37 - Building property description
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property priority with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-12 09:48:37 - building BasicValue for priority
2024-07-12 09:48:37 - Skipping column re-registration: task.priority
2024-07-12 09:48:37 - Building property priority
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property title with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-12 09:48:37 - building BasicValue for title
2024-07-12 09:48:37 - Skipping column re-registration: task.title
2024-07-12 09:48:37 - Building property title
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-12 09:48:37 - building BasicValue for updatedAt
2024-07-12 09:48:37 - Skipping column re-registration: task.updated_at
2024-07-12 09:48:37 - Building property updatedAt
2024-07-12 09:48:37 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - Building property user
2024-07-12 09:48:37 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-12 09:48:37 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-12 09:48:37 - Import with entity name User
2024-07-12 09:48:37 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-12 09:48:37 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-12 09:48:37 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-12 09:48:37 - MetadataSourceProcessor property id with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-12 09:48:37 - building BasicValue for id
2024-07-12 09:48:37 - Skipping column re-registration: users.id
2024-07-12 09:48:37 - Building property id
2024-07-12 09:48:37 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property email with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-12 09:48:37 - building BasicValue for email
2024-07-12 09:48:37 - Skipping column re-registration: users.email
2024-07-12 09:48:37 - Building property email
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property password with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-12 09:48:37 - building BasicValue for password
2024-07-12 09:48:37 - Skipping column re-registration: users.password
2024-07-12 09:48:37 - Building property password
2024-07-12 09:48:37 - Binding column: AnnotatedJoinColumn()
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-12 09:48:37 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-12 09:48:37 - Binding column: AnnotatedJoinColumn()
2024-07-12 09:48:37 - Binding column: AnnotatedJoinColumn()
2024-07-12 09:48:37 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:37 - Building property tasks
2024-07-12 09:48:37 - Binding column: AnnotatedColumn()
2024-07-12 09:48:37 - MetadataSourceProcessor property username with lazy=false
2024-07-12 09:48:37 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-12 09:48:37 - building BasicValue for username
2024-07-12 09:48:37 - Skipping column re-registration: users.username
2024-07-12 09:48:37 - Building property username
2024-07-12 09:48:37 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-12 09:48:37 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-12 09:48:37 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-12 09:48:37 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-12 09:48:37 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:37 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-12 09:48:37 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-12 09:48:37 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-12 09:48:37 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-12 09:48:37 - Building session factory
2024-07-12 09:48:37 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-12 09:48:37 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@45964b9e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@166a5659, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.17283899600050717039, com.sun.management.jmxremote.port=63985, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=30728, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.17283899600050717039, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1afabf06, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-12 09:48:37 - Session factory constructed with filter configurations : {}
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3bd79444] under count; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ce3d95a] under every; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6f6c6c70] under any; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ff1a5a0] under sinh; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75c3584e] under cosh; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f7b7720] under tanh; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e0c898c] under pi; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd2e348] under log; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-12 09:48:37 - Registering alternate key : length -> character_length
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@464abed] under position; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@242ebd3b] under overlay; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1b984ba5] under trim; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@247a8411] under cast; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c05f83b] under collate; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@15a41088] under extract; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@f1e1d66] under ifnull; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6b063695] under pad; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1631dbbc] under str; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7804a783] under format; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@400df2b3] under timestampadd; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5c13534a] under timestampdiff; prior registration was null
2024-07-12 09:48:37 - Registering alternate key : dateadd -> timestampadd
2024-07-12 09:48:37 - Registering alternate key : datediff -> timestampdiff
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2643ed03] under current_date; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@17d45cfb] under current_time; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1fb00a6d] under current_timestamp; prior registration was null
2024-07-12 09:48:37 - Registering alternate key : current date -> current_date
2024-07-12 09:48:37 - Registering alternate key : current time -> current_time
2024-07-12 09:48:37 - Registering alternate key : current timestamp -> current_timestamp
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1c65ec63] under local_date; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25f73119] under local_time; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@10f192d8] under local_datetime; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f0d01c9] under offset_datetime; prior registration was null
2024-07-12 09:48:37 - Registering alternate key : local date -> local_date
2024-07-12 09:48:37 - Registering alternate key : local time -> local_time
2024-07-12 09:48:37 - Registering alternate key : local datetime -> local_datetime
2024-07-12 09:48:37 - Registering alternate key : offset datetime -> offset_datetime
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c38e2bf] under instant; prior registration was null
2024-07-12 09:48:37 - Registering alternate key : current_instant -> instant
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@20923380] under sql; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1cd2e348
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2f5a092e] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@1640a6b5] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-12 09:48:37 - Registering alternate key : day -> dayofmonth
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70940cb8] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@464abed
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7a74672] under trunc; prior registration was null
2024-07-12 09:48:37 - Registering alternate key : truncate -> trunc
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35b79b1f] under bitand; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@664083f6] under bitor; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a8835c6] under bitxor; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67216c33] under bitnot; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6ec77cab] under format; prior registration was org.hibernate.dialect.function.FormatFunction@7804a783
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@25f73119
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@10f192d8
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c7a1db6] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e0c898c
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@17c72ffa] under chr; prior registration was null
2024-07-12 09:48:37 - Registering alternate key : char -> chr
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7b6b99c5] under sysdate; prior registration was null
2024-07-12 09:48:37 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@7b43f95c] under listagg; prior registration was null
2024-07-12 09:48:37 - abs(NUMERIC arg)
2024-07-12 09:48:37 - Double acos(NUMERIC arg)
2024-07-12 09:48:37 - adddate(DATE datetime, INTEGER days)
2024-07-12 09:48:37 - addtime(TIME datetime, TIME time)
2024-07-12 09:48:37 - Boolean any(BOOLEAN arg)
2024-07-12 09:48:37 - Integer ascii(STRING arg)
2024-07-12 09:48:37 - Double asin(NUMERIC arg)
2024-07-12 09:48:37 - Double atan(NUMERIC arg)
2024-07-12 09:48:37 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-12 09:48:37 - avg(arg)
2024-07-12 09:48:37 - bit_and(arg)
2024-07-12 09:48:37 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-12 09:48:37 - bit_or(arg)
2024-07-12 09:48:37 - bitand(arg0, arg1)
2024-07-12 09:48:37 - bitnot(arg)
2024-07-12 09:48:37 - bitor(arg0, arg1)
2024-07-12 09:48:37 - bitxor(arg0, arg1)
2024-07-12 09:48:37 - cast(arg as Type)
2024-07-12 09:48:37 - ceiling(NUMERIC arg)
2024-07-12 09:48:37 - Character char(INTEGER arg)
2024-07-12 09:48:37 - Integer character_length(STRING_OR_CLOB arg)
2024-07-12 09:48:37 - Character chr(INTEGER arg)
2024-07-12 09:48:37 - coalesce(arg0[, arg1[, ...]])
2024-07-12 09:48:37 - String collate(STRING string as COLLATION collation)
2024-07-12 09:48:37 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-12 09:48:37 - Double cos(NUMERIC arg)
2024-07-12 09:48:37 - Double cosh(NUMERIC arg)
2024-07-12 09:48:37 - Double cot(NUMERIC arg)
2024-07-12 09:48:37 - Long count([distinct ]{arg|*})
2024-07-12 09:48:37 - Integer crc32(arg)
2024-07-12 09:48:37 - Date curdate()
2024-07-12 09:48:37 - Date current date
2024-07-12 09:48:37 - Time current time
2024-07-12 09:48:37 - Timestamp current timestamp
2024-07-12 09:48:37 - Date current_date
2024-07-12 09:48:37 - Instant current_instant
2024-07-12 09:48:37 - Time current_time
2024-07-12 09:48:37 - Timestamp current_timestamp
2024-07-12 09:48:37 - Time curtime()
2024-07-12 09:48:37 - Date date(arg)
2024-07-12 09:48:37 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-12 09:48:37 - Integer datediff(DATE end, DATE start)
2024-07-12 09:48:37 - Integer day(DATE arg)
2024-07-12 09:48:37 - String dayname(DATE arg)
2024-07-12 09:48:37 - Integer dayofmonth(DATE arg)
2024-07-12 09:48:37 - Integer dayofweek(DATE arg)
2024-07-12 09:48:37 - Integer dayofyear(DATE arg)
2024-07-12 09:48:37 - Double degrees(NUMERIC arg)
2024-07-12 09:48:37 - Boolean every(BOOLEAN arg)
2024-07-12 09:48:37 - Double exp(NUMERIC arg)
2024-07-12 09:48:37 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-12 09:48:37 - floor(NUMERIC arg)
2024-07-12 09:48:37 - String format(TEMPORAL datetime as STRING pattern)
2024-07-12 09:48:37 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-12 09:48:37 - Integer hour(TIME arg)
2024-07-12 09:48:37 - ifnull(arg0, arg1)
2024-07-12 09:48:37 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-12 09:48:37 - Instant instant
2024-07-12 09:48:37 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-12 09:48:37 - Date last_day(DATE arg)
2024-07-12 09:48:37 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-12 09:48:37 - String left(STRING string, INTEGER length)
2024-07-12 09:48:37 - Integer length(STRING_OR_CLOB arg)
2024-07-12 09:48:37 - String listagg(STRING arg0, STRING arg1)
2024-07-12 09:48:37 - Double ln(NUMERIC arg)
2024-07-12 09:48:37 - LocalDate local date
2024-07-12 09:48:37 - LocalDateTime local datetime
2024-07-12 09:48:37 - LocalTime local time
2024-07-12 09:48:37 - LocalDate local_date
2024-07-12 09:48:37 - LocalDateTime local_datetime
2024-07-12 09:48:37 - LocalTime local_time
2024-07-12 09:48:37 - Timestamp localtime
2024-07-12 09:48:37 - Timestamp localtimestamp
2024-07-12 09:48:37 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-12 09:48:37 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-12 09:48:37 - Double log10(NUMERIC arg)
2024-07-12 09:48:37 - Double log2(NUMERIC arg)
2024-07-12 09:48:37 - String lower(STRING string)
2024-07-12 09:48:37 - String lpad(string, length[, padding])
2024-07-12 09:48:37 - String ltrim(STRING string[, STRING characters])
2024-07-12 09:48:37 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-12 09:48:37 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-12 09:48:37 - max(COMPARABLE arg)
2024-07-12 09:48:37 - String md5(arg)
2024-07-12 09:48:37 - Integer microsecond(TIME arg)
2024-07-12 09:48:37 - min(COMPARABLE arg)
2024-07-12 09:48:37 - Integer minute(TIME arg)
2024-07-12 09:48:37 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-12 09:48:37 - Integer month(DATE arg)
2024-07-12 09:48:37 - String monthname(DATE arg)
2024-07-12 09:48:37 - Timestamp now()
2024-07-12 09:48:37 - nullif(arg0, arg1)
2024-07-12 09:48:37 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-12 09:48:37 - OffsetDateTime offset datetime
2024-07-12 09:48:37 - OffsetDateTime offset_datetime
2024-07-12 09:48:37 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-12 09:48:37 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-12 09:48:37 - Double pi
2024-07-12 09:48:37 - Integer position(STRING pattern in STRING string)
2024-07-12 09:48:37 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-12 09:48:37 - Integer quarter(DATE arg)
2024-07-12 09:48:37 - Double radians(NUMERIC arg)
2024-07-12 09:48:37 - Double rand([INTEGER seed])
2024-07-12 09:48:37 - String repeat(STRING string, INTEGER times)
2024-07-12 09:48:37 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-12 09:48:37 - String reverse(STRING arg)
2024-07-12 09:48:37 - String right(STRING string, INTEGER length)
2024-07-12 09:48:37 - round(NUMERIC number[, INTEGER places])
2024-07-12 09:48:37 - String rpad(string, length[, padding])
2024-07-12 09:48:37 - String rtrim(STRING string[, STRING characters])
2024-07-12 09:48:37 - Integer second(TIME arg)
2024-07-12 09:48:37 - String sha(arg)
2024-07-12 09:48:37 - String sha1(arg)
2024-07-12 09:48:37 - String sha2(arg0, arg1)
2024-07-12 09:48:37 - Integer sign(NUMERIC arg)
2024-07-12 09:48:37 - Double sin(NUMERIC arg)
2024-07-12 09:48:37 - Double sinh(NUMERIC arg)
2024-07-12 09:48:37 - String soundex(arg)
2024-07-12 09:48:37 - String space(INTEGER arg)
2024-07-12 09:48:37 - Object sql
2024-07-12 09:48:37 - Double sqrt(NUMERIC arg)
2024-07-12 09:48:37 - Double stddev(NUMERIC arg)
2024-07-12 09:48:37 - Double stddev_pop(NUMERIC arg)
2024-07-12 09:48:37 - Double stddev_samp(NUMERIC arg)
2024-07-12 09:48:37 - String str(arg)
2024-07-12 09:48:37 - subdate(DATE datetime, INTEGER days)
2024-07-12 09:48:37 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-12 09:48:37 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-12 09:48:37 - subtime(TIME datetime, TIME time)
2024-07-12 09:48:37 - sum(arg)
2024-07-12 09:48:37 - Timestamp sysdate()
2024-07-12 09:48:37 - Double tan(NUMERIC arg)
2024-07-12 09:48:37 - Double tanh(NUMERIC arg)
2024-07-12 09:48:37 - String time(arg)
2024-07-12 09:48:37 - Timestamp timestamp(arg0[, arg1])
2024-07-12 09:48:37 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-12 09:48:37 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-12 09:48:37 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-12 09:48:37 - trunc( ... )
2024-07-12 09:48:37 - truncate( ... )
2024-07-12 09:48:37 - String upper(STRING string)
2024-07-12 09:48:37 - Date utc_date
2024-07-12 09:48:37 - Time utc_time
2024-07-12 09:48:37 - Timestamp utc_timestamp
2024-07-12 09:48:37 - Double var_pop(NUMERIC arg)
2024-07-12 09:48:37 - Double var_samp(NUMERIC arg)
2024-07-12 09:48:37 - Double variance(NUMERIC arg)
2024-07-12 09:48:37 - Integer week(DATE arg)
2024-07-12 09:48:37 - Integer year(DATE arg)
2024-07-12 09:48:37 - Starting QueryInterpretationCache(2048)
2024-07-12 09:48:37 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-12 09:48:37 - Configured EntityCopyObserver strategy: disallow
2024-07-12 09:48:37 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-12 09:48:37 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-12 09:48:37 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-12 09:48:37 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-12 09:48:37 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-12 09:48:37 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-12 09:48:37 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:37 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:37 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:37 - Starting post-init callbacks
2024-07-12 09:48:37 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-12 09:48:37 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-12 09:48:37 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-12 09:48:37 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-12 09:48:37 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-12 09:48:37 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-12 09:48:37 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-12 09:48:37 - Created new SQL alias : u1_0
2024-07-12 09:48:37 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-12 09:48:37 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-12 09:48:37 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-12 09:48:37 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-12 09:48:37 -  Version select: select id from users where id=?
2024-07-12 09:48:37 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-12 09:48:37 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-12 09:48:37 -  Delete (0): delete from users where id=?
2024-07-12 09:48:37 - Created new SQL alias : t1_0
2024-07-12 09:48:37 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-12 09:48:37 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@79169472] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-12 09:48:37 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-12 09:48:37 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-12 09:48:37 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-12 09:48:37 -  Version select: select id from task where id=?
2024-07-12 09:48:37 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-12 09:48:37 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-12 09:48:37 -  Delete (0): delete from task where id=?
2024-07-12 09:48:37 - Created new SQL alias : t1_0
2024-07-12 09:48:37 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@d0538b3] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-12 09:48:37 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-12 09:48:37 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@31c29db1] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-12 09:48:37 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-12 09:48:37 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-12 09:48:37 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:37 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-12 09:48:37 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@214e3185] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5cdafb4d]
2024-07-12 09:48:37 - Checking 0 named HQL queries
2024-07-12 09:48:37 - Checking 0 named SQL queries
2024-07-12 09:48:37 - No alter strings for table : task
2024-07-12 09:48:37 - No alter strings for table : users
2024-07-12 09:48:37 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3956e933
2024-07-12 09:48:37 - Registering SessionFactory: fbed74cb-3655-4643-a089-83e77706e6a1 (<unnamed>)
2024-07-12 09:48:37 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-12 09:48:37 - Instantiated SessionFactory
2024-07-12 09:48:37 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-12 09:48:38 - Statistics initialized [enabled=false]
2024-07-12 09:48:38 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-12 09:48:38 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-12 09:48:38 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-12 09:48:43 - Starting TaskmanagementApplication using Java 22.0.1 with PID 4912 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-12 09:48:43 - No active profile set, falling back to 1 default profile: "default"
2024-07-12 09:48:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-12 09:48:44 - Finished Spring Data repository scanning in 41 ms. Found 2 JPA repository interfaces.
2024-07-12 09:48:45 - Tomcat initialized with port 8080 (http)
2024-07-12 09:48:45 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-12 09:48:45 - Starting service [Tomcat]
2024-07-12 09:48:45 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-12 09:48:45 - Initializing Spring embedded WebApplicationContext
2024-07-12 09:48:45 - Root WebApplicationContext: initialization completed in 1495 ms
2024-07-12 09:48:45 - Filter 'webMvcObservationFilter' configured for use
2024-07-12 09:48:45 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-12 09:48:45 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-12 09:48:45 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-12 09:48:45 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-12 09:48:45 - HHH000206: 'hibernate.properties' not found
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-12 09:48:45 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-12 09:48:45 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-12 09:48:45 - HHH000026: Second-level cache disabled
2024-07-12 09:48:45 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@459bf87c
2024-07-12 09:48:45 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@459bf87c
2024-07-12 09:48:45 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@459bf87c
2024-07-12 09:48:45 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-07-12 09:48:45 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-07-12 09:48:45 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-07-12 09:48:45 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-07-12 09:48:45 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@391d28ea
2024-07-12 09:48:45 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@391d28ea
2024-07-12 09:48:45 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23df7fad
2024-07-12 09:48:45 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@23df7fad
2024-07-12 09:48:45 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@23df7fad
2024-07-12 09:48:45 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-12 09:48:45 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-12 09:48:45 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-07-12 09:48:45 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2acca224
2024-07-12 09:48:45 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2acca224
2024-07-12 09:48:45 - Adding type registration image -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-07-12 09:48:45 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-12 09:48:45 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-07-12 09:48:45 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-07-12 09:48:45 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5ddb302
2024-07-12 09:48:45 - Adding type registration short -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-12 09:48:45 - Adding type registration short -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-12 09:48:45 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-07-12 09:48:45 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-12 09:48:45 - Adding type registration int -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-12 09:48:45 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-07-12 09:48:45 - Adding type registration long -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-12 09:48:45 - Adding type registration long -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-12 09:48:45 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-07-12 09:48:45 - Adding type registration float -> org.hibernate.type.BasicTypeReference@51813065
2024-07-12 09:48:45 - Adding type registration float -> org.hibernate.type.BasicTypeReference@51813065
2024-07-12 09:48:45 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@51813065
2024-07-12 09:48:45 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-12 09:48:45 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-12 09:48:45 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4f581211
2024-07-12 09:48:45 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-12 09:48:45 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@e0847a9
2024-07-12 09:48:45 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-12 09:48:45 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@51743cc0
2024-07-12 09:48:45 - Adding type registration character -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-12 09:48:45 - Adding type registration char -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-12 09:48:45 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@92e2c93
2024-07-12 09:48:45 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6697f3d
2024-07-12 09:48:45 - Adding type registration string -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-12 09:48:45 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a105556
2024-07-12 09:48:45 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-12 09:48:45 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-12 09:48:45 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-12 09:48:45 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-12 09:48:45 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-12 09:48:45 - Adding type registration text -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-12 09:48:45 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-12 09:48:45 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-12 09:48:45 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-12 09:48:45 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-12 09:48:45 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-12 09:48:45 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@72a34537
2024-07-12 09:48:45 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-12 09:48:45 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-12 09:48:45 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-12 09:48:45 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-12 09:48:45 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@35536760
2024-07-12 09:48:45 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-12 09:48:45 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-12 09:48:45 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-12 09:48:45 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-12 09:48:45 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-12 09:48:45 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-12 09:48:45 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-12 09:48:45 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-12 09:48:45 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-12 09:48:45 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-12 09:48:45 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-12 09:48:45 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-12 09:48:45 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-12 09:48:45 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-12 09:48:45 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-12 09:48:45 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-12 09:48:45 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-12 09:48:45 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-12 09:48:45 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-12 09:48:45 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-12 09:48:45 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-12 09:48:45 - Adding type registration date -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-12 09:48:45 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-12 09:48:45 - Adding type registration time -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-12 09:48:45 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-12 09:48:45 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-12 09:48:45 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-12 09:48:45 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-12 09:48:45 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-12 09:48:45 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-12 09:48:45 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-12 09:48:45 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-12 09:48:45 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-12 09:48:45 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-12 09:48:45 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-12 09:48:45 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-12 09:48:45 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-12 09:48:45 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-12 09:48:45 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-12 09:48:45 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-12 09:48:45 - Adding type registration class -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-12 09:48:45 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-12 09:48:45 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-12 09:48:45 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-12 09:48:45 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-12 09:48:45 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-12 09:48:45 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-12 09:48:45 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-12 09:48:45 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-12 09:48:45 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-12 09:48:45 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-12 09:48:45 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-12 09:48:45 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-12 09:48:45 - Adding type registration url -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-12 09:48:45 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-12 09:48:45 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-12 09:48:45 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-12 09:48:45 - Adding type registration object -> org.hibernate.type.JavaObjectType@6b030101
2024-07-12 09:48:45 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6b030101
2024-07-12 09:48:45 - Adding type registration null -> org.hibernate.type.NullType@dbc7e0a
2024-07-12 09:48:45 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@636fccb0
2024-07-12 09:48:45 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@28519bfb
2024-07-12 09:48:45 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@15914bb5
2024-07-12 09:48:45 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7b332b23
2024-07-12 09:48:45 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@66a472b9
2024-07-12 09:48:45 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@428eb3d5
2024-07-12 09:48:45 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5ddd84d2
2024-07-12 09:48:45 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3fd5d679
2024-07-12 09:48:45 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1f48fa72] into BootstrapContext; was [null]
2024-07-12 09:48:45 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1f48fa72) [was null]
2024-07-12 09:48:45 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@58bad46f] into BootstrapContext; was [null]
2024-07-12 09:48:45 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c0e4e4e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@20231384]
2024-07-12 09:48:45 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-12 09:48:45 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1f48fa72]
2024-07-12 09:48:45 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@1f48fa72]
2024-07-12 09:48:45 - HikariPool-1 - Starting...
2024-07-12 09:48:46 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@758d4aa9
2024-07-12 09:48:46 - HikariPool-1 - Start completed.
2024-07-12 09:48:46 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-12 09:48:46 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-12 09:48:46 - JDBC version : 4.2
2024-07-12 09:48:46 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-12 09:48:46 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-12 09:48:46 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-12 09:48:46 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-12 09:48:46 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-12 09:48:46 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10724a72) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25435731)
2024-07-12 09:48:46 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10301d6f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5cd6719d)
2024-07-12 09:48:46 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ef591af) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61b0af9f)
2024-07-12 09:48:46 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71fb1da3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1ecec098)
2024-07-12 09:48:46 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6cc44207) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@8ecc457)
2024-07-12 09:48:46 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21d3d6ec) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49f1184e)
2024-07-12 09:48:46 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7ebaf0d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@694b1ddb)
2024-07-12 09:48:46 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5690c2a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17e2835c)
2024-07-12 09:48:46 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d2bc56a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7cbfbcd1)
2024-07-12 09:48:46 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-12 09:48:46 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-12 09:48:46 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-12 09:48:46 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-12 09:48:46 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-12 09:48:46 - Adding type registration null -> org.hibernate.type.NullType@383e6734
2024-07-12 09:48:46 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@dbc7e0a`
2024-07-12 09:48:46 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-12 09:48:46 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-12 09:48:46 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-12 09:48:46 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-12 09:48:46 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-12 09:48:46 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-12 09:48:46 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-12 09:48:46 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-12 09:48:46 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-12 09:48:46 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-12 09:48:46 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-12 09:48:46 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-12 09:48:46 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41581c3f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10ba9780]
2024-07-12 09:48:46 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-12 09:48:46 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-12 09:48:46 - Import with entity name Task
2024-07-12 09:48:46 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-12 09:48:46 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-12 09:48:46 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-12 09:48:46 - MetadataSourceProcessor property id with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-12 09:48:46 - building BasicValue for id
2024-07-12 09:48:46 - Skipping column re-registration: task.id
2024-07-12 09:48:46 - Building property id
2024-07-12 09:48:46 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property category with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-12 09:48:46 - building BasicValue for category
2024-07-12 09:48:46 - Skipping column re-registration: task.category
2024-07-12 09:48:46 - Building property category
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-12 09:48:46 - building BasicValue for createdAt
2024-07-12 09:48:46 - Skipping column re-registration: task.created_at
2024-07-12 09:48:46 - Building property createdAt
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property description with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-12 09:48:46 - building BasicValue for description
2024-07-12 09:48:46 - Skipping column re-registration: task.description
2024-07-12 09:48:46 - Building property description
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property priority with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-12 09:48:46 - building BasicValue for priority
2024-07-12 09:48:46 - Skipping column re-registration: task.priority
2024-07-12 09:48:46 - Building property priority
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property title with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-12 09:48:46 - building BasicValue for title
2024-07-12 09:48:46 - Skipping column re-registration: task.title
2024-07-12 09:48:46 - Building property title
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-12 09:48:46 - building BasicValue for updatedAt
2024-07-12 09:48:46 - Skipping column re-registration: task.updated_at
2024-07-12 09:48:46 - Building property updatedAt
2024-07-12 09:48:46 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - Building property user
2024-07-12 09:48:46 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-12 09:48:46 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-12 09:48:46 - Import with entity name User
2024-07-12 09:48:46 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-12 09:48:46 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-12 09:48:46 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-12 09:48:46 - MetadataSourceProcessor property id with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-12 09:48:46 - building BasicValue for id
2024-07-12 09:48:46 - Skipping column re-registration: users.id
2024-07-12 09:48:46 - Building property id
2024-07-12 09:48:46 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property email with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-12 09:48:46 - building BasicValue for email
2024-07-12 09:48:46 - Skipping column re-registration: users.email
2024-07-12 09:48:46 - Building property email
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property password with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-12 09:48:46 - building BasicValue for password
2024-07-12 09:48:46 - Skipping column re-registration: users.password
2024-07-12 09:48:46 - Building property password
2024-07-12 09:48:46 - Binding column: AnnotatedJoinColumn()
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-12 09:48:46 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-12 09:48:46 - Binding column: AnnotatedJoinColumn()
2024-07-12 09:48:46 - Binding column: AnnotatedJoinColumn()
2024-07-12 09:48:46 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:46 - Building property tasks
2024-07-12 09:48:46 - Binding column: AnnotatedColumn()
2024-07-12 09:48:46 - MetadataSourceProcessor property username with lazy=false
2024-07-12 09:48:46 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-12 09:48:46 - building BasicValue for username
2024-07-12 09:48:46 - Skipping column re-registration: users.username
2024-07-12 09:48:46 - Building property username
2024-07-12 09:48:46 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-12 09:48:46 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-12 09:48:46 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-12 09:48:46 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-12 09:48:46 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:46 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-12 09:48:46 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-12 09:48:46 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-12 09:48:46 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-12 09:48:46 - Building session factory
2024-07-12 09:48:46 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-12 09:48:46 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5c4516ec, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@17ea3bc0, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.14509628148717303722, com.sun.management.jmxremote.port=63985, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=4912, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.14509628148717303722, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4d93e5bf, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-12 09:48:46 - Session factory constructed with filter configurations : {}
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@69d1ad64] under count; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1f641fb7] under every; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@69dc7b24] under any; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2190508d] under sinh; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70b630d] under cosh; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72e1e587] under tanh; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5036a286] under pi; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73818435] under log; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-12 09:48:46 - Registering alternate key : length -> character_length
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2ad6895a] under position; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@af57949] under overlay; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1e749235] under trim; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3a44993c] under cast; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b6606d1] under collate; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5adc71e7] under extract; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4700963e] under ifnull; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@523f3c29] under pad; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7aef8000] under str; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1b5d1d9] under format; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2cd2c764] under timestampadd; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7167d81b] under timestampdiff; prior registration was null
2024-07-12 09:48:46 - Registering alternate key : dateadd -> timestampadd
2024-07-12 09:48:46 - Registering alternate key : datediff -> timestampdiff
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c9cfcde] under current_date; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2f3c7b24] under current_time; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7dbd70fd] under current_timestamp; prior registration was null
2024-07-12 09:48:46 - Registering alternate key : current date -> current_date
2024-07-12 09:48:46 - Registering alternate key : current time -> current_time
2024-07-12 09:48:46 - Registering alternate key : current timestamp -> current_timestamp
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2cb53bfc] under local_date; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@779448b8] under local_time; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3bbdf835] under local_datetime; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d114d27] under offset_datetime; prior registration was null
2024-07-12 09:48:46 - Registering alternate key : local date -> local_date
2024-07-12 09:48:46 - Registering alternate key : local time -> local_time
2024-07-12 09:48:46 - Registering alternate key : local datetime -> local_datetime
2024-07-12 09:48:46 - Registering alternate key : offset datetime -> offset_datetime
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@28fef9a2] under instant; prior registration was null
2024-07-12 09:48:46 - Registering alternate key : current_instant -> instant
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@516155b5] under sql; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73818435
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7d4b32d1] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7a75183d] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-12 09:48:46 - Registering alternate key : day -> dayofmonth
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2acbe46d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2ad6895a
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5d9d8ecf] under trunc; prior registration was null
2024-07-12 09:48:46 - Registering alternate key : truncate -> trunc
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43cc7951] under bitand; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@758311ed] under bitor; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7533923b] under bitxor; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@446981a4] under bitnot; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@644f6e89] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1b5d1d9
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@779448b8
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3bbdf835
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9ae0794] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5036a286
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e5eed0] under chr; prior registration was null
2024-07-12 09:48:46 - Registering alternate key : char -> chr
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@680937c9] under sysdate; prior registration was null
2024-07-12 09:48:46 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@608c2042] under listagg; prior registration was null
2024-07-12 09:48:46 - abs(NUMERIC arg)
2024-07-12 09:48:46 - Double acos(NUMERIC arg)
2024-07-12 09:48:46 - adddate(DATE datetime, INTEGER days)
2024-07-12 09:48:46 - addtime(TIME datetime, TIME time)
2024-07-12 09:48:46 - Boolean any(BOOLEAN arg)
2024-07-12 09:48:46 - Integer ascii(STRING arg)
2024-07-12 09:48:46 - Double asin(NUMERIC arg)
2024-07-12 09:48:46 - Double atan(NUMERIC arg)
2024-07-12 09:48:46 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-12 09:48:46 - avg(arg)
2024-07-12 09:48:46 - bit_and(arg)
2024-07-12 09:48:46 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-12 09:48:46 - bit_or(arg)
2024-07-12 09:48:46 - bitand(arg0, arg1)
2024-07-12 09:48:46 - bitnot(arg)
2024-07-12 09:48:46 - bitor(arg0, arg1)
2024-07-12 09:48:46 - bitxor(arg0, arg1)
2024-07-12 09:48:46 - cast(arg as Type)
2024-07-12 09:48:46 - ceiling(NUMERIC arg)
2024-07-12 09:48:46 - Character char(INTEGER arg)
2024-07-12 09:48:46 - Integer character_length(STRING_OR_CLOB arg)
2024-07-12 09:48:46 - Character chr(INTEGER arg)
2024-07-12 09:48:46 - coalesce(arg0[, arg1[, ...]])
2024-07-12 09:48:46 - String collate(STRING string as COLLATION collation)
2024-07-12 09:48:46 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-12 09:48:46 - Double cos(NUMERIC arg)
2024-07-12 09:48:46 - Double cosh(NUMERIC arg)
2024-07-12 09:48:46 - Double cot(NUMERIC arg)
2024-07-12 09:48:46 - Long count([distinct ]{arg|*})
2024-07-12 09:48:46 - Integer crc32(arg)
2024-07-12 09:48:46 - Date curdate()
2024-07-12 09:48:46 - Date current date
2024-07-12 09:48:46 - Time current time
2024-07-12 09:48:46 - Timestamp current timestamp
2024-07-12 09:48:46 - Date current_date
2024-07-12 09:48:46 - Instant current_instant
2024-07-12 09:48:46 - Time current_time
2024-07-12 09:48:46 - Timestamp current_timestamp
2024-07-12 09:48:46 - Time curtime()
2024-07-12 09:48:46 - Date date(arg)
2024-07-12 09:48:46 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-12 09:48:46 - Integer datediff(DATE end, DATE start)
2024-07-12 09:48:46 - Integer day(DATE arg)
2024-07-12 09:48:46 - String dayname(DATE arg)
2024-07-12 09:48:46 - Integer dayofmonth(DATE arg)
2024-07-12 09:48:46 - Integer dayofweek(DATE arg)
2024-07-12 09:48:46 - Integer dayofyear(DATE arg)
2024-07-12 09:48:46 - Double degrees(NUMERIC arg)
2024-07-12 09:48:46 - Boolean every(BOOLEAN arg)
2024-07-12 09:48:46 - Double exp(NUMERIC arg)
2024-07-12 09:48:46 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-12 09:48:46 - floor(NUMERIC arg)
2024-07-12 09:48:46 - String format(TEMPORAL datetime as STRING pattern)
2024-07-12 09:48:46 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-12 09:48:46 - Integer hour(TIME arg)
2024-07-12 09:48:46 - ifnull(arg0, arg1)
2024-07-12 09:48:46 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-12 09:48:46 - Instant instant
2024-07-12 09:48:46 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-12 09:48:46 - Date last_day(DATE arg)
2024-07-12 09:48:46 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-12 09:48:46 - String left(STRING string, INTEGER length)
2024-07-12 09:48:46 - Integer length(STRING_OR_CLOB arg)
2024-07-12 09:48:46 - String listagg(STRING arg0, STRING arg1)
2024-07-12 09:48:46 - Double ln(NUMERIC arg)
2024-07-12 09:48:46 - LocalDate local date
2024-07-12 09:48:46 - LocalDateTime local datetime
2024-07-12 09:48:46 - LocalTime local time
2024-07-12 09:48:46 - LocalDate local_date
2024-07-12 09:48:46 - LocalDateTime local_datetime
2024-07-12 09:48:46 - LocalTime local_time
2024-07-12 09:48:46 - Timestamp localtime
2024-07-12 09:48:46 - Timestamp localtimestamp
2024-07-12 09:48:46 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-12 09:48:46 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-12 09:48:46 - Double log10(NUMERIC arg)
2024-07-12 09:48:46 - Double log2(NUMERIC arg)
2024-07-12 09:48:46 - String lower(STRING string)
2024-07-12 09:48:46 - String lpad(string, length[, padding])
2024-07-12 09:48:46 - String ltrim(STRING string[, STRING characters])
2024-07-12 09:48:46 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-12 09:48:46 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-12 09:48:46 - max(COMPARABLE arg)
2024-07-12 09:48:46 - String md5(arg)
2024-07-12 09:48:46 - Integer microsecond(TIME arg)
2024-07-12 09:48:46 - min(COMPARABLE arg)
2024-07-12 09:48:46 - Integer minute(TIME arg)
2024-07-12 09:48:46 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-12 09:48:46 - Integer month(DATE arg)
2024-07-12 09:48:46 - String monthname(DATE arg)
2024-07-12 09:48:46 - Timestamp now()
2024-07-12 09:48:46 - nullif(arg0, arg1)
2024-07-12 09:48:46 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-12 09:48:46 - OffsetDateTime offset datetime
2024-07-12 09:48:46 - OffsetDateTime offset_datetime
2024-07-12 09:48:46 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-12 09:48:46 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-12 09:48:46 - Double pi
2024-07-12 09:48:46 - Integer position(STRING pattern in STRING string)
2024-07-12 09:48:46 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-12 09:48:46 - Integer quarter(DATE arg)
2024-07-12 09:48:46 - Double radians(NUMERIC arg)
2024-07-12 09:48:46 - Double rand([INTEGER seed])
2024-07-12 09:48:46 - String repeat(STRING string, INTEGER times)
2024-07-12 09:48:46 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-12 09:48:46 - String reverse(STRING arg)
2024-07-12 09:48:46 - String right(STRING string, INTEGER length)
2024-07-12 09:48:46 - round(NUMERIC number[, INTEGER places])
2024-07-12 09:48:46 - String rpad(string, length[, padding])
2024-07-12 09:48:46 - String rtrim(STRING string[, STRING characters])
2024-07-12 09:48:46 - Integer second(TIME arg)
2024-07-12 09:48:46 - String sha(arg)
2024-07-12 09:48:46 - String sha1(arg)
2024-07-12 09:48:46 - String sha2(arg0, arg1)
2024-07-12 09:48:46 - Integer sign(NUMERIC arg)
2024-07-12 09:48:46 - Double sin(NUMERIC arg)
2024-07-12 09:48:46 - Double sinh(NUMERIC arg)
2024-07-12 09:48:46 - String soundex(arg)
2024-07-12 09:48:46 - String space(INTEGER arg)
2024-07-12 09:48:46 - Object sql
2024-07-12 09:48:46 - Double sqrt(NUMERIC arg)
2024-07-12 09:48:46 - Double stddev(NUMERIC arg)
2024-07-12 09:48:46 - Double stddev_pop(NUMERIC arg)
2024-07-12 09:48:46 - Double stddev_samp(NUMERIC arg)
2024-07-12 09:48:46 - String str(arg)
2024-07-12 09:48:46 - subdate(DATE datetime, INTEGER days)
2024-07-12 09:48:46 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-12 09:48:46 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-12 09:48:46 - subtime(TIME datetime, TIME time)
2024-07-12 09:48:46 - sum(arg)
2024-07-12 09:48:46 - Timestamp sysdate()
2024-07-12 09:48:46 - Double tan(NUMERIC arg)
2024-07-12 09:48:46 - Double tanh(NUMERIC arg)
2024-07-12 09:48:46 - String time(arg)
2024-07-12 09:48:46 - Timestamp timestamp(arg0[, arg1])
2024-07-12 09:48:46 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-12 09:48:46 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-12 09:48:46 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-12 09:48:46 - trunc( ... )
2024-07-12 09:48:46 - truncate( ... )
2024-07-12 09:48:46 - String upper(STRING string)
2024-07-12 09:48:46 - Date utc_date
2024-07-12 09:48:46 - Time utc_time
2024-07-12 09:48:46 - Timestamp utc_timestamp
2024-07-12 09:48:46 - Double var_pop(NUMERIC arg)
2024-07-12 09:48:46 - Double var_samp(NUMERIC arg)
2024-07-12 09:48:46 - Double variance(NUMERIC arg)
2024-07-12 09:48:46 - Integer week(DATE arg)
2024-07-12 09:48:46 - Integer year(DATE arg)
2024-07-12 09:48:46 - Starting QueryInterpretationCache(2048)
2024-07-12 09:48:46 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-12 09:48:46 - Configured EntityCopyObserver strategy: disallow
2024-07-12 09:48:46 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-12 09:48:46 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-12 09:48:46 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-12 09:48:46 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-12 09:48:46 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-12 09:48:46 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-12 09:48:46 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:46 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:46 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:46 - Starting post-init callbacks
2024-07-12 09:48:46 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-12 09:48:46 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-12 09:48:46 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-12 09:48:46 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-12 09:48:46 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-12 09:48:46 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-12 09:48:46 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-12 09:48:46 - Created new SQL alias : u1_0
2024-07-12 09:48:46 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-12 09:48:46 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-12 09:48:46 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-12 09:48:46 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-12 09:48:46 -  Version select: select id from users where id=?
2024-07-12 09:48:46 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-12 09:48:46 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-12 09:48:46 -  Delete (0): delete from users where id=?
2024-07-12 09:48:46 - Created new SQL alias : t1_0
2024-07-12 09:48:46 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-12 09:48:46 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4246f904] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-12 09:48:46 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-12 09:48:46 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-12 09:48:46 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-12 09:48:46 -  Version select: select id from task where id=?
2024-07-12 09:48:46 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-12 09:48:46 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-12 09:48:46 -  Delete (0): delete from task where id=?
2024-07-12 09:48:46 - Created new SQL alias : t1_0
2024-07-12 09:48:46 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@24d7c365] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-12 09:48:46 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-12 09:48:46 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@41d8ac75] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-12 09:48:46 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-12 09:48:46 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-12 09:48:46 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-12 09:48:46 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-12 09:48:46 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@41581c3f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@18174bd9]
2024-07-12 09:48:46 - Checking 0 named HQL queries
2024-07-12 09:48:46 - Checking 0 named SQL queries
2024-07-12 09:48:46 - No alter strings for table : task
2024-07-12 09:48:46 - No alter strings for table : users
2024-07-12 09:48:46 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@36e11b60
2024-07-12 09:48:46 - Registering SessionFactory: 43543191-a69e-4868-8b64-3fdffd240f6d (<unnamed>)
2024-07-12 09:48:46 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-12 09:48:46 - Instantiated SessionFactory
2024-07-12 09:48:46 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-12 09:48:46 - Statistics initialized [enabled=false]
2024-07-12 09:48:46 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-12 09:48:47 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-12 09:48:47 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-12 09:48:47 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy138.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-12 09:48:47 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-12 09:48:47 - 

Using generated security password: 83802035-aac0-43cc-a0b7-5dd1af24e876

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-12 09:48:47 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-12 09:48:47 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-12 09:48:47 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-12 09:48:47 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-12 09:48:47 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-12 09:48:47 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-12 09:48:47 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-12 09:48:48 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-12 09:48:48 - Tomcat started on port 8080 (http) with context path '/'
2024-07-12 09:48:48 - Started TaskmanagementApplication in 4.808 seconds (process running for 5.218)
2024-07-12 09:48:49 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-12 09:48:49 - Initializing Servlet 'dispatcherServlet'
2024-07-12 09:48:49 - Detected StandardServletMultipartResolver
2024-07-12 09:48:49 - Detected AcceptHeaderLocaleResolver
2024-07-12 09:48:49 - Detected FixedThemeResolver
2024-07-12 09:48:49 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@30be77cd
2024-07-12 09:48:49 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@69780093
2024-07-12 09:48:49 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-12 09:48:49 - Completed initialization in 1 ms
2024-07-12 09:49:55 - Securing GET /api/users
2024-07-12 09:49:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:49:55 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:49:55 - Securing GET /error
2024-07-12 09:49:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:49:55 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:49:55 - Securing GET /api/users
2024-07-12 09:49:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:49:55 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:49:55 - Securing GET /error
2024-07-12 09:49:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:49:55 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:50:16 - Securing GET /api/users
2024-07-12 09:50:16 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:50:16 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:50:16 - Securing GET /error
2024-07-12 09:50:16 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:50:16 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:50:16 - Securing GET /api/users
2024-07-12 09:50:16 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:50:16 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:50:16 - Securing GET /error
2024-07-12 09:50:16 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:50:16 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:50:24 - Securing GET /api/users
2024-07-12 09:50:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:50:24 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:50:24 - Securing GET /error
2024-07-12 09:50:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:50:24 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:50:24 - Securing GET /api/users
2024-07-12 09:50:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:50:24 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:50:24 - Securing GET /error
2024-07-12 09:50:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:50:24 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:56:50 - Securing GET /api/users
2024-07-12 09:56:50 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:56:50 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:56:50 - Securing GET /error
2024-07-12 09:56:50 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:56:50 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:56:50 - Securing GET /api/users
2024-07-12 09:56:50 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:56:50 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:56:50 - Securing GET /error
2024-07-12 09:56:50 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:56:50 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:35 - Securing GET /api/users
2024-07-12 09:57:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:57:35 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:35 - Securing GET /error
2024-07-12 09:57:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:57:35 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:35 - Securing GET /api/users
2024-07-12 09:57:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:57:35 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:35 - Securing GET /error
2024-07-12 09:57:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:57:35 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:39 - Securing GET /api/users
2024-07-12 09:57:39 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:57:39 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:39 - Securing GET /error
2024-07-12 09:57:39 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:57:39 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:39 - Securing GET /api/users
2024-07-12 09:57:39 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:57:39 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:39 - Securing GET /error
2024-07-12 09:57:39 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 09:57:39 - Pre-authenticated entry point called. Rejecting access
2024-07-12 09:57:55 - Securing OPTIONS /api/users/register
2024-07-12 10:06:13 - Securing GET /api/users
2024-07-12 10:06:13 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:06:13 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:06:13 - Securing GET /error
2024-07-12 10:06:13 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:06:13 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:06:13 - Securing GET /api/users
2024-07-12 10:06:13 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:06:13 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:06:13 - Securing GET /error
2024-07-12 10:06:13 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:06:13 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:07:29 - Securing OPTIONS /api/users/register
2024-07-12 10:15:36 - Securing OPTIONS /api/users/register
2024-07-12 10:15:38 - Securing OPTIONS /api/users/register
2024-07-12 10:15:39 - Securing OPTIONS /api/users/register
2024-07-12 10:15:39 - Securing OPTIONS /api/users/register
2024-07-12 10:15:39 - Securing OPTIONS /api/users/register
2024-07-12 10:26:14 - Securing GET /api/users
2024-07-12 10:26:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:26:14 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:26:14 - Securing GET /error
2024-07-12 10:26:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:26:14 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:26:14 - Securing GET /api/users
2024-07-12 10:26:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:26:14 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:26:14 - Securing GET /error
2024-07-12 10:26:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:26:14 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:26:58 - Securing GET /api/users
2024-07-12 10:26:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:26:58 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:26:58 - Securing GET /error
2024-07-12 10:26:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:26:58 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:26:58 - Securing GET /api/users
2024-07-12 10:26:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:26:58 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:26:58 - Securing GET /error
2024-07-12 10:26:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:26:58 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:33:14 - Securing GET /api/users
2024-07-12 10:33:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:33:14 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:33:14 - Securing GET /error
2024-07-12 10:33:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:33:14 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:33:14 - Securing GET /api/users
2024-07-12 10:33:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:33:14 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:33:14 - Securing GET /error
2024-07-12 10:33:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:33:14 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:33:17 - Securing GET /api/users
2024-07-12 10:33:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:33:17 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:33:17 - Securing GET /error
2024-07-12 10:33:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:33:17 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:33:17 - Securing GET /api/users
2024-07-12 10:33:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:33:17 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:33:17 - Securing GET /error
2024-07-12 10:33:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:33:17 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:36:07 - Securing OPTIONS /api/users/register
2024-07-12 10:37:03 - Securing OPTIONS /api/users/register
2024-07-12 10:37:57 - Securing POST /api/users/register
2024-07-12 10:37:57 - Secured POST /api/users/register
2024-07-12 10:37:57 - POST "/api/users/register", parameters={}
2024-07-12 10:37:57 - Mapped to com.example.taskmanagement.controller.UserController#registerUser(User)
2024-07-12 10:37:58 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@4ef0d616]
2024-07-12 10:37:58 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-12 10:37:58 - begin
2024-07-12 10:37:58 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-12 10:37:58 - Executing identity-insert immediately
2024-07-12 10:37:58 - insert into users (email,password,username) values (?,?,?)
2024-07-12 10:37:58 - Initializer list is empty
2024-07-12 10:37:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@5458c0d1
2024-07-12 10:37:58 - Extracted JDBC value [0] - [2]
2024-07-12 10:37:58 - Extracted generated values [com.example.taskmanagement.model.User]: [Ljava.lang.Object;@4ba9d156
2024-07-12 10:37:58 - committing
2024-07-12 10:37:58 - Processing flush-time cascades
2024-07-12 10:37:58 - Dirty checking collections
2024-07-12 10:37:58 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-07-12 10:37:58 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-12 10:37:58 - Listing entities:
2024-07-12 10:37:58 - com.example.taskmanagement.model.User{password=$2a$10$7E5keT9MSHsolTj6jYhds./graXoDQyCsfVKcMCYtuTHvwVyqJaAW, id=2, email=ohchch@example.com, tasks=null, username=ohchch}
2024-07-12 10:37:58 - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2024-07-12 10:37:58 - Writing [com.example.taskmanagement.model.User@4ef0d616]
2024-07-12 10:37:58 - Completed 200 OK
2024-07-12 10:37:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:44:56 - Securing GET /api/users
2024-07-12 10:44:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:44:56 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:44:56 - Securing GET /error
2024-07-12 10:44:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:44:56 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:44:56 - Securing GET /api/users
2024-07-12 10:44:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:44:56 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:44:56 - Securing GET /error
2024-07-12 10:44:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:44:56 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:45:27 - Securing GET /api/users
2024-07-12 10:45:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:45:27 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:45:27 - Securing GET /error
2024-07-12 10:45:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:45:27 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:45:27 - Securing GET /api/users
2024-07-12 10:45:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:45:27 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:45:27 - Securing GET /error
2024-07-12 10:45:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:45:27 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:46:15 - Securing GET /api/users
2024-07-12 10:46:15 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:46:15 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:46:15 - Securing GET /error
2024-07-12 10:46:15 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:46:15 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:46:15 - Securing GET /api/users
2024-07-12 10:46:15 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:46:15 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:46:15 - Securing GET /error
2024-07-12 10:46:15 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:46:15 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:47:50 - Securing GET /api/users
2024-07-12 10:47:50 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:47:50 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:47:50 - Securing GET /error
2024-07-12 10:47:50 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:47:50 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:47:50 - Securing GET /api/users
2024-07-12 10:47:50 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:47:50 - Pre-authenticated entry point called. Rejecting access
2024-07-12 10:47:50 - Securing GET /error
2024-07-12 10:47:50 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-12 10:47:50 - Pre-authenticated entry point called. Rejecting access
2024-07-15 10:55:23 - Starting TaskmanagementApplication using Java 22.0.1 with PID 35560 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-15 10:55:23 - No active profile set, falling back to 1 default profile: "default"
2024-07-15 10:55:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-15 10:55:24 - Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
2024-07-15 10:55:25 - Tomcat initialized with port 8080 (http)
2024-07-15 10:55:25 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-15 10:55:25 - Starting service [Tomcat]
2024-07-15 10:55:25 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-15 10:55:25 - Initializing Spring embedded WebApplicationContext
2024-07-15 10:55:25 - Root WebApplicationContext: initialization completed in 2112 ms
2024-07-15 10:55:26 - Filter 'webMvcObservationFilter' configured for use
2024-07-15 10:55:26 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-15 10:55:26 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-15 10:55:26 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-15 10:55:26 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-15 10:55:26 - HHH000206: 'hibernate.properties' not found
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-15 10:55:26 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-15 10:55:26 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-15 10:55:26 - HHH000026: Second-level cache disabled
2024-07-15 10:55:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-15 10:55:26 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-15 10:55:26 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-15 10:55:26 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-15 10:55:26 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-15 10:55:26 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-15 10:55:26 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-15 10:55:26 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-15 10:55:26 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-15 10:55:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-15 10:55:26 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-15 10:55:26 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-15 10:55:26 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-15 10:55:26 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-15 10:55:26 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-15 10:55:26 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-15 10:55:26 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-15 10:55:26 - Adding type registration image -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-15 10:55:26 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-15 10:55:26 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-15 10:55:26 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-15 10:55:26 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-15 10:55:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-15 10:55:26 - Adding type registration short -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-15 10:55:26 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-15 10:55:26 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-15 10:55:26 - Adding type registration int -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-15 10:55:26 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-15 10:55:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-15 10:55:26 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-15 10:55:26 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-15 10:55:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-15 10:55:26 - Adding type registration float -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-15 10:55:26 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-15 10:55:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-15 10:55:26 - Adding type registration double -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-15 10:55:26 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-15 10:55:26 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-15 10:55:26 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-15 10:55:26 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-15 10:55:26 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-15 10:55:26 - Adding type registration character -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-15 10:55:26 - Adding type registration char -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-15 10:55:26 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-15 10:55:26 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-15 10:55:26 - Adding type registration string -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-15 10:55:26 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-15 10:55:26 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-15 10:55:26 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-15 10:55:26 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-15 10:55:26 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-15 10:55:26 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-15 10:55:26 - Adding type registration text -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-15 10:55:26 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-15 10:55:26 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-15 10:55:26 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-15 10:55:26 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-15 10:55:26 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-15 10:55:26 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-15 10:55:26 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-15 10:55:26 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-15 10:55:26 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-15 10:55:26 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@42503099
2024-07-15 10:55:26 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-15 10:55:26 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@60844992
2024-07-15 10:55:26 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@60844992
2024-07-15 10:55:26 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-15 10:55:26 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-15 10:55:26 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-15 10:55:26 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-15 10:55:26 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@39514976
2024-07-15 10:55:26 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@39514976
2024-07-15 10:55:26 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7bdb4f17
2024-07-15 10:55:26 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7bdb4f17
2024-07-15 10:55:26 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77856cc5
2024-07-15 10:55:26 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1fbd5e0
2024-07-15 10:55:26 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-15 10:55:26 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-15 10:55:26 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@135064ea
2024-07-15 10:55:26 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4f6fd101
2024-07-15 10:55:26 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@106459d9
2024-07-15 10:55:26 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@33a71d23
2024-07-15 10:55:26 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@33a71d23
2024-07-15 10:55:26 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@23c05889
2024-07-15 10:55:26 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@12166229
2024-07-15 10:55:26 - Adding type registration date -> org.hibernate.type.BasicTypeReference@208e5b23
2024-07-15 10:55:26 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@208e5b23
2024-07-15 10:55:26 - Adding type registration time -> org.hibernate.type.BasicTypeReference@2bcb1414
2024-07-15 10:55:26 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2bcb1414
2024-07-15 10:55:26 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@aee05f4
2024-07-15 10:55:26 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@aee05f4
2024-07-15 10:55:26 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@aee05f4
2024-07-15 10:55:26 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2b4829aa
2024-07-15 10:55:26 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2b4829aa
2024-07-15 10:55:26 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2b4829aa
2024-07-15 10:55:26 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@794d28a3
2024-07-15 10:55:26 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@a55e82a
2024-07-15 10:55:26 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@70ee9d31
2024-07-15 10:55:26 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@70ee9d31
2024-07-15 10:55:26 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1a01ffff
2024-07-15 10:55:26 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1a01ffff
2024-07-15 10:55:26 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1a01ffff
2024-07-15 10:55:26 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@a99c42c
2024-07-15 10:55:26 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2fa879ed
2024-07-15 10:55:26 - Adding type registration class -> org.hibernate.type.BasicTypeReference@2b2b7e3c
2024-07-15 10:55:26 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2b2b7e3c
2024-07-15 10:55:26 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ec082a1
2024-07-15 10:55:26 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ec082a1
2024-07-15 10:55:26 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ec082a1
2024-07-15 10:55:26 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@16b7e04a
2024-07-15 10:55:26 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@16b7e04a
2024-07-15 10:55:26 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@661db63e
2024-07-15 10:55:26 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@661db63e
2024-07-15 10:55:26 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5cf2f5d6
2024-07-15 10:55:26 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5cf2f5d6
2024-07-15 10:55:26 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@429f0ca8
2024-07-15 10:55:26 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@429f0ca8
2024-07-15 10:55:26 - Adding type registration url -> org.hibernate.type.BasicTypeReference@6b030101
2024-07-15 10:55:26 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6b030101
2024-07-15 10:55:26 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@60a4e619
2024-07-15 10:55:26 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2bb3f39e
2024-07-15 10:55:26 - Adding type registration object -> org.hibernate.type.JavaObjectType@342723a3
2024-07-15 10:55:26 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@342723a3
2024-07-15 10:55:26 - Adding type registration null -> org.hibernate.type.NullType@b34c7c9
2024-07-15 10:55:26 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5b490d5e
2024-07-15 10:55:26 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1f6c4ae
2024-07-15 10:55:26 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@26270b77
2024-07-15 10:55:26 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@b808af5
2024-07-15 10:55:26 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@18b04526
2024-07-15 10:55:26 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2fd4312a
2024-07-15 10:55:26 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@31b6fb14
2024-07-15 10:55:26 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3eee08f5
2024-07-15 10:55:26 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6cd7f381] into BootstrapContext; was [null]
2024-07-15 10:55:26 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6cd7f381) [was null]
2024-07-15 10:55:26 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@402f61f5] into BootstrapContext; was [null]
2024-07-15 10:55:26 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6480a063] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2f6f4ac4]
2024-07-15 10:55:26 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-15 10:55:26 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6cd7f381]
2024-07-15 10:55:26 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6cd7f381]
2024-07-15 10:55:26 - HikariPool-1 - Starting...
2024-07-15 10:55:26 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c4c7e51
2024-07-15 10:55:26 - HikariPool-1 - Start completed.
2024-07-15 10:55:26 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-15 10:55:26 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-15 10:55:26 - JDBC version : 4.2
2024-07-15 10:55:26 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-15 10:55:26 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-15 10:55:26 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-15 10:55:26 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-15 10:55:26 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-15 10:55:26 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b994617) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@807c1e8)
2024-07-15 10:55:26 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4eb5764d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54f9326c)
2024-07-15 10:55:26 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5016f1a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@33bfe6d3)
2024-07-15 10:55:26 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56dde9f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b2acb12)
2024-07-15 10:55:26 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@455d04d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@998fbd4)
2024-07-15 10:55:26 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@30333941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d5c160e)
2024-07-15 10:55:26 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8afce3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e02f17d)
2024-07-15 10:55:26 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@675230cd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a73a64f)
2024-07-15 10:55:26 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7dc92a06) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2419a5db)
2024-07-15 10:55:26 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-15 10:55:26 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-15 10:55:26 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-15 10:55:26 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-15 10:55:26 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-15 10:55:26 - Adding type registration null -> org.hibernate.type.NullType@17477bbb
2024-07-15 10:55:26 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@b34c7c9`
2024-07-15 10:55:26 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-15 10:55:26 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-15 10:55:26 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-15 10:55:26 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-15 10:55:26 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-15 10:55:26 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-15 10:55:26 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-15 10:55:26 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-15 10:55:26 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-15 10:55:26 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-15 10:55:26 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-15 10:55:26 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-15 10:55:26 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@767d9b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@593f7d2e]
2024-07-15 10:55:26 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-15 10:55:27 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-15 10:55:27 - Import with entity name Task
2024-07-15 10:55:27 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-15 10:55:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-15 10:55:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-15 10:55:27 - MetadataSourceProcessor property id with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-15 10:55:27 - building BasicValue for id
2024-07-15 10:55:27 - Skipping column re-registration: task.id
2024-07-15 10:55:27 - Building property id
2024-07-15 10:55:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property category with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-15 10:55:27 - building BasicValue for category
2024-07-15 10:55:27 - Skipping column re-registration: task.category
2024-07-15 10:55:27 - Building property category
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-15 10:55:27 - building BasicValue for createdAt
2024-07-15 10:55:27 - Skipping column re-registration: task.created_at
2024-07-15 10:55:27 - Building property createdAt
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property description with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-15 10:55:27 - building BasicValue for description
2024-07-15 10:55:27 - Skipping column re-registration: task.description
2024-07-15 10:55:27 - Building property description
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property priority with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-15 10:55:27 - building BasicValue for priority
2024-07-15 10:55:27 - Skipping column re-registration: task.priority
2024-07-15 10:55:27 - Building property priority
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property title with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-15 10:55:27 - building BasicValue for title
2024-07-15 10:55:27 - Skipping column re-registration: task.title
2024-07-15 10:55:27 - Building property title
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-15 10:55:27 - building BasicValue for updatedAt
2024-07-15 10:55:27 - Skipping column re-registration: task.updated_at
2024-07-15 10:55:27 - Building property updatedAt
2024-07-15 10:55:27 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - Building property user
2024-07-15 10:55:27 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-15 10:55:27 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-15 10:55:27 - Import with entity name User
2024-07-15 10:55:27 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-15 10:55:27 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-15 10:55:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-15 10:55:27 - MetadataSourceProcessor property id with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-15 10:55:27 - building BasicValue for id
2024-07-15 10:55:27 - Skipping column re-registration: users.id
2024-07-15 10:55:27 - Building property id
2024-07-15 10:55:27 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property email with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-15 10:55:27 - building BasicValue for email
2024-07-15 10:55:27 - Skipping column re-registration: users.email
2024-07-15 10:55:27 - Building property email
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property password with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-15 10:55:27 - building BasicValue for password
2024-07-15 10:55:27 - Skipping column re-registration: users.password
2024-07-15 10:55:27 - Building property password
2024-07-15 10:55:27 - Binding column: AnnotatedJoinColumn()
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-15 10:55:27 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-15 10:55:27 - Binding column: AnnotatedJoinColumn()
2024-07-15 10:55:27 - Binding column: AnnotatedJoinColumn()
2024-07-15 10:55:27 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-15 10:55:27 - Building property tasks
2024-07-15 10:55:27 - Binding column: AnnotatedColumn()
2024-07-15 10:55:27 - MetadataSourceProcessor property username with lazy=false
2024-07-15 10:55:27 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-15 10:55:27 - building BasicValue for username
2024-07-15 10:55:27 - Skipping column re-registration: users.username
2024-07-15 10:55:27 - Building property username
2024-07-15 10:55:27 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-15 10:55:27 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-15 10:55:27 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-15 10:55:27 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-15 10:55:27 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-15 10:55:27 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-15 10:55:27 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-15 10:55:27 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-15 10:55:27 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-15 10:55:27 - Building session factory
2024-07-15 10:55:27 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-15 10:55:27 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@19855799, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@bd09a26, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.16185473929667370948, com.sun.management.jmxremote.port=57186, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=35560, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.16185473929667370948, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5020b59f, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-15 10:55:27 - Session factory constructed with filter configurations : {}
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7fc5a558] under count; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2fd8b081] under every; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2fe38b73] under any; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b5d1d9] under sinh; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@703a2bc9] under cosh; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@790d629a] under tanh; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@346e5cc] under pi; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cd2c764] under log; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-15 10:55:27 - Registering alternate key : length -> character_length
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@737445ab] under position; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@29d29657] under overlay; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@44428583] under trim; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@1a7437d8] under cast; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f695077] under collate; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1e160a9e] under extract; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@54780c40] under ifnull; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@68f1b89] under pad; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@a11efe6] under str; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2aac87ab] under format; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@453439e] under timestampadd; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@446981a4] under timestampdiff; prior registration was null
2024-07-15 10:55:27 - Registering alternate key : dateadd -> timestampadd
2024-07-15 10:55:27 - Registering alternate key : datediff -> timestampdiff
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@680937c9] under current_date; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77ad2767] under current_time; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e460ca1] under current_timestamp; prior registration was null
2024-07-15 10:55:27 - Registering alternate key : current date -> current_date
2024-07-15 10:55:27 - Registering alternate key : current time -> current_time
2024-07-15 10:55:27 - Registering alternate key : current timestamp -> current_timestamp
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@411ae0d7] under local_date; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@608c2042] under local_time; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e84a52b] under local_datetime; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@40199d5e] under offset_datetime; prior registration was null
2024-07-15 10:55:27 - Registering alternate key : local date -> local_date
2024-07-15 10:55:27 - Registering alternate key : local time -> local_time
2024-07-15 10:55:27 - Registering alternate key : local datetime -> local_datetime
2024-07-15 10:55:27 - Registering alternate key : offset datetime -> offset_datetime
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5693d1d2] under instant; prior registration was null
2024-07-15 10:55:27 - Registering alternate key : current_instant -> instant
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4840ec68] under sql; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cd2c764
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@43dddfdd] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@22c0344e] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-15 10:55:27 - Registering alternate key : day -> dayofmonth
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7267006e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@737445ab
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7a7f2247] under trunc; prior registration was null
2024-07-15 10:55:27 - Registering alternate key : truncate -> trunc
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4946dfde] under bitand; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77972964] under bitor; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@794f937a] under bitxor; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aa1fb0e] under bitnot; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5e663ab] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2aac87ab
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@608c2042
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7e84a52b
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b74a67a] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@346e5cc
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4e25282d] under chr; prior registration was null
2024-07-15 10:55:27 - Registering alternate key : char -> chr
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b29d36c] under sysdate; prior registration was null
2024-07-15 10:55:27 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@71891d6b] under listagg; prior registration was null
2024-07-15 10:55:27 - abs(NUMERIC arg)
2024-07-15 10:55:27 - Double acos(NUMERIC arg)
2024-07-15 10:55:27 - adddate(DATE datetime, INTEGER days)
2024-07-15 10:55:27 - addtime(TIME datetime, TIME time)
2024-07-15 10:55:27 - Boolean any(BOOLEAN arg)
2024-07-15 10:55:27 - Integer ascii(STRING arg)
2024-07-15 10:55:27 - Double asin(NUMERIC arg)
2024-07-15 10:55:27 - Double atan(NUMERIC arg)
2024-07-15 10:55:27 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-15 10:55:27 - avg(arg)
2024-07-15 10:55:27 - bit_and(arg)
2024-07-15 10:55:27 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-15 10:55:27 - bit_or(arg)
2024-07-15 10:55:27 - bitand(arg0, arg1)
2024-07-15 10:55:27 - bitnot(arg)
2024-07-15 10:55:27 - bitor(arg0, arg1)
2024-07-15 10:55:27 - bitxor(arg0, arg1)
2024-07-15 10:55:27 - cast(arg as Type)
2024-07-15 10:55:27 - ceiling(NUMERIC arg)
2024-07-15 10:55:27 - Character char(INTEGER arg)
2024-07-15 10:55:27 - Integer character_length(STRING_OR_CLOB arg)
2024-07-15 10:55:27 - Character chr(INTEGER arg)
2024-07-15 10:55:27 - coalesce(arg0[, arg1[, ...]])
2024-07-15 10:55:27 - String collate(STRING string as COLLATION collation)
2024-07-15 10:55:27 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-15 10:55:27 - Double cos(NUMERIC arg)
2024-07-15 10:55:27 - Double cosh(NUMERIC arg)
2024-07-15 10:55:27 - Double cot(NUMERIC arg)
2024-07-15 10:55:27 - Long count([distinct ]{arg|*})
2024-07-15 10:55:27 - Integer crc32(arg)
2024-07-15 10:55:27 - Date curdate()
2024-07-15 10:55:27 - Date current date
2024-07-15 10:55:27 - Time current time
2024-07-15 10:55:27 - Timestamp current timestamp
2024-07-15 10:55:27 - Date current_date
2024-07-15 10:55:27 - Instant current_instant
2024-07-15 10:55:27 - Time current_time
2024-07-15 10:55:27 - Timestamp current_timestamp
2024-07-15 10:55:27 - Time curtime()
2024-07-15 10:55:27 - Date date(arg)
2024-07-15 10:55:27 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-15 10:55:27 - Integer datediff(DATE end, DATE start)
2024-07-15 10:55:27 - Integer day(DATE arg)
2024-07-15 10:55:27 - String dayname(DATE arg)
2024-07-15 10:55:27 - Integer dayofmonth(DATE arg)
2024-07-15 10:55:27 - Integer dayofweek(DATE arg)
2024-07-15 10:55:27 - Integer dayofyear(DATE arg)
2024-07-15 10:55:27 - Double degrees(NUMERIC arg)
2024-07-15 10:55:27 - Boolean every(BOOLEAN arg)
2024-07-15 10:55:27 - Double exp(NUMERIC arg)
2024-07-15 10:55:27 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-15 10:55:27 - floor(NUMERIC arg)
2024-07-15 10:55:27 - String format(TEMPORAL datetime as STRING pattern)
2024-07-15 10:55:27 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-15 10:55:27 - Integer hour(TIME arg)
2024-07-15 10:55:27 - ifnull(arg0, arg1)
2024-07-15 10:55:27 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-15 10:55:27 - Instant instant
2024-07-15 10:55:27 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-15 10:55:27 - Date last_day(DATE arg)
2024-07-15 10:55:27 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-15 10:55:27 - String left(STRING string, INTEGER length)
2024-07-15 10:55:27 - Integer length(STRING_OR_CLOB arg)
2024-07-15 10:55:27 - String listagg(STRING arg0, STRING arg1)
2024-07-15 10:55:27 - Double ln(NUMERIC arg)
2024-07-15 10:55:27 - LocalDate local date
2024-07-15 10:55:27 - LocalDateTime local datetime
2024-07-15 10:55:27 - LocalTime local time
2024-07-15 10:55:27 - LocalDate local_date
2024-07-15 10:55:27 - LocalDateTime local_datetime
2024-07-15 10:55:27 - LocalTime local_time
2024-07-15 10:55:27 - Timestamp localtime
2024-07-15 10:55:27 - Timestamp localtimestamp
2024-07-15 10:55:27 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-15 10:55:27 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-15 10:55:27 - Double log10(NUMERIC arg)
2024-07-15 10:55:27 - Double log2(NUMERIC arg)
2024-07-15 10:55:27 - String lower(STRING string)
2024-07-15 10:55:27 - String lpad(string, length[, padding])
2024-07-15 10:55:27 - String ltrim(STRING string[, STRING characters])
2024-07-15 10:55:27 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-15 10:55:27 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-15 10:55:27 - max(COMPARABLE arg)
2024-07-15 10:55:27 - String md5(arg)
2024-07-15 10:55:27 - Integer microsecond(TIME arg)
2024-07-15 10:55:27 - min(COMPARABLE arg)
2024-07-15 10:55:27 - Integer minute(TIME arg)
2024-07-15 10:55:27 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-15 10:55:27 - Integer month(DATE arg)
2024-07-15 10:55:27 - String monthname(DATE arg)
2024-07-15 10:55:27 - Timestamp now()
2024-07-15 10:55:27 - nullif(arg0, arg1)
2024-07-15 10:55:27 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-15 10:55:27 - OffsetDateTime offset datetime
2024-07-15 10:55:27 - OffsetDateTime offset_datetime
2024-07-15 10:55:27 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-15 10:55:27 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-15 10:55:27 - Double pi
2024-07-15 10:55:27 - Integer position(STRING pattern in STRING string)
2024-07-15 10:55:27 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-15 10:55:27 - Integer quarter(DATE arg)
2024-07-15 10:55:27 - Double radians(NUMERIC arg)
2024-07-15 10:55:27 - Double rand([INTEGER seed])
2024-07-15 10:55:27 - String repeat(STRING string, INTEGER times)
2024-07-15 10:55:27 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-15 10:55:27 - String reverse(STRING arg)
2024-07-15 10:55:27 - String right(STRING string, INTEGER length)
2024-07-15 10:55:27 - round(NUMERIC number[, INTEGER places])
2024-07-15 10:55:27 - String rpad(string, length[, padding])
2024-07-15 10:55:27 - String rtrim(STRING string[, STRING characters])
2024-07-15 10:55:27 - Integer second(TIME arg)
2024-07-15 10:55:27 - String sha(arg)
2024-07-15 10:55:27 - String sha1(arg)
2024-07-15 10:55:27 - String sha2(arg0, arg1)
2024-07-15 10:55:27 - Integer sign(NUMERIC arg)
2024-07-15 10:55:27 - Double sin(NUMERIC arg)
2024-07-15 10:55:27 - Double sinh(NUMERIC arg)
2024-07-15 10:55:27 - String soundex(arg)
2024-07-15 10:55:27 - String space(INTEGER arg)
2024-07-15 10:55:27 - Object sql
2024-07-15 10:55:27 - Double sqrt(NUMERIC arg)
2024-07-15 10:55:27 - Double stddev(NUMERIC arg)
2024-07-15 10:55:27 - Double stddev_pop(NUMERIC arg)
2024-07-15 10:55:27 - Double stddev_samp(NUMERIC arg)
2024-07-15 10:55:27 - String str(arg)
2024-07-15 10:55:27 - subdate(DATE datetime, INTEGER days)
2024-07-15 10:55:27 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-15 10:55:27 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-15 10:55:27 - subtime(TIME datetime, TIME time)
2024-07-15 10:55:27 - sum(arg)
2024-07-15 10:55:27 - Timestamp sysdate()
2024-07-15 10:55:27 - Double tan(NUMERIC arg)
2024-07-15 10:55:27 - Double tanh(NUMERIC arg)
2024-07-15 10:55:27 - String time(arg)
2024-07-15 10:55:27 - Timestamp timestamp(arg0[, arg1])
2024-07-15 10:55:27 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-15 10:55:27 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-15 10:55:27 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-15 10:55:27 - trunc( ... )
2024-07-15 10:55:27 - truncate( ... )
2024-07-15 10:55:27 - String upper(STRING string)
2024-07-15 10:55:27 - Date utc_date
2024-07-15 10:55:27 - Time utc_time
2024-07-15 10:55:27 - Timestamp utc_timestamp
2024-07-15 10:55:27 - Double var_pop(NUMERIC arg)
2024-07-15 10:55:27 - Double var_samp(NUMERIC arg)
2024-07-15 10:55:27 - Double variance(NUMERIC arg)
2024-07-15 10:55:27 - Integer week(DATE arg)
2024-07-15 10:55:27 - Integer year(DATE arg)
2024-07-15 10:55:27 - Starting QueryInterpretationCache(2048)
2024-07-15 10:55:27 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-15 10:55:27 - Configured EntityCopyObserver strategy: disallow
2024-07-15 10:55:27 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-15 10:55:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-15 10:55:27 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-15 10:55:27 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-15 10:55:27 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-15 10:55:27 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-15 10:55:27 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-15 10:55:27 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-15 10:55:27 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-15 10:55:27 - Starting post-init callbacks
2024-07-15 10:55:27 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-15 10:55:27 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-15 10:55:27 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-15 10:55:27 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-15 10:55:27 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-15 10:55:27 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-15 10:55:27 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-15 10:55:27 - Created new SQL alias : u1_0
2024-07-15 10:55:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-15 10:55:27 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-15 10:55:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-15 10:55:27 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-15 10:55:27 -  Version select: select id from users where id=?
2024-07-15 10:55:27 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-15 10:55:27 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-15 10:55:27 -  Delete (0): delete from users where id=?
2024-07-15 10:55:27 - Created new SQL alias : t1_0
2024-07-15 10:55:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-15 10:55:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@76efa2b7] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-15 10:55:27 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-15 10:55:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-15 10:55:27 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-15 10:55:27 -  Version select: select id from task where id=?
2024-07-15 10:55:27 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-15 10:55:27 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-15 10:55:27 -  Delete (0): delete from task where id=?
2024-07-15 10:55:27 - Created new SQL alias : t1_0
2024-07-15 10:55:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6c2a33af] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-15 10:55:27 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-15 10:55:27 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@75c45c4b] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-15 10:55:27 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-15 10:55:27 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-15 10:55:27 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-15 10:55:27 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-15 10:55:27 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@767d9b9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7e864fa4]
2024-07-15 10:55:27 - Checking 0 named HQL queries
2024-07-15 10:55:27 - Checking 0 named SQL queries
2024-07-15 10:55:27 - No alter strings for table : task
2024-07-15 10:55:27 - No alter strings for table : users
2024-07-15 10:55:27 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@72e4ffa2
2024-07-15 10:55:27 - Registering SessionFactory: 47dbd247-ddd8-4613-8636-c314f2a492d0 (<unnamed>)
2024-07-15 10:55:27 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-15 10:55:27 - Instantiated SessionFactory
2024-07-15 10:55:27 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-15 10:55:27 - Statistics initialized [enabled=false]
2024-07-15 10:55:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-15 10:55:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-15 10:55:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-15 10:55:28 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-15 10:55:28 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-15 10:55:28 - 

Using generated security password: a4ca6b94-5240-425e-bb45-1148401e7111

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-15 10:55:28 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-15 10:55:28 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-15 10:55:28 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-15 10:55:28 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-15 10:55:29 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-15 10:55:29 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-15 10:55:29 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-15 10:55:29 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-15 10:55:29 - Tomcat started on port 8080 (http) with context path '/'
2024-07-15 10:55:29 - Started TaskmanagementApplication in 6.487 seconds (process running for 7.179)
2024-07-15 10:55:32 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-15 10:55:32 - Initializing Servlet 'dispatcherServlet'
2024-07-15 10:55:32 - Detected StandardServletMultipartResolver
2024-07-15 10:55:32 - Detected AcceptHeaderLocaleResolver
2024-07-15 10:55:32 - Detected FixedThemeResolver
2024-07-15 10:55:32 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1507bc3
2024-07-15 10:55:32 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@442e7215
2024-07-15 10:55:32 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-15 10:55:32 - Completed initialization in 3 ms
2024-07-15 10:56:41 - Securing DELETE /api/tasks/2/
2024-07-15 10:56:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-15 10:56:41 - Saved request http://localhost:8080/api/tasks/2/?continue to session
2024-07-15 10:56:41 - Pre-authenticated entry point called. Rejecting access
2024-07-15 10:56:41 - Securing DELETE /error
2024-07-15 10:56:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-15 10:56:41 - Saved request http://localhost:8080/error?continue to session
2024-07-15 10:56:41 - Pre-authenticated entry point called. Rejecting access
2024-07-16 09:35:38 - Starting TaskmanagementApplication using Java 22.0.1 with PID 13900 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-16 09:35:38 - No active profile set, falling back to 1 default profile: "default"
2024-07-16 09:35:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-16 09:35:39 - Finished Spring Data repository scanning in 43 ms. Found 2 JPA repository interfaces.
2024-07-16 09:35:40 - Tomcat initialized with port 8080 (http)
2024-07-16 09:35:40 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-16 09:35:40 - Starting service [Tomcat]
2024-07-16 09:35:40 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-16 09:35:40 - Initializing Spring embedded WebApplicationContext
2024-07-16 09:35:40 - Root WebApplicationContext: initialization completed in 1788 ms
2024-07-16 09:35:40 - Filter 'webMvcObservationFilter' configured for use
2024-07-16 09:35:40 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-16 09:35:40 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-16 09:35:40 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-16 09:35:40 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-16 09:35:40 - HHH000206: 'hibernate.properties' not found
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-16 09:35:40 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-16 09:35:40 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-16 09:35:40 - HHH000026: Second-level cache disabled
2024-07-16 09:35:40 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-16 09:35:40 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-16 09:35:40 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-07-16 09:35:40 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-16 09:35:40 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@42401b81
2024-07-16 09:35:40 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-16 09:35:40 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@f1d1463
2024-07-16 09:35:40 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-16 09:35:40 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@47ef5a33
2024-07-16 09:35:40 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-16 09:35:40 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-16 09:35:40 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6a278584
2024-07-16 09:35:40 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-16 09:35:40 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-16 09:35:40 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-16 09:35:40 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-16 09:35:40 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-16 09:35:40 - Adding type registration image -> org.hibernate.type.BasicTypeReference@72a34537
2024-07-16 09:35:40 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-16 09:35:40 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-16 09:35:40 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-16 09:35:40 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-16 09:35:40 - Adding type registration short -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-16 09:35:40 - Adding type registration short -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-16 09:35:40 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-16 09:35:40 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@35536760
2024-07-16 09:35:40 - Adding type registration int -> org.hibernate.type.BasicTypeReference@35536760
2024-07-16 09:35:40 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@35536760
2024-07-16 09:35:40 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-16 09:35:40 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-16 09:35:40 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-16 09:35:40 - Adding type registration float -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-16 09:35:40 - Adding type registration float -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-16 09:35:40 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-16 09:35:40 - Adding type registration double -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-16 09:35:40 - Adding type registration double -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-16 09:35:40 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-16 09:35:40 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-16 09:35:40 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-16 09:35:40 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-16 09:35:40 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-16 09:35:40 - Adding type registration character -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-16 09:35:40 - Adding type registration char -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-16 09:35:40 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-16 09:35:40 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-16 09:35:40 - Adding type registration string -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-16 09:35:40 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-16 09:35:40 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-16 09:35:40 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-16 09:35:40 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-16 09:35:40 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-16 09:35:40 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-16 09:35:40 - Adding type registration text -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-16 09:35:40 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-16 09:35:40 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-16 09:35:40 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-16 09:35:40 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-16 09:35:40 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-16 09:35:40 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-16 09:35:40 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-16 09:35:40 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-16 09:35:40 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-16 09:35:40 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-16 09:35:40 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-16 09:35:40 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-16 09:35:40 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-16 09:35:40 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-16 09:35:40 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-16 09:35:40 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-16 09:35:40 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-16 09:35:40 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-16 09:35:40 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-16 09:35:40 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-16 09:35:40 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-16 09:35:40 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-16 09:35:40 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-16 09:35:40 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-16 09:35:40 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-16 09:35:40 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-16 09:35:40 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-16 09:35:40 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-16 09:35:40 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-16 09:35:40 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-16 09:35:40 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-16 09:35:40 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-16 09:35:40 - Adding type registration date -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-16 09:35:40 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-16 09:35:40 - Adding type registration time -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-16 09:35:40 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-16 09:35:40 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-16 09:35:40 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-16 09:35:40 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-16 09:35:40 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-16 09:35:40 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-16 09:35:40 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-16 09:35:40 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-16 09:35:40 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-16 09:35:40 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-16 09:35:40 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-16 09:35:40 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-16 09:35:40 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-16 09:35:40 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-16 09:35:40 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-16 09:35:40 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-16 09:35:40 - Adding type registration class -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-16 09:35:40 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-16 09:35:40 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-16 09:35:40 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-16 09:35:40 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-16 09:35:40 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-16 09:35:40 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-16 09:35:40 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-16 09:35:40 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-16 09:35:40 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-16 09:35:40 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-16 09:35:40 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-16 09:35:40 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-16 09:35:40 - Adding type registration url -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-16 09:35:40 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-16 09:35:40 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-16 09:35:40 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-16 09:35:40 - Adding type registration object -> org.hibernate.type.JavaObjectType@4d065e1a
2024-07-16 09:35:40 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4d065e1a
2024-07-16 09:35:40 - Adding type registration null -> org.hibernate.type.NullType@3de88f64
2024-07-16 09:35:40 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4e8afdad
2024-07-16 09:35:40 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@79b8ecb
2024-07-16 09:35:40 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3722f39d
2024-07-16 09:35:40 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4ec8d9b2
2024-07-16 09:35:40 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@57b63253
2024-07-16 09:35:40 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@c0013b8
2024-07-16 09:35:40 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2c1ea7be
2024-07-16 09:35:40 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2493eec6
2024-07-16 09:35:40 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@fde487b] into BootstrapContext; was [null]
2024-07-16 09:35:40 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@fde487b) [was null]
2024-07-16 09:35:40 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@b34c7c9] into BootstrapContext; was [null]
2024-07-16 09:35:40 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5b490d5e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1f6c4ae]
2024-07-16 09:35:41 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-16 09:35:41 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@fde487b]
2024-07-16 09:35:41 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@fde487b]
2024-07-16 09:35:41 - HikariPool-1 - Starting...
2024-07-16 09:35:41 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6c9e74f3
2024-07-16 09:35:41 - HikariPool-1 - Start completed.
2024-07-16 09:35:41 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-16 09:35:41 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-16 09:35:41 - JDBC version : 4.2
2024-07-16 09:35:41 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-16 09:35:41 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-16 09:35:41 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-16 09:35:41 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-16 09:35:41 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-16 09:35:41 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ddac0b6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@446a5aa5)
2024-07-16 09:35:41 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@628bcf2c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b76251c)
2024-07-16 09:35:41 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@20c283b4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@366b4a7b)
2024-07-16 09:35:41 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a251135) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@70819ba8)
2024-07-16 09:35:41 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@446a692f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@283ecb4b)
2024-07-16 09:35:41 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a30dbc0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76104df5)
2024-07-16 09:35:41 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61246109) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f9e8af5)
2024-07-16 09:35:41 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@337cb81d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47772462)
2024-07-16 09:35:41 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59929ac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e9bd2c8)
2024-07-16 09:35:41 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-16 09:35:41 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-16 09:35:41 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-16 09:35:41 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-16 09:35:41 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-16 09:35:41 - Adding type registration null -> org.hibernate.type.NullType@60ef30b1
2024-07-16 09:35:41 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3de88f64`
2024-07-16 09:35:41 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-16 09:35:41 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-16 09:35:41 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-16 09:35:41 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-16 09:35:41 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-16 09:35:41 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-16 09:35:41 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-16 09:35:41 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-16 09:35:41 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-16 09:35:41 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-16 09:35:41 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-16 09:35:41 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-16 09:35:41 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e97f51c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@29394966]
2024-07-16 09:35:41 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-16 09:35:41 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-16 09:35:41 - Import with entity name Task
2024-07-16 09:35:41 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-16 09:35:41 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-16 09:35:41 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-16 09:35:41 - MetadataSourceProcessor property id with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-16 09:35:41 - building BasicValue for id
2024-07-16 09:35:41 - Skipping column re-registration: task.id
2024-07-16 09:35:41 - Building property id
2024-07-16 09:35:41 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property category with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-16 09:35:41 - building BasicValue for category
2024-07-16 09:35:41 - Skipping column re-registration: task.category
2024-07-16 09:35:41 - Building property category
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-16 09:35:41 - building BasicValue for createdAt
2024-07-16 09:35:41 - Skipping column re-registration: task.created_at
2024-07-16 09:35:41 - Building property createdAt
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property description with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-16 09:35:41 - building BasicValue for description
2024-07-16 09:35:41 - Skipping column re-registration: task.description
2024-07-16 09:35:41 - Building property description
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property priority with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-16 09:35:41 - building BasicValue for priority
2024-07-16 09:35:41 - Skipping column re-registration: task.priority
2024-07-16 09:35:41 - Building property priority
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property title with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-16 09:35:41 - building BasicValue for title
2024-07-16 09:35:41 - Skipping column re-registration: task.title
2024-07-16 09:35:41 - Building property title
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-16 09:35:41 - building BasicValue for updatedAt
2024-07-16 09:35:41 - Skipping column re-registration: task.updated_at
2024-07-16 09:35:41 - Building property updatedAt
2024-07-16 09:35:41 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - Building property user
2024-07-16 09:35:41 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-16 09:35:41 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-16 09:35:41 - Import with entity name User
2024-07-16 09:35:41 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-16 09:35:41 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-16 09:35:41 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-16 09:35:41 - MetadataSourceProcessor property id with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-16 09:35:41 - building BasicValue for id
2024-07-16 09:35:41 - Skipping column re-registration: users.id
2024-07-16 09:35:41 - Building property id
2024-07-16 09:35:41 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property email with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-16 09:35:41 - building BasicValue for email
2024-07-16 09:35:41 - Skipping column re-registration: users.email
2024-07-16 09:35:41 - Building property email
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property password with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-16 09:35:41 - building BasicValue for password
2024-07-16 09:35:41 - Skipping column re-registration: users.password
2024-07-16 09:35:41 - Building property password
2024-07-16 09:35:41 - Binding column: AnnotatedJoinColumn()
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-16 09:35:41 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-16 09:35:41 - Binding column: AnnotatedJoinColumn()
2024-07-16 09:35:41 - Binding column: AnnotatedJoinColumn()
2024-07-16 09:35:41 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-16 09:35:41 - Building property tasks
2024-07-16 09:35:41 - Binding column: AnnotatedColumn()
2024-07-16 09:35:41 - MetadataSourceProcessor property username with lazy=false
2024-07-16 09:35:41 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-16 09:35:41 - building BasicValue for username
2024-07-16 09:35:41 - Skipping column re-registration: users.username
2024-07-16 09:35:41 - Building property username
2024-07-16 09:35:41 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-16 09:35:41 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-16 09:35:41 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-16 09:35:41 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-16 09:35:41 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-16 09:35:41 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-16 09:35:41 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-16 09:35:41 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-16 09:35:41 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-16 09:35:41 - Building session factory
2024-07-16 09:35:41 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-16 09:35:41 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@69e8b711, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@764a3867, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.16820119690893829888, com.sun.management.jmxremote.port=51758, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=13900, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.16820119690893829888, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@d99df7a, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-16 09:35:41 - Session factory constructed with filter configurations : {}
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@32c08610] under count; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@73818435] under every; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2fce8243] under any; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fff419d] under sinh; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6127ef86] under cosh; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@542754be] under tanh; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@af57949] under pi; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f833223] under log; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-16 09:35:41 - Registering alternate key : length -> character_length
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3a44993c] under position; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@153d14e3] under overlay; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2fd8b081] under trim; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@25a2f432] under cast; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7efba9b9] under collate; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@25e203e6] under extract; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@47fc9ce] under ifnull; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@346e5cc] under pad; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2b409174] under str; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2d114d27] under format; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@e0d9e3f] under timestampadd; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2acbe46d] under timestampdiff; prior registration was null
2024-07-16 09:35:41 - Registering alternate key : dateadd -> timestampadd
2024-07-16 09:35:41 - Registering alternate key : datediff -> timestampdiff
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f695077] under current_date; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b31a9e3] under current_time; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@282240] under current_timestamp; prior registration was null
2024-07-16 09:35:41 - Registering alternate key : current date -> current_date
2024-07-16 09:35:41 - Registering alternate key : current time -> current_time
2024-07-16 09:35:41 - Registering alternate key : current timestamp -> current_timestamp
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3b590f6a] under local_date; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e160a9e] under local_time; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483ed60e] under local_datetime; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9c5d76b] under offset_datetime; prior registration was null
2024-07-16 09:35:41 - Registering alternate key : local date -> local_date
2024-07-16 09:35:41 - Registering alternate key : local time -> local_time
2024-07-16 09:35:41 - Registering alternate key : local datetime -> local_datetime
2024-07-16 09:35:41 - Registering alternate key : offset datetime -> offset_datetime
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a14ab66] under instant; prior registration was null
2024-07-16 09:35:41 - Registering alternate key : current_instant -> instant
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@12811f95] under sql; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f833223
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@74bcf1ab] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a11efe6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-16 09:35:41 - Registering alternate key : day -> dayofmonth
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e6bbe63] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3a44993c
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@210e2f2f] under trunc; prior registration was null
2024-07-16 09:35:41 - Registering alternate key : truncate -> trunc
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c31419f] under bitand; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43dddfdd] under bitor; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22c0344e] under bitxor; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7267006e] under bitnot; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@745c8a04] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2d114d27
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1e160a9e
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@483ed60e
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59d29065] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@af57949
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a13ad55] under chr; prior registration was null
2024-07-16 09:35:41 - Registering alternate key : char -> chr
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@303db609] under sysdate; prior registration was null
2024-07-16 09:35:41 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@5773f83d] under listagg; prior registration was null
2024-07-16 09:35:41 - abs(NUMERIC arg)
2024-07-16 09:35:41 - Double acos(NUMERIC arg)
2024-07-16 09:35:41 - adddate(DATE datetime, INTEGER days)
2024-07-16 09:35:41 - addtime(TIME datetime, TIME time)
2024-07-16 09:35:41 - Boolean any(BOOLEAN arg)
2024-07-16 09:35:41 - Integer ascii(STRING arg)
2024-07-16 09:35:41 - Double asin(NUMERIC arg)
2024-07-16 09:35:41 - Double atan(NUMERIC arg)
2024-07-16 09:35:41 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-16 09:35:41 - avg(arg)
2024-07-16 09:35:41 - bit_and(arg)
2024-07-16 09:35:41 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-16 09:35:41 - bit_or(arg)
2024-07-16 09:35:41 - bitand(arg0, arg1)
2024-07-16 09:35:41 - bitnot(arg)
2024-07-16 09:35:41 - bitor(arg0, arg1)
2024-07-16 09:35:41 - bitxor(arg0, arg1)
2024-07-16 09:35:41 - cast(arg as Type)
2024-07-16 09:35:41 - ceiling(NUMERIC arg)
2024-07-16 09:35:41 - Character char(INTEGER arg)
2024-07-16 09:35:41 - Integer character_length(STRING_OR_CLOB arg)
2024-07-16 09:35:41 - Character chr(INTEGER arg)
2024-07-16 09:35:41 - coalesce(arg0[, arg1[, ...]])
2024-07-16 09:35:41 - String collate(STRING string as COLLATION collation)
2024-07-16 09:35:41 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-16 09:35:41 - Double cos(NUMERIC arg)
2024-07-16 09:35:41 - Double cosh(NUMERIC arg)
2024-07-16 09:35:41 - Double cot(NUMERIC arg)
2024-07-16 09:35:41 - Long count([distinct ]{arg|*})
2024-07-16 09:35:41 - Integer crc32(arg)
2024-07-16 09:35:41 - Date curdate()
2024-07-16 09:35:41 - Date current date
2024-07-16 09:35:41 - Time current time
2024-07-16 09:35:41 - Timestamp current timestamp
2024-07-16 09:35:41 - Date current_date
2024-07-16 09:35:41 - Instant current_instant
2024-07-16 09:35:41 - Time current_time
2024-07-16 09:35:41 - Timestamp current_timestamp
2024-07-16 09:35:41 - Time curtime()
2024-07-16 09:35:41 - Date date(arg)
2024-07-16 09:35:41 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-16 09:35:41 - Integer datediff(DATE end, DATE start)
2024-07-16 09:35:41 - Integer day(DATE arg)
2024-07-16 09:35:41 - String dayname(DATE arg)
2024-07-16 09:35:41 - Integer dayofmonth(DATE arg)
2024-07-16 09:35:41 - Integer dayofweek(DATE arg)
2024-07-16 09:35:41 - Integer dayofyear(DATE arg)
2024-07-16 09:35:41 - Double degrees(NUMERIC arg)
2024-07-16 09:35:41 - Boolean every(BOOLEAN arg)
2024-07-16 09:35:41 - Double exp(NUMERIC arg)
2024-07-16 09:35:41 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-16 09:35:41 - floor(NUMERIC arg)
2024-07-16 09:35:41 - String format(TEMPORAL datetime as STRING pattern)
2024-07-16 09:35:41 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-16 09:35:41 - Integer hour(TIME arg)
2024-07-16 09:35:41 - ifnull(arg0, arg1)
2024-07-16 09:35:41 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-16 09:35:41 - Instant instant
2024-07-16 09:35:41 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-16 09:35:41 - Date last_day(DATE arg)
2024-07-16 09:35:41 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-16 09:35:41 - String left(STRING string, INTEGER length)
2024-07-16 09:35:41 - Integer length(STRING_OR_CLOB arg)
2024-07-16 09:35:41 - String listagg(STRING arg0, STRING arg1)
2024-07-16 09:35:41 - Double ln(NUMERIC arg)
2024-07-16 09:35:41 - LocalDate local date
2024-07-16 09:35:41 - LocalDateTime local datetime
2024-07-16 09:35:41 - LocalTime local time
2024-07-16 09:35:41 - LocalDate local_date
2024-07-16 09:35:41 - LocalDateTime local_datetime
2024-07-16 09:35:41 - LocalTime local_time
2024-07-16 09:35:41 - Timestamp localtime
2024-07-16 09:35:41 - Timestamp localtimestamp
2024-07-16 09:35:41 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-16 09:35:41 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-16 09:35:41 - Double log10(NUMERIC arg)
2024-07-16 09:35:41 - Double log2(NUMERIC arg)
2024-07-16 09:35:41 - String lower(STRING string)
2024-07-16 09:35:41 - String lpad(string, length[, padding])
2024-07-16 09:35:41 - String ltrim(STRING string[, STRING characters])
2024-07-16 09:35:41 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-16 09:35:41 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-16 09:35:41 - max(COMPARABLE arg)
2024-07-16 09:35:41 - String md5(arg)
2024-07-16 09:35:41 - Integer microsecond(TIME arg)
2024-07-16 09:35:41 - min(COMPARABLE arg)
2024-07-16 09:35:41 - Integer minute(TIME arg)
2024-07-16 09:35:41 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-16 09:35:41 - Integer month(DATE arg)
2024-07-16 09:35:41 - String monthname(DATE arg)
2024-07-16 09:35:41 - Timestamp now()
2024-07-16 09:35:41 - nullif(arg0, arg1)
2024-07-16 09:35:41 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-16 09:35:41 - OffsetDateTime offset datetime
2024-07-16 09:35:41 - OffsetDateTime offset_datetime
2024-07-16 09:35:41 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-16 09:35:41 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-16 09:35:41 - Double pi
2024-07-16 09:35:41 - Integer position(STRING pattern in STRING string)
2024-07-16 09:35:41 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-16 09:35:41 - Integer quarter(DATE arg)
2024-07-16 09:35:41 - Double radians(NUMERIC arg)
2024-07-16 09:35:41 - Double rand([INTEGER seed])
2024-07-16 09:35:41 - String repeat(STRING string, INTEGER times)
2024-07-16 09:35:41 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-16 09:35:41 - String reverse(STRING arg)
2024-07-16 09:35:41 - String right(STRING string, INTEGER length)
2024-07-16 09:35:41 - round(NUMERIC number[, INTEGER places])
2024-07-16 09:35:41 - String rpad(string, length[, padding])
2024-07-16 09:35:41 - String rtrim(STRING string[, STRING characters])
2024-07-16 09:35:41 - Integer second(TIME arg)
2024-07-16 09:35:41 - String sha(arg)
2024-07-16 09:35:41 - String sha1(arg)
2024-07-16 09:35:41 - String sha2(arg0, arg1)
2024-07-16 09:35:41 - Integer sign(NUMERIC arg)
2024-07-16 09:35:41 - Double sin(NUMERIC arg)
2024-07-16 09:35:41 - Double sinh(NUMERIC arg)
2024-07-16 09:35:41 - String soundex(arg)
2024-07-16 09:35:41 - String space(INTEGER arg)
2024-07-16 09:35:41 - Object sql
2024-07-16 09:35:41 - Double sqrt(NUMERIC arg)
2024-07-16 09:35:41 - Double stddev(NUMERIC arg)
2024-07-16 09:35:41 - Double stddev_pop(NUMERIC arg)
2024-07-16 09:35:41 - Double stddev_samp(NUMERIC arg)
2024-07-16 09:35:41 - String str(arg)
2024-07-16 09:35:41 - subdate(DATE datetime, INTEGER days)
2024-07-16 09:35:41 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-16 09:35:41 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-16 09:35:41 - subtime(TIME datetime, TIME time)
2024-07-16 09:35:41 - sum(arg)
2024-07-16 09:35:41 - Timestamp sysdate()
2024-07-16 09:35:41 - Double tan(NUMERIC arg)
2024-07-16 09:35:41 - Double tanh(NUMERIC arg)
2024-07-16 09:35:41 - String time(arg)
2024-07-16 09:35:41 - Timestamp timestamp(arg0[, arg1])
2024-07-16 09:35:41 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-16 09:35:41 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-16 09:35:41 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-16 09:35:41 - trunc( ... )
2024-07-16 09:35:41 - truncate( ... )
2024-07-16 09:35:41 - String upper(STRING string)
2024-07-16 09:35:41 - Date utc_date
2024-07-16 09:35:41 - Time utc_time
2024-07-16 09:35:41 - Timestamp utc_timestamp
2024-07-16 09:35:41 - Double var_pop(NUMERIC arg)
2024-07-16 09:35:41 - Double var_samp(NUMERIC arg)
2024-07-16 09:35:41 - Double variance(NUMERIC arg)
2024-07-16 09:35:41 - Integer week(DATE arg)
2024-07-16 09:35:41 - Integer year(DATE arg)
2024-07-16 09:35:41 - Starting QueryInterpretationCache(2048)
2024-07-16 09:35:41 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-16 09:35:41 - Configured EntityCopyObserver strategy: disallow
2024-07-16 09:35:41 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-16 09:35:41 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-16 09:35:41 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-16 09:35:41 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-16 09:35:41 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-16 09:35:41 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-16 09:35:41 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-16 09:35:41 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-16 09:35:41 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-16 09:35:41 - Starting post-init callbacks
2024-07-16 09:35:41 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-16 09:35:41 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-16 09:35:41 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-16 09:35:41 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-16 09:35:41 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-16 09:35:41 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-16 09:35:41 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-16 09:35:41 - Created new SQL alias : u1_0
2024-07-16 09:35:41 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-16 09:35:41 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-16 09:35:41 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-16 09:35:41 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-16 09:35:41 -  Version select: select id from users where id=?
2024-07-16 09:35:41 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-16 09:35:41 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-16 09:35:41 -  Delete (0): delete from users where id=?
2024-07-16 09:35:41 - Created new SQL alias : t1_0
2024-07-16 09:35:41 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-16 09:35:41 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1f3f0d25] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-16 09:35:41 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-16 09:35:41 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-16 09:35:41 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-16 09:35:41 -  Version select: select id from task where id=?
2024-07-16 09:35:41 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-16 09:35:41 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-16 09:35:41 -  Delete (0): delete from task where id=?
2024-07-16 09:35:41 - Created new SQL alias : t1_0
2024-07-16 09:35:41 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@134ec0f3] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-16 09:35:41 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-16 09:35:41 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@41041c31] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-16 09:35:41 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-16 09:35:41 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-16 09:35:41 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-16 09:35:41 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-16 09:35:41 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@e97f51c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@62eb918]
2024-07-16 09:35:41 - Checking 0 named HQL queries
2024-07-16 09:35:41 - Checking 0 named SQL queries
2024-07-16 09:35:41 - No alter strings for table : task
2024-07-16 09:35:41 - No alter strings for table : users
2024-07-16 09:35:41 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@627cb3ed
2024-07-16 09:35:41 - Registering SessionFactory: f4e33f70-4d6d-42e0-8ddf-7fef925267c4 (<unnamed>)
2024-07-16 09:35:41 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-16 09:35:41 - Instantiated SessionFactory
2024-07-16 09:35:41 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-16 09:35:42 - Statistics initialized [enabled=false]
2024-07-16 09:35:42 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-16 09:35:42 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-16 09:35:42 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-16 09:35:42 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-16 09:35:42 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-16 09:35:42 - 

Using generated security password: 53469132-e16b-41a8-a994-f86bb15327b4

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-16 09:35:42 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-16 09:35:42 - 11 mappings in 'requestMappingHandlerMapping'
2024-07-16 09:35:42 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-16 09:35:43 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-16 09:35:43 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-16 09:35:43 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-16 09:35:43 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-16 09:35:43 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-16 09:35:43 - Tomcat started on port 8080 (http) with context path '/'
2024-07-16 09:35:43 - Started TaskmanagementApplication in 5.791 seconds (process running for 6.357)
2024-07-16 09:35:44 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-16 09:35:44 - Initializing Servlet 'dispatcherServlet'
2024-07-16 09:35:44 - Detected StandardServletMultipartResolver
2024-07-16 09:35:44 - Detected AcceptHeaderLocaleResolver
2024-07-16 09:35:44 - Detected FixedThemeResolver
2024-07-16 09:35:44 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3b67c637
2024-07-16 09:35:44 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@781befe7
2024-07-16 09:35:44 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-16 09:35:44 - Completed initialization in 2 ms
2024-07-16 09:37:09 - Securing GET /api/users
2024-07-16 09:37:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 09:37:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 09:37:09 - Securing GET /error
2024-07-16 09:37:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 09:37:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 09:37:09 - Securing GET /api/users
2024-07-16 09:37:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 09:37:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 09:37:09 - Securing GET /error
2024-07-16 09:37:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 09:37:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 09:38:09 - Securing OPTIONS /api/users/register
2024-07-16 09:38:09 - Securing POST /api/users/register
2024-07-16 09:38:09 - Secured POST /api/users/register
2024-07-16 09:38:09 - POST "/api/users/register", parameters={}
2024-07-16 09:38:09 - Mapped to com.example.taskmanagement.controller.UserController#registerUser(User)
2024-07-16 09:38:09 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@67f06658]
2024-07-16 09:38:09 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-16 09:38:09 - begin
2024-07-16 09:38:09 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-16 09:38:09 - Executing identity-insert immediately
2024-07-16 09:38:09 - insert into users (email,password,username) values (?,?,?)
2024-07-16 09:38:09 - Initializer list is empty
2024-07-16 09:38:09 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@25838a9a
2024-07-16 09:38:09 - Extracted JDBC value [0] - [3]
2024-07-16 09:38:09 - Extracted generated values [com.example.taskmanagement.model.User]: [Ljava.lang.Object;@64c9f272
2024-07-16 09:38:09 - committing
2024-07-16 09:38:09 - Processing flush-time cascades
2024-07-16 09:38:09 - Dirty checking collections
2024-07-16 09:38:09 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-07-16 09:38:09 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-16 09:38:09 - Listing entities:
2024-07-16 09:38:09 - com.example.taskmanagement.model.User{password=$2a$10$M9w47N59yFjA8wRWaqoosePkGYzgnHCXvkwKYr7EBFqQHAbAxwE7u, id=3, email=ohchch@gmail.com, tasks=null, username=ohchch}
2024-07-16 09:38:09 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-16 09:38:09 - Writing [com.example.taskmanagement.model.User@67f06658]
2024-07-16 09:38:09 - Completed 200 OK
2024-07-16 09:38:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 09:39:29 - Securing POST /api/users/register
2024-07-16 09:39:29 - Secured POST /api/users/register
2024-07-16 09:39:29 - POST "/api/users/register", parameters={}
2024-07-16 09:39:29 - Mapped to com.example.taskmanagement.controller.UserController#registerUser(User)
2024-07-16 09:39:29 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@2303d7a8]
2024-07-16 09:39:29 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-16 09:39:29 - begin
2024-07-16 09:39:29 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-16 09:39:29 - Executing identity-insert immediately
2024-07-16 09:39:29 - insert into users (email,password,username) values (?,?,?)
2024-07-16 09:39:29 - Initializer list is empty
2024-07-16 09:39:29 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@6e95ca88
2024-07-16 09:39:29 - Extracted JDBC value [0] - [4]
2024-07-16 09:39:29 - Extracted generated values [com.example.taskmanagement.model.User]: [Ljava.lang.Object;@1657b7c0
2024-07-16 09:39:29 - committing
2024-07-16 09:39:29 - Processing flush-time cascades
2024-07-16 09:39:29 - Dirty checking collections
2024-07-16 09:39:29 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2024-07-16 09:39:29 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2024-07-16 09:39:29 - Listing entities:
2024-07-16 09:39:29 - com.example.taskmanagement.model.User{password=$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa, id=4, email=ohchch001@gmail.com, tasks=null, username=ohchch001}
2024-07-16 09:39:29 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-16 09:39:29 - Writing [com.example.taskmanagement.model.User@2303d7a8]
2024-07-16 09:39:29 - Completed 200 OK
2024-07-16 09:39:29 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 09:40:30 - Securing OPTIONS /api/users/login
2024-07-16 09:40:30 - Securing POST /api/users/login
2024-07-16 09:40:30 - Secured POST /api/users/login
2024-07-16 09:40:30 - POST "/api/users/login", parameters={}
2024-07-16 09:40:30 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-16 09:40:30 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@2494eb26]
2024-07-16 09:40:30 - Created new SQL alias : u1_0
2024-07-16 09:40:30 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(86666413996700))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-16 09:40:30 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@732ef48a
2024-07-16 09:40:30 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(86666413996700).username) 
2024-07-16 09:40:30 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(86666413996700)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(86666413996700).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(86666413996700).username]

2024-07-16 09:40:30 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(86666413996700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-16 09:40:30 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-16 09:40:30 - Initializer list:
	  com.example.taskmanagement.model.User(86666413996700) -> EntityResultInitializer(com.example.taskmanagement.model.User(86666413996700))@1393484913 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(86666413996700).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(86666413996700).tasks)@1764888616 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 09:40:30 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-16 09:40:30 - Extracted JDBC value [0] - [4]
2024-07-16 09:40:30 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(86666413996700)): 4
2024-07-16 09:40:30 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(86666413996700).tasks#4
2024-07-16 09:40:30 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(86666413996700)#4] : 662252305
2024-07-16 09:40:30 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-16 09:40:30 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-16 09:40:30 - Extracted JDBC value [3] - [ohchch001]
2024-07-16 09:40:30 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(86666413996700)#4
2024-07-16 09:40:30 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36331374
2024-07-16 09:40:30 - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-16 09:40:30 - Writing ["Login successful!"]
2024-07-16 09:40:30 - Completed 200 OK
2024-07-16 09:40:30 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 10:26:06 - Securing GET /api/users
2024-07-16 10:26:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 10:26:06 - Pre-authenticated entry point called. Rejecting access
2024-07-16 10:26:06 - Securing GET /error
2024-07-16 10:26:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 10:26:06 - Pre-authenticated entry point called. Rejecting access
2024-07-16 10:26:06 - Securing GET /api/users
2024-07-16 10:26:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 10:26:06 - Pre-authenticated entry point called. Rejecting access
2024-07-16 10:26:06 - Securing GET /error
2024-07-16 10:26:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 10:26:06 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:26 - Securing GET /api/users
2024-07-16 11:01:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:26 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:26 - Securing GET /error
2024-07-16 11:01:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:26 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:26 - Securing GET /api/users/null
2024-07-16 11:01:26 - Secured GET /api/users/null
2024-07-16 11:01:26 - GET "/api/users/null", parameters={}
2024-07-16 11:01:26 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-16 11:01:26 - Completed 405 METHOD_NOT_ALLOWED
2024-07-16 11:01:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:26 - Securing GET /api/users
2024-07-16 11:01:26 - Securing GET /error
2024-07-16 11:01:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:26 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:26 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:26 - Securing GET /error
2024-07-16 11:01:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:26 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:26 - Securing GET /api/users/null
2024-07-16 11:01:26 - Secured GET /api/users/null
2024-07-16 11:01:26 - GET "/api/users/null", parameters={}
2024-07-16 11:01:26 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-16 11:01:26 - Completed 405 METHOD_NOT_ALLOWED
2024-07-16 11:01:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:26 - Securing GET /error
2024-07-16 11:01:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:26 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:35 - Securing GET /api/users
2024-07-16 11:01:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:35 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:35 - Securing GET /api/users/null
2024-07-16 11:01:35 - Secured GET /api/users/null
2024-07-16 11:01:35 - Securing GET /error
2024-07-16 11:01:35 - GET "/api/users/null", parameters={}
2024-07-16 11:01:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:35 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-16 11:01:35 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:35 - Completed 405 METHOD_NOT_ALLOWED
2024-07-16 11:01:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:35 - Securing GET /error
2024-07-16 11:01:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:35 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:35 - Securing GET /api/users
2024-07-16 11:01:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:35 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:35 - Securing GET /api/users/null
2024-07-16 11:01:35 - Securing GET /error
2024-07-16 11:01:35 - Secured GET /api/users/null
2024-07-16 11:01:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:35 - GET "/api/users/null", parameters={}
2024-07-16 11:01:35 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:01:35 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-16 11:01:35 - Completed 405 METHOD_NOT_ALLOWED
2024-07-16 11:01:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:35 - Securing GET /error
2024-07-16 11:01:35 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:01:35 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:05:09 - Securing GET /api/users/null
2024-07-16 11:05:09 - Secured GET /api/users/null
2024-07-16 11:05:09 - GET "/api/users/null", parameters={}
2024-07-16 11:05:09 - Securing GET /api/users
2024-07-16 11:05:09 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-16 11:05:09 - Completed 405 METHOD_NOT_ALLOWED
2024-07-16 11:05:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:05:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:05:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:05:09 - Securing GET /error
2024-07-16 11:05:09 - Securing GET /error
2024-07-16 11:05:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:05:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:05:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:05:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:05:09 - Securing GET /api/users/null
2024-07-16 11:05:09 - Securing GET /api/users
2024-07-16 11:05:09 - Secured GET /api/users/null
2024-07-16 11:05:09 - GET "/api/users/null", parameters={}
2024-07-16 11:05:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:05:09 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-16 11:05:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:05:09 - Completed 405 METHOD_NOT_ALLOWED
2024-07-16 11:05:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:05:09 - Securing GET /error
2024-07-16 11:05:09 - Securing GET /error
2024-07-16 11:05:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:05:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:05:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:05:09 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:10:09 - Securing OPTIONS /api/users/login
2024-07-16 11:10:09 - Securing POST /api/users/login
2024-07-16 11:10:09 - Secured POST /api/users/login
2024-07-16 11:10:09 - POST "/api/users/login", parameters={}
2024-07-16 11:10:09 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-16 11:10:09 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@6f9897f3]
2024-07-16 11:10:09 - Created new SQL alias : u1_0
2024-07-16 11:10:09 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(86666413996700))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-16 11:10:09 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e0a259a
2024-07-16 11:10:09 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(86666413996700).username) 
2024-07-16 11:10:09 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(86666413996700)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(86666413996700).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(86666413996700).username]

2024-07-16 11:10:09 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(86666413996700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-16 11:10:09 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-16 11:10:09 - Initializer list:
	  com.example.taskmanagement.model.User(86666413996700) -> EntityResultInitializer(com.example.taskmanagement.model.User(86666413996700))@776462831 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(86666413996700).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(86666413996700).tasks)@1997746848 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:10:09 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-16 11:10:09 - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-16 11:10:09 - Writing ["Invalid username or password"]
2024-07-16 11:10:09 - Completed 401 UNAUTHORIZED
2024-07-16 11:10:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:10:15 - Securing POST /api/users/login
2024-07-16 11:10:15 - Secured POST /api/users/login
2024-07-16 11:10:15 - POST "/api/users/login", parameters={}
2024-07-16 11:10:15 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-16 11:10:15 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@58b99aa8]
2024-07-16 11:10:15 - Created new SQL alias : u1_0
2024-07-16 11:10:15 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(86666413996700))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-16 11:10:15 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1dbb1fdb
2024-07-16 11:10:15 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(86666413996700).username) 
2024-07-16 11:10:15 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(86666413996700)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(86666413996700).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(86666413996700).username]

2024-07-16 11:10:15 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(86666413996700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-16 11:10:15 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-16 11:10:15 - Initializer list:
	  com.example.taskmanagement.model.User(86666413996700) -> EntityResultInitializer(com.example.taskmanagement.model.User(86666413996700))@940860810 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(86666413996700).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(86666413996700).tasks)@2106908820 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:10:15 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-16 11:10:15 - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-16 11:10:15 - Writing ["Invalid username or password"]
2024-07-16 11:10:15 - Completed 401 UNAUTHORIZED
2024-07-16 11:10:15 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:10:18 - Securing POST /api/users/login
2024-07-16 11:10:18 - Secured POST /api/users/login
2024-07-16 11:10:18 - POST "/api/users/login", parameters={}
2024-07-16 11:10:18 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-16 11:10:18 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@32d4bac9]
2024-07-16 11:10:18 - Created new SQL alias : u1_0
2024-07-16 11:10:18 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(86666413996700))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-16 11:10:18 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@36eb384b
2024-07-16 11:10:18 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(86666413996700).username) 
2024-07-16 11:10:18 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(86666413996700)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(86666413996700).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(86666413996700).username]

2024-07-16 11:10:18 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(86666413996700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-16 11:10:18 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-16 11:10:18 - Initializer list:
	  com.example.taskmanagement.model.User(86666413996700) -> EntityResultInitializer(com.example.taskmanagement.model.User(86666413996700))@1120945580 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(86666413996700).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(86666413996700).tasks)@764810461 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:10:18 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-16 11:10:18 - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-16 11:10:18 - Writing ["Invalid username or password"]
2024-07-16 11:10:18 - Completed 401 UNAUTHORIZED
2024-07-16 11:10:18 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:11 - Securing POST /api/users/login
2024-07-16 11:12:11 - Secured POST /api/users/login
2024-07-16 11:12:11 - POST "/api/users/login", parameters={}
2024-07-16 11:12:11 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-16 11:12:11 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@509bd38f]
2024-07-16 11:12:11 - Created new SQL alias : u1_0
2024-07-16 11:12:11 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(86666413996700))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-16 11:12:11 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4fde6dbe
2024-07-16 11:12:11 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(86666413996700).username) 
2024-07-16 11:12:11 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(86666413996700)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(86666413996700).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(86666413996700).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(86666413996700).username]

2024-07-16 11:12:11 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(86666413996700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-16 11:12:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-16 11:12:11 - Initializer list:
	  com.example.taskmanagement.model.User(86666413996700) -> EntityResultInitializer(com.example.taskmanagement.model.User(86666413996700))@1498416465 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(86666413996700).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(86666413996700).tasks)@1700733016 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:12:11 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-16 11:12:11 - Extracted JDBC value [0] - [4]
2024-07-16 11:12:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(86666413996700)): 4
2024-07-16 11:12:11 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(86666413996700).tasks#4
2024-07-16 11:12:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(86666413996700)#4] : 1664015147
2024-07-16 11:12:11 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-16 11:12:11 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-16 11:12:11 - Extracted JDBC value [3] - [ohchch001]
2024-07-16 11:12:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(86666413996700)#4
2024-07-16 11:12:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a47d9cb
2024-07-16 11:12:11 - Using 'application/json', given [application/json, text/plain, */*] and supported [text/plain, */*, application/json, application/*+json]
2024-07-16 11:12:11 - Writing ["Login successful!"]
2024-07-16 11:12:11 - Completed 200 OK
2024-07-16 11:12:11 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Securing GET /api/users
2024-07-16 11:12:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:12:14 - Securing GET /error
2024-07-16 11:12:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:12:14 - Securing GET /api/users/undefined
2024-07-16 11:12:14 - Securing GET /api/users
2024-07-16 11:12:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Secured GET /api/users/undefined
2024-07-16 11:12:14 - GET "/api/users/undefined", parameters={}
2024-07-16 11:12:14 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:12:14 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-16 11:12:14 - Completed 405 METHOD_NOT_ALLOWED
2024-07-16 11:12:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Securing GET /error
2024-07-16 11:12:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Securing GET /error
2024-07-16 11:12:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:12:14 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:12:14 - Securing GET /api/users/undefined
2024-07-16 11:12:14 - Secured GET /api/users/undefined
2024-07-16 11:12:14 - GET "/api/users/undefined", parameters={}
2024-07-16 11:12:14 - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' is not supported]
2024-07-16 11:12:14 - Completed 405 METHOD_NOT_ALLOWED
2024-07-16 11:12:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Securing GET /error
2024-07-16 11:12:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:12:14 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:23:48 - Starting TaskmanagementApplication using Java 22.0.1 with PID 25900 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-16 11:23:48 - No active profile set, falling back to 1 default profile: "default"
2024-07-16 11:23:49 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-16 11:23:49 - Finished Spring Data repository scanning in 43 ms. Found 2 JPA repository interfaces.
2024-07-16 11:23:50 - Tomcat initialized with port 8080 (http)
2024-07-16 11:23:50 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-16 11:23:50 - Starting service [Tomcat]
2024-07-16 11:23:50 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-16 11:23:50 - Initializing Spring embedded WebApplicationContext
2024-07-16 11:23:50 - Root WebApplicationContext: initialization completed in 1800 ms
2024-07-16 11:23:50 - Filter 'webMvcObservationFilter' configured for use
2024-07-16 11:23:51 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-16 11:23:51 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-16 11:23:51 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-16 11:23:51 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-16 11:23:51 - HHH000206: 'hibernate.properties' not found
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-16 11:23:51 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-16 11:23:51 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-16 11:23:51 - HHH000026: Second-level cache disabled
2024-07-16 11:23:51 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-16 11:23:51 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-16 11:23:51 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-16 11:23:51 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-16 11:23:51 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-16 11:23:51 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-16 11:23:51 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-16 11:23:51 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-16 11:23:51 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-16 11:23:51 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-16 11:23:51 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-16 11:23:51 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-16 11:23:51 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-16 11:23:51 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-16 11:23:51 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-16 11:23:51 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-16 11:23:51 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-16 11:23:51 - Adding type registration image -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-16 11:23:51 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-16 11:23:51 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-16 11:23:51 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-16 11:23:51 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-16 11:23:51 - Adding type registration short -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-16 11:23:51 - Adding type registration short -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-16 11:23:51 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-16 11:23:51 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-16 11:23:51 - Adding type registration int -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-16 11:23:51 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-16 11:23:51 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-16 11:23:51 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-16 11:23:51 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-16 11:23:51 - Adding type registration float -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-16 11:23:51 - Adding type registration float -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-16 11:23:51 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-16 11:23:51 - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-16 11:23:51 - Adding type registration double -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-16 11:23:51 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-16 11:23:51 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-16 11:23:51 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-16 11:23:51 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-16 11:23:51 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-16 11:23:51 - Adding type registration character -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-16 11:23:51 - Adding type registration char -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-16 11:23:51 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-16 11:23:51 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-16 11:23:51 - Adding type registration string -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-16 11:23:51 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-16 11:23:51 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-16 11:23:51 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-16 11:23:51 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-16 11:23:51 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-16 11:23:51 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-16 11:23:51 - Adding type registration text -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-16 11:23:51 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-16 11:23:51 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-16 11:23:51 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-16 11:23:51 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-16 11:23:51 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-16 11:23:51 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-16 11:23:51 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-16 11:23:51 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-16 11:23:51 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-16 11:23:51 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-16 11:23:51 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-16 11:23:51 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-16 11:23:51 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-16 11:23:51 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-16 11:23:51 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-16 11:23:51 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-16 11:23:51 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-16 11:23:51 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-16 11:23:51 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-16 11:23:51 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-16 11:23:51 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-16 11:23:51 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-16 11:23:51 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-16 11:23:51 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-16 11:23:51 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-16 11:23:51 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-16 11:23:51 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-16 11:23:51 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-16 11:23:51 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-16 11:23:51 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-16 11:23:51 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-16 11:23:51 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-16 11:23:51 - Adding type registration date -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-16 11:23:51 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-16 11:23:51 - Adding type registration time -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-16 11:23:51 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-16 11:23:51 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-16 11:23:51 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-16 11:23:51 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-16 11:23:51 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-16 11:23:51 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-16 11:23:51 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-16 11:23:51 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-16 11:23:51 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-16 11:23:51 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-16 11:23:51 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-16 11:23:51 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-16 11:23:51 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-16 11:23:51 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-16 11:23:51 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-16 11:23:51 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-16 11:23:51 - Adding type registration class -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-16 11:23:51 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-16 11:23:51 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-16 11:23:51 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-16 11:23:51 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-16 11:23:51 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-16 11:23:51 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-16 11:23:51 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-16 11:23:51 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-16 11:23:51 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-16 11:23:51 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-16 11:23:51 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@42503099
2024-07-16 11:23:51 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@42503099
2024-07-16 11:23:51 - Adding type registration url -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-16 11:23:51 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-16 11:23:51 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@60844992
2024-07-16 11:23:51 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-16 11:23:51 - Adding type registration object -> org.hibernate.type.JavaObjectType@79b8ecb
2024-07-16 11:23:51 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@79b8ecb
2024-07-16 11:23:51 - Adding type registration null -> org.hibernate.type.NullType@65d90b7f
2024-07-16 11:23:51 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2a42019a
2024-07-16 11:23:51 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6fc0e448
2024-07-16 11:23:51 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@60194904
2024-07-16 11:23:51 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4db6348b
2024-07-16 11:23:51 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7742a276
2024-07-16 11:23:51 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1f48fa72
2024-07-16 11:23:51 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@35b3c1f6
2024-07-16 11:23:51 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@495da9a7
2024-07-16 11:23:51 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3eee08f5] into BootstrapContext; was [null]
2024-07-16 11:23:51 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3eee08f5) [was null]
2024-07-16 11:23:51 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@290c266c] into BootstrapContext; was [null]
2024-07-16 11:23:51 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@75b363c3] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6ea3a513]
2024-07-16 11:23:51 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-16 11:23:51 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3eee08f5]
2024-07-16 11:23:51 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3eee08f5]
2024-07-16 11:23:51 - HikariPool-1 - Starting...
2024-07-16 11:23:51 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5bdb6ea8
2024-07-16 11:23:51 - HikariPool-1 - Start completed.
2024-07-16 11:23:51 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-16 11:23:51 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-16 11:23:51 - JDBC version : 4.2
2024-07-16 11:23:51 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-16 11:23:51 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-16 11:23:51 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-16 11:23:51 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-16 11:23:51 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-16 11:23:51 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f9e8af5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@337cb81d)
2024-07-16 11:23:51 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47772462) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59929ac)
2024-07-16 11:23:51 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e9bd2c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18f13756)
2024-07-16 11:23:51 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@665b441e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ac3d530)
2024-07-16 11:23:51 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a5e4f32) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0494a8)
2024-07-16 11:23:51 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17c34e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@239d73ff)
2024-07-16 11:23:51 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6bf28f61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64dcf763)
2024-07-16 11:23:51 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@696105c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ab919c)
2024-07-16 11:23:51 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5edd9b4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5db90818)
2024-07-16 11:23:51 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-16 11:23:51 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-16 11:23:51 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-16 11:23:51 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-16 11:23:51 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-16 11:23:51 - Adding type registration null -> org.hibernate.type.NullType@686fb58a
2024-07-16 11:23:51 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@65d90b7f`
2024-07-16 11:23:51 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-16 11:23:51 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-16 11:23:51 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-16 11:23:51 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-16 11:23:51 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-16 11:23:51 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-16 11:23:51 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-16 11:23:51 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-16 11:23:51 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-16 11:23:51 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-16 11:23:51 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-16 11:23:51 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-16 11:23:51 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2173e4d5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@197cc325]
2024-07-16 11:23:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-16 11:23:51 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-16 11:23:51 - Import with entity name Task
2024-07-16 11:23:51 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-16 11:23:51 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-16 11:23:51 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-16 11:23:51 - MetadataSourceProcessor property id with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-16 11:23:51 - building BasicValue for id
2024-07-16 11:23:51 - Skipping column re-registration: task.id
2024-07-16 11:23:51 - Building property id
2024-07-16 11:23:51 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property category with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-16 11:23:51 - building BasicValue for category
2024-07-16 11:23:51 - Skipping column re-registration: task.category
2024-07-16 11:23:51 - Building property category
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-16 11:23:51 - building BasicValue for createdAt
2024-07-16 11:23:51 - Skipping column re-registration: task.created_at
2024-07-16 11:23:51 - Building property createdAt
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property description with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-16 11:23:51 - building BasicValue for description
2024-07-16 11:23:51 - Skipping column re-registration: task.description
2024-07-16 11:23:51 - Building property description
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property priority with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-16 11:23:51 - building BasicValue for priority
2024-07-16 11:23:51 - Skipping column re-registration: task.priority
2024-07-16 11:23:51 - Building property priority
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property title with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-16 11:23:51 - building BasicValue for title
2024-07-16 11:23:51 - Skipping column re-registration: task.title
2024-07-16 11:23:51 - Building property title
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-16 11:23:51 - building BasicValue for updatedAt
2024-07-16 11:23:51 - Skipping column re-registration: task.updated_at
2024-07-16 11:23:51 - Building property updatedAt
2024-07-16 11:23:51 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - Building property user
2024-07-16 11:23:51 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-16 11:23:51 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-16 11:23:51 - Import with entity name User
2024-07-16 11:23:51 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-16 11:23:51 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-16 11:23:51 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-16 11:23:51 - MetadataSourceProcessor property id with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-16 11:23:51 - building BasicValue for id
2024-07-16 11:23:51 - Skipping column re-registration: users.id
2024-07-16 11:23:51 - Building property id
2024-07-16 11:23:51 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property email with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-16 11:23:51 - building BasicValue for email
2024-07-16 11:23:51 - Skipping column re-registration: users.email
2024-07-16 11:23:51 - Building property email
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property password with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-16 11:23:51 - building BasicValue for password
2024-07-16 11:23:51 - Skipping column re-registration: users.password
2024-07-16 11:23:51 - Building property password
2024-07-16 11:23:51 - Binding column: AnnotatedJoinColumn()
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-16 11:23:51 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-16 11:23:51 - Binding column: AnnotatedJoinColumn()
2024-07-16 11:23:51 - Binding column: AnnotatedJoinColumn()
2024-07-16 11:23:51 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-16 11:23:51 - Building property tasks
2024-07-16 11:23:51 - Binding column: AnnotatedColumn()
2024-07-16 11:23:51 - MetadataSourceProcessor property username with lazy=false
2024-07-16 11:23:51 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-16 11:23:51 - building BasicValue for username
2024-07-16 11:23:51 - Skipping column re-registration: users.username
2024-07-16 11:23:51 - Building property username
2024-07-16 11:23:51 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-16 11:23:51 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-16 11:23:51 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-16 11:23:51 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-16 11:23:51 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-16 11:23:51 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-16 11:23:51 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-16 11:23:51 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-16 11:23:51 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-16 11:23:51 - Building session factory
2024-07-16 11:23:51 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-16 11:23:51 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@e344f14, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2d117280, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.16960715597984127185, com.sun.management.jmxremote.port=53571, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=25900, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.16960715597984127185, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6c2be147, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-16 11:23:51 - Session factory constructed with filter configurations : {}
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1361e880] under count; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@53b8a0f7] under every; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4d3a7f83] under any; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f82e3cf] under sinh; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a44993c] under cosh; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b6606d1] under tanh; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27605b87] under pi; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fc4483f] under log; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-16 11:23:51 - Registering alternate key : length -> character_length
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@523f3c29] under position; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4b8cde43] under overlay; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@8b1bfdf] under trim; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@346e5cc] under cast; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cd2c764] under collate; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@11939a9f] under extract; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7cadf3ca] under ifnull; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2f3c7b24] under pad; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3bbdf835] under str; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@48126a17] under format; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@282240] under timestampadd; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6ac83e67] under timestampdiff; prior registration was null
2024-07-16 11:23:51 - Registering alternate key : dateadd -> timestampadd
2024-07-16 11:23:51 - Registering alternate key : datediff -> timestampdiff
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d1f3639] under current_date; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e5b3642] under current_time; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@74bcf1ab] under current_timestamp; prior registration was null
2024-07-16 11:23:51 - Registering alternate key : current date -> current_date
2024-07-16 11:23:51 - Registering alternate key : current time -> current_time
2024-07-16 11:23:51 - Registering alternate key : current timestamp -> current_timestamp
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a11efe6] under local_date; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e6bbe63] under local_time; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69356aca] under local_datetime; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a17ffee] under offset_datetime; prior registration was null
2024-07-16 11:23:51 - Registering alternate key : local date -> local_date
2024-07-16 11:23:51 - Registering alternate key : local time -> local_time
2024-07-16 11:23:51 - Registering alternate key : local datetime -> local_datetime
2024-07-16 11:23:51 - Registering alternate key : offset datetime -> offset_datetime
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ffc4195] under instant; prior registration was null
2024-07-16 11:23:51 - Registering alternate key : current_instant -> instant
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6686507b] under sql; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fc4483f
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5b74bb75] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@675bf541] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-16 11:23:51 - Registering alternate key : day -> dayofmonth
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2aac87ab] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@523f3c29
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7fcfe065] under trunc; prior registration was null
2024-07-16 11:23:51 - Registering alternate key : truncate -> trunc
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d2baa56] under bitand; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b4a2887] under bitor; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23b087c3] under bitxor; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@237c8718] under bitnot; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@325e03b] under format; prior registration was org.hibernate.dialect.function.FormatFunction@48126a17
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5e6bbe63
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@69356aca
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3911fec8] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27605b87
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e38e8b6] under chr; prior registration was null
2024-07-16 11:23:51 - Registering alternate key : char -> chr
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59bbf82e] under sysdate; prior registration was null
2024-07-16 11:23:51 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@1c3a64b6] under listagg; prior registration was null
2024-07-16 11:23:51 - abs(NUMERIC arg)
2024-07-16 11:23:51 - Double acos(NUMERIC arg)
2024-07-16 11:23:51 - adddate(DATE datetime, INTEGER days)
2024-07-16 11:23:51 - addtime(TIME datetime, TIME time)
2024-07-16 11:23:51 - Boolean any(BOOLEAN arg)
2024-07-16 11:23:51 - Integer ascii(STRING arg)
2024-07-16 11:23:51 - Double asin(NUMERIC arg)
2024-07-16 11:23:51 - Double atan(NUMERIC arg)
2024-07-16 11:23:51 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-16 11:23:51 - avg(arg)
2024-07-16 11:23:51 - bit_and(arg)
2024-07-16 11:23:51 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-16 11:23:51 - bit_or(arg)
2024-07-16 11:23:51 - bitand(arg0, arg1)
2024-07-16 11:23:51 - bitnot(arg)
2024-07-16 11:23:51 - bitor(arg0, arg1)
2024-07-16 11:23:51 - bitxor(arg0, arg1)
2024-07-16 11:23:51 - cast(arg as Type)
2024-07-16 11:23:51 - ceiling(NUMERIC arg)
2024-07-16 11:23:51 - Character char(INTEGER arg)
2024-07-16 11:23:51 - Integer character_length(STRING_OR_CLOB arg)
2024-07-16 11:23:51 - Character chr(INTEGER arg)
2024-07-16 11:23:51 - coalesce(arg0[, arg1[, ...]])
2024-07-16 11:23:51 - String collate(STRING string as COLLATION collation)
2024-07-16 11:23:51 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-16 11:23:51 - Double cos(NUMERIC arg)
2024-07-16 11:23:51 - Double cosh(NUMERIC arg)
2024-07-16 11:23:51 - Double cot(NUMERIC arg)
2024-07-16 11:23:51 - Long count([distinct ]{arg|*})
2024-07-16 11:23:51 - Integer crc32(arg)
2024-07-16 11:23:51 - Date curdate()
2024-07-16 11:23:51 - Date current date
2024-07-16 11:23:51 - Time current time
2024-07-16 11:23:51 - Timestamp current timestamp
2024-07-16 11:23:51 - Date current_date
2024-07-16 11:23:51 - Instant current_instant
2024-07-16 11:23:51 - Time current_time
2024-07-16 11:23:51 - Timestamp current_timestamp
2024-07-16 11:23:51 - Time curtime()
2024-07-16 11:23:51 - Date date(arg)
2024-07-16 11:23:51 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-16 11:23:51 - Integer datediff(DATE end, DATE start)
2024-07-16 11:23:51 - Integer day(DATE arg)
2024-07-16 11:23:51 - String dayname(DATE arg)
2024-07-16 11:23:51 - Integer dayofmonth(DATE arg)
2024-07-16 11:23:51 - Integer dayofweek(DATE arg)
2024-07-16 11:23:51 - Integer dayofyear(DATE arg)
2024-07-16 11:23:51 - Double degrees(NUMERIC arg)
2024-07-16 11:23:51 - Boolean every(BOOLEAN arg)
2024-07-16 11:23:51 - Double exp(NUMERIC arg)
2024-07-16 11:23:51 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-16 11:23:51 - floor(NUMERIC arg)
2024-07-16 11:23:51 - String format(TEMPORAL datetime as STRING pattern)
2024-07-16 11:23:51 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-16 11:23:51 - Integer hour(TIME arg)
2024-07-16 11:23:51 - ifnull(arg0, arg1)
2024-07-16 11:23:51 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-16 11:23:51 - Instant instant
2024-07-16 11:23:51 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-16 11:23:51 - Date last_day(DATE arg)
2024-07-16 11:23:51 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-16 11:23:51 - String left(STRING string, INTEGER length)
2024-07-16 11:23:51 - Integer length(STRING_OR_CLOB arg)
2024-07-16 11:23:51 - String listagg(STRING arg0, STRING arg1)
2024-07-16 11:23:51 - Double ln(NUMERIC arg)
2024-07-16 11:23:51 - LocalDate local date
2024-07-16 11:23:51 - LocalDateTime local datetime
2024-07-16 11:23:51 - LocalTime local time
2024-07-16 11:23:51 - LocalDate local_date
2024-07-16 11:23:51 - LocalDateTime local_datetime
2024-07-16 11:23:51 - LocalTime local_time
2024-07-16 11:23:51 - Timestamp localtime
2024-07-16 11:23:51 - Timestamp localtimestamp
2024-07-16 11:23:51 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-16 11:23:51 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-16 11:23:51 - Double log10(NUMERIC arg)
2024-07-16 11:23:51 - Double log2(NUMERIC arg)
2024-07-16 11:23:51 - String lower(STRING string)
2024-07-16 11:23:51 - String lpad(string, length[, padding])
2024-07-16 11:23:51 - String ltrim(STRING string[, STRING characters])
2024-07-16 11:23:51 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-16 11:23:51 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-16 11:23:51 - max(COMPARABLE arg)
2024-07-16 11:23:51 - String md5(arg)
2024-07-16 11:23:51 - Integer microsecond(TIME arg)
2024-07-16 11:23:51 - min(COMPARABLE arg)
2024-07-16 11:23:51 - Integer minute(TIME arg)
2024-07-16 11:23:51 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-16 11:23:51 - Integer month(DATE arg)
2024-07-16 11:23:51 - String monthname(DATE arg)
2024-07-16 11:23:51 - Timestamp now()
2024-07-16 11:23:51 - nullif(arg0, arg1)
2024-07-16 11:23:51 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-16 11:23:51 - OffsetDateTime offset datetime
2024-07-16 11:23:51 - OffsetDateTime offset_datetime
2024-07-16 11:23:51 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-16 11:23:51 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-16 11:23:51 - Double pi
2024-07-16 11:23:51 - Integer position(STRING pattern in STRING string)
2024-07-16 11:23:51 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-16 11:23:51 - Integer quarter(DATE arg)
2024-07-16 11:23:51 - Double radians(NUMERIC arg)
2024-07-16 11:23:51 - Double rand([INTEGER seed])
2024-07-16 11:23:51 - String repeat(STRING string, INTEGER times)
2024-07-16 11:23:51 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-16 11:23:51 - String reverse(STRING arg)
2024-07-16 11:23:51 - String right(STRING string, INTEGER length)
2024-07-16 11:23:51 - round(NUMERIC number[, INTEGER places])
2024-07-16 11:23:51 - String rpad(string, length[, padding])
2024-07-16 11:23:51 - String rtrim(STRING string[, STRING characters])
2024-07-16 11:23:51 - Integer second(TIME arg)
2024-07-16 11:23:51 - String sha(arg)
2024-07-16 11:23:51 - String sha1(arg)
2024-07-16 11:23:51 - String sha2(arg0, arg1)
2024-07-16 11:23:51 - Integer sign(NUMERIC arg)
2024-07-16 11:23:51 - Double sin(NUMERIC arg)
2024-07-16 11:23:51 - Double sinh(NUMERIC arg)
2024-07-16 11:23:51 - String soundex(arg)
2024-07-16 11:23:51 - String space(INTEGER arg)
2024-07-16 11:23:51 - Object sql
2024-07-16 11:23:51 - Double sqrt(NUMERIC arg)
2024-07-16 11:23:51 - Double stddev(NUMERIC arg)
2024-07-16 11:23:51 - Double stddev_pop(NUMERIC arg)
2024-07-16 11:23:51 - Double stddev_samp(NUMERIC arg)
2024-07-16 11:23:51 - String str(arg)
2024-07-16 11:23:51 - subdate(DATE datetime, INTEGER days)
2024-07-16 11:23:51 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-16 11:23:51 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-16 11:23:51 - subtime(TIME datetime, TIME time)
2024-07-16 11:23:51 - sum(arg)
2024-07-16 11:23:51 - Timestamp sysdate()
2024-07-16 11:23:51 - Double tan(NUMERIC arg)
2024-07-16 11:23:51 - Double tanh(NUMERIC arg)
2024-07-16 11:23:51 - String time(arg)
2024-07-16 11:23:51 - Timestamp timestamp(arg0[, arg1])
2024-07-16 11:23:51 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-16 11:23:51 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-16 11:23:51 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-16 11:23:51 - trunc( ... )
2024-07-16 11:23:51 - truncate( ... )
2024-07-16 11:23:51 - String upper(STRING string)
2024-07-16 11:23:51 - Date utc_date
2024-07-16 11:23:51 - Time utc_time
2024-07-16 11:23:51 - Timestamp utc_timestamp
2024-07-16 11:23:51 - Double var_pop(NUMERIC arg)
2024-07-16 11:23:51 - Double var_samp(NUMERIC arg)
2024-07-16 11:23:51 - Double variance(NUMERIC arg)
2024-07-16 11:23:51 - Integer week(DATE arg)
2024-07-16 11:23:51 - Integer year(DATE arg)
2024-07-16 11:23:51 - Starting QueryInterpretationCache(2048)
2024-07-16 11:23:52 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-16 11:23:52 - Configured EntityCopyObserver strategy: disallow
2024-07-16 11:23:52 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-16 11:23:52 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-16 11:23:52 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-16 11:23:52 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-16 11:23:52 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-16 11:23:52 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-16 11:23:52 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-16 11:23:52 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-16 11:23:52 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-16 11:23:52 - Starting post-init callbacks
2024-07-16 11:23:52 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-16 11:23:52 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-16 11:23:52 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-16 11:23:52 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-16 11:23:52 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-16 11:23:52 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-16 11:23:52 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-16 11:23:52 - Created new SQL alias : u1_0
2024-07-16 11:23:52 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-16 11:23:52 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-16 11:23:52 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-16 11:23:52 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-16 11:23:52 -  Version select: select id from users where id=?
2024-07-16 11:23:52 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-16 11:23:52 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-16 11:23:52 -  Delete (0): delete from users where id=?
2024-07-16 11:23:52 - Created new SQL alias : t1_0
2024-07-16 11:23:52 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-16 11:23:52 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26b150cd] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-16 11:23:52 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-16 11:23:52 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-16 11:23:52 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-16 11:23:52 -  Version select: select id from task where id=?
2024-07-16 11:23:52 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-16 11:23:52 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-16 11:23:52 -  Delete (0): delete from task where id=?
2024-07-16 11:23:52 - Created new SQL alias : t1_0
2024-07-16 11:23:52 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3891db3a] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-16 11:23:52 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-16 11:23:52 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3328db4f] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-16 11:23:52 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-16 11:23:52 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-16 11:23:52 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-16 11:23:52 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-16 11:23:52 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2173e4d5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4981b83]
2024-07-16 11:23:52 - Checking 0 named HQL queries
2024-07-16 11:23:52 - Checking 0 named SQL queries
2024-07-16 11:23:52 - No alter strings for table : task
2024-07-16 11:23:52 - No alter strings for table : users
2024-07-16 11:23:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@549be307
2024-07-16 11:23:52 - Registering SessionFactory: c2ca3c79-4653-41aa-a3e4-d146b17e9423 (<unnamed>)
2024-07-16 11:23:52 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-16 11:23:52 - Instantiated SessionFactory
2024-07-16 11:23:52 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-16 11:23:52 - Statistics initialized [enabled=false]
2024-07-16 11:23:52 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-16 11:23:52 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-16 11:23:52 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-16 11:23:52 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-16 11:23:52 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-16 11:23:53 - 

Using generated security password: 6d730a74-a073-4bb8-9be3-356eef9f9a6f

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-16 11:23:53 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-16 11:23:53 - 12 mappings in 'requestMappingHandlerMapping'
2024-07-16 11:23:53 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-16 11:23:53 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-16 11:23:53 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-16 11:23:53 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-16 11:23:53 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-16 11:23:53 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-16 11:23:54 - Tomcat started on port 8080 (http) with context path '/'
2024-07-16 11:23:54 - Started TaskmanagementApplication in 5.736 seconds (process running for 6.166)
2024-07-16 11:23:54 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-16 11:23:54 - Initializing Servlet 'dispatcherServlet'
2024-07-16 11:23:54 - Detected StandardServletMultipartResolver
2024-07-16 11:23:54 - Detected AcceptHeaderLocaleResolver
2024-07-16 11:23:54 - Detected FixedThemeResolver
2024-07-16 11:23:54 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4563d421
2024-07-16 11:23:54 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5fe80760
2024-07-16 11:23:54 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-16 11:23:54 - Completed initialization in 2 ms
2024-07-16 11:24:11 - Securing POST /api/users/login
2024-07-16 11:24:11 - Secured POST /api/users/login
2024-07-16 11:24:11 - POST "/api/users/login", parameters={}
2024-07-16 11:24:11 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-16 11:24:11 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@37296160]
2024-07-16 11:24:11 - Created new SQL alias : u1_0
2024-07-16 11:24:11 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(93151955637700))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-16 11:24:11 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@40b47d5f
2024-07-16 11:24:11 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(93151955637700).username) 
2024-07-16 11:24:11 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(93151955637700)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(93151955637700).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(93151955637700).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(93151955637700).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(93151955637700).username]

2024-07-16 11:24:11 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(93151955637700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-16 11:24:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-16 11:24:11 - Initializer list:
	  com.example.taskmanagement.model.User(93151955637700) -> EntityResultInitializer(com.example.taskmanagement.model.User(93151955637700))@579938225 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(93151955637700).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(93151955637700).tasks)@1058635542 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:24:11 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-16 11:24:11 - Extracted JDBC value [0] - [4]
2024-07-16 11:24:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(93151955637700)): 4
2024-07-16 11:24:11 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(93151955637700).tasks#4
2024-07-16 11:24:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(93151955637700)#4] : 351428880
2024-07-16 11:24:11 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-16 11:24:11 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-16 11:24:11 - Extracted JDBC value [3] - [ohchch001]
2024-07-16 11:24:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(93151955637700)#4
2024-07-16 11:24:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@419ed6fd
2024-07-16 11:24:11 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-16 11:24:11 - Writing [{message=Login successful!, userId=4}]
2024-07-16 11:24:11 - Completed 200 OK
2024-07-16 11:24:11 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:24:24 - Securing GET /api/users/4
2024-07-16 11:24:24 - Securing GET /api/users
2024-07-16 11:24:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:24:24 - Secured GET /api/users/4
2024-07-16 11:24:24 - GET "/api/users/4", parameters={}
2024-07-16 11:24:24 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-16 11:24:24 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:24:24 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-16 11:24:24 - begin
2024-07-16 11:24:24 - Securing GET /error
2024-07-16 11:24:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:24:24 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:24:24 - Securing GET /api/users
2024-07-16 11:24:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:24:24 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:24:24 - Securing GET /error
2024-07-16 11:24:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:24:24 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:24:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:24:24 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1256417958 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1211566552 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-16 11:24:24 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-16 11:24:24 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-16 11:24:24 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-16 11:24:24 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1903365212
2024-07-16 11:24:24 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-16 11:24:24 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-16 11:24:24 - Extracted JDBC value [3] - [ohchch001]
2024-07-16 11:24:24 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-16 11:24:24 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4c102fc2
2024-07-16 11:24:24 - committing
2024-07-16 11:24:24 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-16 11:24:24 - Writing [com.example.taskmanagement.model.User@71730c5c]
2024-07-16 11:24:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:24:24 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1232336845 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1015461204)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1504475778 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@75222920)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1382059349 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:24:24 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-16 11:24:24 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-16 11:24:24 - Completed 200 OK
2024-07-16 11:24:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:24:24 - Securing GET /api/users/4
2024-07-16 11:24:24 - Secured GET /api/users/4
2024-07-16 11:24:24 - GET "/api/users/4", parameters={}
2024-07-16 11:24:24 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-16 11:24:24 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-16 11:24:24 - begin
2024-07-16 11:24:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:24:24 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1416069975 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1347951875 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-16 11:24:24 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-16 11:24:24 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-16 11:24:24 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-16 11:24:24 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 612710836
2024-07-16 11:24:24 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-16 11:24:24 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-16 11:24:24 - Extracted JDBC value [3] - [ohchch001]
2024-07-16 11:24:24 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-16 11:24:24 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@75757623
2024-07-16 11:24:24 - committing
2024-07-16 11:24:24 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-16 11:24:24 - Writing [com.example.taskmanagement.model.User@248539b4]
2024-07-16 11:24:24 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:24:24 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@928856591 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1015461204)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@790741086 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@75222920)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1899720695 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:24:24 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-16 11:24:24 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-16 11:24:24 - Completed 200 OK
2024-07-16 11:24:24 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:28:55 - Securing GET /api/users
2024-07-16 11:28:55 - Securing GET /api/users/4
2024-07-16 11:28:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:28:55 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:28:55 - Secured GET /api/users/4
2024-07-16 11:28:55 - GET "/api/users/4", parameters={}
2024-07-16 11:28:55 - Securing GET /error
2024-07-16 11:28:55 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-16 11:28:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:28:55 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:28:55 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-16 11:28:55 - begin
2024-07-16 11:28:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:28:55 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@700241353 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1824415386 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-16 11:28:55 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-16 11:28:55 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-16 11:28:55 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-16 11:28:55 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 306538377
2024-07-16 11:28:55 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-16 11:28:55 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-16 11:28:55 - Extracted JDBC value [3] - [ohchch001]
2024-07-16 11:28:55 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-16 11:28:55 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a181b01
2024-07-16 11:28:55 - Securing GET /api/users
2024-07-16 11:28:55 - committing
2024-07-16 11:28:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:28:55 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:28:55 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-16 11:28:55 - Writing [com.example.taskmanagement.model.User@12456789]
2024-07-16 11:28:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:28:55 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@155307529 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1015461204)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@148855293 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@75222920)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1660259316 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:28:55 - Securing GET /error
2024-07-16 11:28:55 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-16 11:28:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:28:55 - Pre-authenticated entry point called. Rejecting access
2024-07-16 11:28:55 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-16 11:28:55 - Completed 200 OK
2024-07-16 11:28:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:28:55 - Securing GET /api/users/4
2024-07-16 11:28:55 - Secured GET /api/users/4
2024-07-16 11:28:55 - GET "/api/users/4", parameters={}
2024-07-16 11:28:55 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-16 11:28:55 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-16 11:28:55 - begin
2024-07-16 11:28:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:28:55 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@330034986 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1139379654 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-16 11:28:55 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-16 11:28:55 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-16 11:28:55 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-16 11:28:55 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1575733061
2024-07-16 11:28:55 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-16 11:28:55 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-16 11:28:55 - Extracted JDBC value [3] - [ohchch001]
2024-07-16 11:28:55 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-16 11:28:55 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1cc23baf
2024-07-16 11:28:55 - committing
2024-07-16 11:28:55 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-16 11:28:55 - Writing [com.example.taskmanagement.model.User@5debc745]
2024-07-16 11:28:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:28:55 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@597588018 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1015461204)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1845773612 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@75222920)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1670779904 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-16 11:28:55 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-16 11:28:55 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-16 11:28:55 - Completed 200 OK
2024-07-16 11:28:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 11:29:07 - Securing OPTIONS /api/tasks?userId=4
2024-07-16 11:29:07 - Securing POST /api/tasks?userId=4
2024-07-16 11:29:07 - Secured POST /api/tasks?userId=4
2024-07-16 11:29:07 - POST "/api/tasks?userId=4", parameters={masked}
2024-07-16 11:29:07 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(TaskDTO, Long)
2024-07-16 11:29:07 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@6a9a4210]
2024-07-16 11:29:07 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-16 11:29:07 - begin
2024-07-16 11:29:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-16 11:29:07 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2129594447 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@232318751 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-16 11:29:07 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-16 11:29:07 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-16 11:29:07 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-16 11:29:07 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1431817920
2024-07-16 11:29:07 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-16 11:29:07 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-16 11:29:07 - Extracted JDBC value [3] - [ohchch001]
2024-07-16 11:29:07 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-16 11:29:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7f04afed
2024-07-16 11:29:07 - committing
2024-07-16 11:29:07 - begin
2024-07-16 11:29:07 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-16 11:29:07 - Executing identity-insert immediately
2024-07-16 11:29:07 - insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-16 11:29:07 - Initializer list is empty
2024-07-16 11:29:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@31e0b0
2024-07-16 11:29:07 - Extracted JDBC value [0] - [3]
2024-07-16 11:29:07 - Extracted generated values [com.example.taskmanagement.model.Task]: [Ljava.lang.Object;@2095618e
2024-07-16 11:29:07 - committing
2024-07-16 11:29:07 - Processing flush-time cascades
2024-07-16 11:29:07 - Dirty checking collections
2024-07-16 11:29:07 - Collection found: [com.example.taskmanagement.model.User.tasks#4], was: [com.example.taskmanagement.model.User.tasks#4] (uninitialized)
2024-07-16 11:29:07 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2024-07-16 11:29:07 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-16 11:29:07 - Listing entities:
2024-07-16 11:29:07 - com.example.taskmanagement.model.User{password=$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa, id=4, email=ohchch001@gmail.com, tasks=<uninitialized>, username=ohchch001}
2024-07-16 11:29:07 - com.example.taskmanagement.model.Task{createdAt=null, description=1234, id=3, category=1234, priority=1234, title=1234, user=com.example.taskmanagement.model.User#4, updatedAt=null}
2024-07-16 11:29:07 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-16 11:29:07 - Writing [com.example.taskmanagement.dto.TaskDTO@4041ca5e]
2024-07-16 11:29:07 - Completed 200 OK
2024-07-16 11:29:07 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-16 17:04:52 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=50m4s162ms311µs100ns).
2024-07-17 09:37:41 - Starting TaskmanagementApplication using Java 22.0.1 with PID 27060 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-17 09:37:41 - No active profile set, falling back to 1 default profile: "default"
2024-07-17 09:37:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-17 09:37:42 - Finished Spring Data repository scanning in 35 ms. Found 2 JPA repository interfaces.
2024-07-17 09:37:42 - Tomcat initialized with port 8080 (http)
2024-07-17 09:37:43 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-17 09:37:43 - Starting service [Tomcat]
2024-07-17 09:37:43 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-17 09:37:43 - Initializing Spring embedded WebApplicationContext
2024-07-17 09:37:43 - Root WebApplicationContext: initialization completed in 1604 ms
2024-07-17 09:37:43 - Filter 'webMvcObservationFilter' configured for use
2024-07-17 09:37:43 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-17 09:37:43 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-17 09:37:43 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-17 09:37:43 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-17 09:37:43 - HHH000206: 'hibernate.properties' not found
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 09:37:43 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-17 09:37:43 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-17 09:37:43 - HHH000026: Second-level cache disabled
2024-07-17 09:37:43 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-17 09:37:43 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-17 09:37:43 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-17 09:37:43 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-17 09:37:43 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-17 09:37:43 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-17 09:37:43 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-17 09:37:43 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@35536760
2024-07-17 09:37:43 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@35536760
2024-07-17 09:37:43 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-17 09:37:43 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-17 09:37:43 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-17 09:37:43 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-17 09:37:43 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-17 09:37:43 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-17 09:37:43 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-17 09:37:43 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-17 09:37:43 - Adding type registration image -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-17 09:37:43 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-17 09:37:43 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-17 09:37:43 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 09:37:43 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 09:37:43 - Adding type registration short -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 09:37:43 - Adding type registration short -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 09:37:43 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 09:37:43 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 09:37:43 - Adding type registration int -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 09:37:43 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 09:37:43 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 09:37:43 - Adding type registration long -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 09:37:43 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 09:37:43 - Adding type registration float -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 09:37:43 - Adding type registration float -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 09:37:43 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 09:37:43 - Adding type registration double -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-17 09:37:43 - Adding type registration double -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-17 09:37:43 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-17 09:37:43 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 09:37:43 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 09:37:43 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 09:37:43 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 09:37:43 - Adding type registration character -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 09:37:43 - Adding type registration char -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 09:37:43 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 09:37:43 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 09:37:43 - Adding type registration string -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 09:37:43 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 09:37:43 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 09:37:43 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 09:37:43 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 09:37:43 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 09:37:43 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 09:37:43 - Adding type registration text -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 09:37:43 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-17 09:37:43 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 09:37:43 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 09:37:43 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 09:37:43 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 09:37:43 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 09:37:43 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 09:37:43 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 09:37:43 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 09:37:43 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 09:37:43 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 09:37:43 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 09:37:43 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 09:37:43 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 09:37:43 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 09:37:43 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 09:37:43 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 09:37:43 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 09:37:43 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 09:37:43 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 09:37:43 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 09:37:43 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-17 09:37:43 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 09:37:43 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 09:37:43 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 09:37:43 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 09:37:43 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 09:37:43 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 09:37:43 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 09:37:43 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 09:37:43 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 09:37:43 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 09:37:43 - Adding type registration date -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 09:37:43 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 09:37:43 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 09:37:43 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 09:37:43 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 09:37:43 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 09:37:43 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 09:37:43 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 09:37:43 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 09:37:43 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 09:37:43 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 09:37:43 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 09:37:43 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 09:37:43 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 09:37:43 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 09:37:43 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 09:37:43 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 09:37:43 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 09:37:43 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 09:37:43 - Adding type registration class -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 09:37:43 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 09:37:43 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 09:37:43 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 09:37:43 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 09:37:43 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 09:37:43 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 09:37:43 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-17 09:37:43 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-17 09:37:43 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 09:37:43 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 09:37:43 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 09:37:43 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 09:37:43 - Adding type registration url -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 09:37:43 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 09:37:43 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 09:37:43 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 09:37:43 - Adding type registration object -> org.hibernate.type.JavaObjectType@9880a15
2024-07-17 09:37:43 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@9880a15
2024-07-17 09:37:43 - Adding type registration null -> org.hibernate.type.NullType@42d174ad
2024-07-17 09:37:43 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ec0229c
2024-07-17 09:37:43 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@173a5fad
2024-07-17 09:37:43 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2ce47652
2024-07-17 09:37:43 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@65d90b7f
2024-07-17 09:37:43 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a42019a
2024-07-17 09:37:43 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6fc0e448
2024-07-17 09:37:43 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@60194904
2024-07-17 09:37:43 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4db6348b
2024-07-17 09:37:43 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b808af5] into BootstrapContext; was [null]
2024-07-17 09:37:43 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b808af5) [was null]
2024-07-17 09:37:43 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@246df37b] into BootstrapContext; was [null]
2024-07-17 09:37:43 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2abedbbd] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2c56eba5]
2024-07-17 09:37:43 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-17 09:37:43 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b808af5]
2024-07-17 09:37:43 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b808af5]
2024-07-17 09:37:43 - HikariPool-1 - Starting...
2024-07-17 09:37:43 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b340615
2024-07-17 09:37:43 - HikariPool-1 - Start completed.
2024-07-17 09:37:43 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-17 09:37:43 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-17 09:37:43 - JDBC version : 4.2
2024-07-17 09:37:43 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-17 09:37:43 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-17 09:37:43 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-17 09:37:43 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-17 09:37:43 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-17 09:37:44 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283ecb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a30dbc0)
2024-07-17 09:37:44 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76104df5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61246109)
2024-07-17 09:37:44 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3f9e8af5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@337cb81d)
2024-07-17 09:37:44 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47772462) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59929ac)
2024-07-17 09:37:44 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e9bd2c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18f13756)
2024-07-17 09:37:44 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@665b441e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ac3d530)
2024-07-17 09:37:44 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a5e4f32) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0494a8)
2024-07-17 09:37:44 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17c34e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@239d73ff)
2024-07-17 09:37:44 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6bf28f61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64dcf763)
2024-07-17 09:37:44 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-17 09:37:44 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-17 09:37:44 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-17 09:37:44 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 09:37:44 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 09:37:44 - Adding type registration null -> org.hibernate.type.NullType@4fef4f96
2024-07-17 09:37:44 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@42d174ad`
2024-07-17 09:37:44 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-17 09:37:44 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 09:37:44 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 09:37:44 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 09:37:44 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 09:37:44 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 09:37:44 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 09:37:44 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 09:37:44 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 09:37:44 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 09:37:44 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 09:37:44 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 09:37:44 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63b58ff4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3691d4da]
2024-07-17 09:37:44 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-17 09:37:44 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-17 09:37:44 - Import with entity name Task
2024-07-17 09:37:44 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-17 09:37:44 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 09:37:44 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 09:37:44 - MetadataSourceProcessor property id with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-17 09:37:44 - building BasicValue for id
2024-07-17 09:37:44 - Skipping column re-registration: task.id
2024-07-17 09:37:44 - Building property id
2024-07-17 09:37:44 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property category with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-17 09:37:44 - building BasicValue for category
2024-07-17 09:37:44 - Skipping column re-registration: task.category
2024-07-17 09:37:44 - Building property category
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-17 09:37:44 - building BasicValue for createdAt
2024-07-17 09:37:44 - Skipping column re-registration: task.created_at
2024-07-17 09:37:44 - Building property createdAt
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property description with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-17 09:37:44 - building BasicValue for description
2024-07-17 09:37:44 - Skipping column re-registration: task.description
2024-07-17 09:37:44 - Building property description
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property priority with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-17 09:37:44 - building BasicValue for priority
2024-07-17 09:37:44 - Skipping column re-registration: task.priority
2024-07-17 09:37:44 - Building property priority
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property title with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-17 09:37:44 - building BasicValue for title
2024-07-17 09:37:44 - Skipping column re-registration: task.title
2024-07-17 09:37:44 - Building property title
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-17 09:37:44 - building BasicValue for updatedAt
2024-07-17 09:37:44 - Skipping column re-registration: task.updated_at
2024-07-17 09:37:44 - Building property updatedAt
2024-07-17 09:37:44 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - Building property user
2024-07-17 09:37:44 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 09:37:44 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-17 09:37:44 - Import with entity name User
2024-07-17 09:37:44 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-17 09:37:44 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 09:37:44 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 09:37:44 - MetadataSourceProcessor property id with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-17 09:37:44 - building BasicValue for id
2024-07-17 09:37:44 - Skipping column re-registration: users.id
2024-07-17 09:37:44 - Building property id
2024-07-17 09:37:44 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property email with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-17 09:37:44 - building BasicValue for email
2024-07-17 09:37:44 - Skipping column re-registration: users.email
2024-07-17 09:37:44 - Building property email
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property password with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-17 09:37:44 - building BasicValue for password
2024-07-17 09:37:44 - Skipping column re-registration: users.password
2024-07-17 09:37:44 - Building property password
2024-07-17 09:37:44 - Binding column: AnnotatedJoinColumn()
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-17 09:37:44 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-17 09:37:44 - Binding column: AnnotatedJoinColumn()
2024-07-17 09:37:44 - Binding column: AnnotatedJoinColumn()
2024-07-17 09:37:44 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-17 09:37:44 - Building property tasks
2024-07-17 09:37:44 - Binding column: AnnotatedColumn()
2024-07-17 09:37:44 - MetadataSourceProcessor property username with lazy=false
2024-07-17 09:37:44 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-17 09:37:44 - building BasicValue for username
2024-07-17 09:37:44 - Skipping column re-registration: users.username
2024-07-17 09:37:44 - Building property username
2024-07-17 09:37:44 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-17 09:37:44 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-17 09:37:44 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-17 09:37:44 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-17 09:37:44 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 09:37:44 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-17 09:37:44 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-17 09:37:44 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-17 09:37:44 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-17 09:37:44 - Building session factory
2024-07-17 09:37:44 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 09:37:44 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@16cbba0f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@28d16af8, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.12506556385065589516, com.sun.management.jmxremote.port=50409, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=27060, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.12506556385065589516, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@58932d08, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-17 09:37:44 - Session factory constructed with filter configurations : {}
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2fce8243] under count; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2a349a73] under every; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2ad6895a] under any; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c2e7591] under sinh; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7f2542f] under cosh; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3dad8bde] under tanh; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@301f9aa0] under pi; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f82e3cf] under log; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-17 09:37:44 - Registering alternate key : length -> character_length
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4700963e] under position; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2352c21f] under overlay; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4b8cde43] under trim; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@47fc9ce] under cast; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b5d1d9] under collate; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2cd2c764] under extract; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@11939a9f] under ifnull; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7cadf3ca] under pad; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2f3c7b24] under str; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7d4b32d1] under format; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@48126a17] under timestampadd; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@483ed60e] under timestampdiff; prior registration was null
2024-07-17 09:37:44 - Registering alternate key : dateadd -> timestampadd
2024-07-17 09:37:44 - Registering alternate key : datediff -> timestampdiff
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ac83e67] under current_date; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4d91d2da] under current_time; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12811f95] under current_timestamp; prior registration was null
2024-07-17 09:37:44 - Registering alternate key : current date -> current_date
2024-07-17 09:37:44 - Registering alternate key : current time -> current_time
2024-07-17 09:37:44 - Registering alternate key : current timestamp -> current_timestamp
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68f1b89] under local_date; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2d1f3639] under local_time; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6e5b3642] under local_datetime; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@74bcf1ab] under offset_datetime; prior registration was null
2024-07-17 09:37:44 - Registering alternate key : local date -> local_date
2024-07-17 09:37:44 - Registering alternate key : local time -> local_time
2024-07-17 09:37:44 - Registering alternate key : local datetime -> local_datetime
2024-07-17 09:37:44 - Registering alternate key : offset datetime -> offset_datetime
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a11efe6] under instant; prior registration was null
2024-07-17 09:37:44 - Registering alternate key : current_instant -> instant
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7ffc4195] under sql; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f82e3cf
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@6686507b] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2123a61c] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-17 09:37:44 - Registering alternate key : day -> dayofmonth
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e5c7cd5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4700963e
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@20a116a0] under trunc; prior registration was null
2024-07-17 09:37:44 - Registering alternate key : truncate -> trunc
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6dbdeb69] under bitand; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a238a8e] under bitor; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5773f83d] under bitxor; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fcfe065] under bitnot; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7d2baa56] under format; prior registration was org.hibernate.dialect.function.FormatFunction@7d4b32d1
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2d1f3639
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6e5b3642
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b4a2887] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@301f9aa0
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23b087c3] under chr; prior registration was null
2024-07-17 09:37:44 - Registering alternate key : char -> chr
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@237c8718] under sysdate; prior registration was null
2024-07-17 09:37:44 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@59bbf82e] under listagg; prior registration was null
2024-07-17 09:37:44 - abs(NUMERIC arg)
2024-07-17 09:37:44 - Double acos(NUMERIC arg)
2024-07-17 09:37:44 - adddate(DATE datetime, INTEGER days)
2024-07-17 09:37:44 - addtime(TIME datetime, TIME time)
2024-07-17 09:37:44 - Boolean any(BOOLEAN arg)
2024-07-17 09:37:44 - Integer ascii(STRING arg)
2024-07-17 09:37:44 - Double asin(NUMERIC arg)
2024-07-17 09:37:44 - Double atan(NUMERIC arg)
2024-07-17 09:37:44 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-17 09:37:44 - avg(arg)
2024-07-17 09:37:44 - bit_and(arg)
2024-07-17 09:37:44 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-17 09:37:44 - bit_or(arg)
2024-07-17 09:37:44 - bitand(arg0, arg1)
2024-07-17 09:37:44 - bitnot(arg)
2024-07-17 09:37:44 - bitor(arg0, arg1)
2024-07-17 09:37:44 - bitxor(arg0, arg1)
2024-07-17 09:37:44 - cast(arg as Type)
2024-07-17 09:37:44 - ceiling(NUMERIC arg)
2024-07-17 09:37:44 - Character char(INTEGER arg)
2024-07-17 09:37:44 - Integer character_length(STRING_OR_CLOB arg)
2024-07-17 09:37:44 - Character chr(INTEGER arg)
2024-07-17 09:37:44 - coalesce(arg0[, arg1[, ...]])
2024-07-17 09:37:44 - String collate(STRING string as COLLATION collation)
2024-07-17 09:37:44 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-17 09:37:44 - Double cos(NUMERIC arg)
2024-07-17 09:37:44 - Double cosh(NUMERIC arg)
2024-07-17 09:37:44 - Double cot(NUMERIC arg)
2024-07-17 09:37:44 - Long count([distinct ]{arg|*})
2024-07-17 09:37:44 - Integer crc32(arg)
2024-07-17 09:37:44 - Date curdate()
2024-07-17 09:37:44 - Date current date
2024-07-17 09:37:44 - Time current time
2024-07-17 09:37:44 - Timestamp current timestamp
2024-07-17 09:37:44 - Date current_date
2024-07-17 09:37:44 - Instant current_instant
2024-07-17 09:37:44 - Time current_time
2024-07-17 09:37:44 - Timestamp current_timestamp
2024-07-17 09:37:44 - Time curtime()
2024-07-17 09:37:44 - Date date(arg)
2024-07-17 09:37:44 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 09:37:44 - Integer datediff(DATE end, DATE start)
2024-07-17 09:37:44 - Integer day(DATE arg)
2024-07-17 09:37:44 - String dayname(DATE arg)
2024-07-17 09:37:44 - Integer dayofmonth(DATE arg)
2024-07-17 09:37:44 - Integer dayofweek(DATE arg)
2024-07-17 09:37:44 - Integer dayofyear(DATE arg)
2024-07-17 09:37:44 - Double degrees(NUMERIC arg)
2024-07-17 09:37:44 - Boolean every(BOOLEAN arg)
2024-07-17 09:37:44 - Double exp(NUMERIC arg)
2024-07-17 09:37:44 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-17 09:37:44 - floor(NUMERIC arg)
2024-07-17 09:37:44 - String format(TEMPORAL datetime as STRING pattern)
2024-07-17 09:37:44 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 09:37:44 - Integer hour(TIME arg)
2024-07-17 09:37:44 - ifnull(arg0, arg1)
2024-07-17 09:37:44 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-17 09:37:44 - Instant instant
2024-07-17 09:37:44 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-17 09:37:44 - Date last_day(DATE arg)
2024-07-17 09:37:44 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 09:37:44 - String left(STRING string, INTEGER length)
2024-07-17 09:37:44 - Integer length(STRING_OR_CLOB arg)
2024-07-17 09:37:44 - String listagg(STRING arg0, STRING arg1)
2024-07-17 09:37:44 - Double ln(NUMERIC arg)
2024-07-17 09:37:44 - LocalDate local date
2024-07-17 09:37:44 - LocalDateTime local datetime
2024-07-17 09:37:44 - LocalTime local time
2024-07-17 09:37:44 - LocalDate local_date
2024-07-17 09:37:44 - LocalDateTime local_datetime
2024-07-17 09:37:44 - LocalTime local_time
2024-07-17 09:37:44 - Timestamp localtime
2024-07-17 09:37:44 - Timestamp localtimestamp
2024-07-17 09:37:44 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-17 09:37:44 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-17 09:37:44 - Double log10(NUMERIC arg)
2024-07-17 09:37:44 - Double log2(NUMERIC arg)
2024-07-17 09:37:44 - String lower(STRING string)
2024-07-17 09:37:44 - String lpad(string, length[, padding])
2024-07-17 09:37:44 - String ltrim(STRING string[, STRING characters])
2024-07-17 09:37:44 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-17 09:37:44 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-17 09:37:44 - max(COMPARABLE arg)
2024-07-17 09:37:44 - String md5(arg)
2024-07-17 09:37:44 - Integer microsecond(TIME arg)
2024-07-17 09:37:44 - min(COMPARABLE arg)
2024-07-17 09:37:44 - Integer minute(TIME arg)
2024-07-17 09:37:44 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-17 09:37:44 - Integer month(DATE arg)
2024-07-17 09:37:44 - String monthname(DATE arg)
2024-07-17 09:37:44 - Timestamp now()
2024-07-17 09:37:44 - nullif(arg0, arg1)
2024-07-17 09:37:44 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-17 09:37:44 - OffsetDateTime offset datetime
2024-07-17 09:37:44 - OffsetDateTime offset_datetime
2024-07-17 09:37:44 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-17 09:37:44 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-17 09:37:44 - Double pi
2024-07-17 09:37:44 - Integer position(STRING pattern in STRING string)
2024-07-17 09:37:44 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-17 09:37:44 - Integer quarter(DATE arg)
2024-07-17 09:37:44 - Double radians(NUMERIC arg)
2024-07-17 09:37:44 - Double rand([INTEGER seed])
2024-07-17 09:37:44 - String repeat(STRING string, INTEGER times)
2024-07-17 09:37:44 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-17 09:37:44 - String reverse(STRING arg)
2024-07-17 09:37:44 - String right(STRING string, INTEGER length)
2024-07-17 09:37:44 - round(NUMERIC number[, INTEGER places])
2024-07-17 09:37:44 - String rpad(string, length[, padding])
2024-07-17 09:37:44 - String rtrim(STRING string[, STRING characters])
2024-07-17 09:37:44 - Integer second(TIME arg)
2024-07-17 09:37:44 - String sha(arg)
2024-07-17 09:37:44 - String sha1(arg)
2024-07-17 09:37:44 - String sha2(arg0, arg1)
2024-07-17 09:37:44 - Integer sign(NUMERIC arg)
2024-07-17 09:37:44 - Double sin(NUMERIC arg)
2024-07-17 09:37:44 - Double sinh(NUMERIC arg)
2024-07-17 09:37:44 - String soundex(arg)
2024-07-17 09:37:44 - String space(INTEGER arg)
2024-07-17 09:37:44 - Object sql
2024-07-17 09:37:44 - Double sqrt(NUMERIC arg)
2024-07-17 09:37:44 - Double stddev(NUMERIC arg)
2024-07-17 09:37:44 - Double stddev_pop(NUMERIC arg)
2024-07-17 09:37:44 - Double stddev_samp(NUMERIC arg)
2024-07-17 09:37:44 - String str(arg)
2024-07-17 09:37:44 - subdate(DATE datetime, INTEGER days)
2024-07-17 09:37:44 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-17 09:37:44 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-17 09:37:44 - subtime(TIME datetime, TIME time)
2024-07-17 09:37:44 - sum(arg)
2024-07-17 09:37:44 - Timestamp sysdate()
2024-07-17 09:37:44 - Double tan(NUMERIC arg)
2024-07-17 09:37:44 - Double tanh(NUMERIC arg)
2024-07-17 09:37:44 - String time(arg)
2024-07-17 09:37:44 - Timestamp timestamp(arg0[, arg1])
2024-07-17 09:37:44 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 09:37:44 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-17 09:37:44 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-17 09:37:44 - trunc( ... )
2024-07-17 09:37:44 - truncate( ... )
2024-07-17 09:37:44 - String upper(STRING string)
2024-07-17 09:37:44 - Date utc_date
2024-07-17 09:37:44 - Time utc_time
2024-07-17 09:37:44 - Timestamp utc_timestamp
2024-07-17 09:37:44 - Double var_pop(NUMERIC arg)
2024-07-17 09:37:44 - Double var_samp(NUMERIC arg)
2024-07-17 09:37:44 - Double variance(NUMERIC arg)
2024-07-17 09:37:44 - Integer week(DATE arg)
2024-07-17 09:37:44 - Integer year(DATE arg)
2024-07-17 09:37:44 - Starting QueryInterpretationCache(2048)
2024-07-17 09:37:44 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 09:37:44 - Configured EntityCopyObserver strategy: disallow
2024-07-17 09:37:44 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 09:37:44 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 09:37:44 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-17 09:37:44 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 09:37:44 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 09:37:44 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-17 09:37:44 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-17 09:37:44 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-17 09:37:44 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-17 09:37:44 - Starting post-init callbacks
2024-07-17 09:37:44 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 09:37:44 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-17 09:37:44 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-17 09:37:44 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-17 09:37:44 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-17 09:37:44 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-17 09:37:44 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 09:37:44 - Created new SQL alias : u1_0
2024-07-17 09:37:44 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 09:37:44 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-17 09:37:44 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 09:37:44 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-17 09:37:44 -  Version select: select id from users where id=?
2024-07-17 09:37:44 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-17 09:37:44 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-17 09:37:44 -  Delete (0): delete from users where id=?
2024-07-17 09:37:44 - Created new SQL alias : t1_0
2024-07-17 09:37:44 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 09:37:44 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@24d7c365] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 09:37:44 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-17 09:37:44 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-17 09:37:44 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-17 09:37:44 -  Version select: select id from task where id=?
2024-07-17 09:37:44 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 09:37:44 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-17 09:37:44 -  Delete (0): delete from task where id=?
2024-07-17 09:37:44 - Created new SQL alias : t1_0
2024-07-17 09:37:44 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@3c2e73ce] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-17 09:37:44 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-17 09:37:44 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2709e075] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-17 09:37:44 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-17 09:37:44 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-17 09:37:44 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 09:37:44 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-17 09:37:44 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63b58ff4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5e405eaf]
2024-07-17 09:37:44 - Checking 0 named HQL queries
2024-07-17 09:37:44 - Checking 0 named SQL queries
2024-07-17 09:37:44 - No alter strings for table : task
2024-07-17 09:37:44 - No alter strings for table : users
2024-07-17 09:37:44 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7f38545a
2024-07-17 09:37:44 - Registering SessionFactory: 59824de9-c65e-4ab2-8529-73cc4d462dd3 (<unnamed>)
2024-07-17 09:37:44 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-17 09:37:44 - Instantiated SessionFactory
2024-07-17 09:37:44 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-17 09:37:44 - Statistics initialized [enabled=false]
2024-07-17 09:37:45 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 09:37:45 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 09:37:45 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 09:37:45 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 09:37:45 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-17 09:37:45 - 

Using generated security password: 6fdd6b92-4f35-4da0-9c0a-2da325e930f4

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-17 09:37:45 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-17 09:37:45 - 12 mappings in 'requestMappingHandlerMapping'
2024-07-17 09:37:45 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-17 09:37:45 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-17 09:37:45 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-17 09:37:45 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-17 09:37:45 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-17 09:37:46 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-17 09:37:46 - Tomcat started on port 8080 (http) with context path '/'
2024-07-17 09:37:46 - Started TaskmanagementApplication in 5.084 seconds (process running for 5.577)
2024-07-17 09:37:47 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-17 09:37:47 - Initializing Servlet 'dispatcherServlet'
2024-07-17 09:37:47 - Detected StandardServletMultipartResolver
2024-07-17 09:37:47 - Detected AcceptHeaderLocaleResolver
2024-07-17 09:37:47 - Detected FixedThemeResolver
2024-07-17 09:37:47 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@75af5f2a
2024-07-17 09:37:47 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4ae93e38
2024-07-17 09:37:47 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-17 09:37:47 - Completed initialization in 1 ms
2024-07-17 09:51:28 - Securing GET /api/users/4
2024-07-17 09:51:28 - Securing GET /api/users
2024-07-17 09:51:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:51:28 - Secured GET /api/users/4
2024-07-17 09:51:28 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:51:28 - GET "/api/users/4", parameters={}
2024-07-17 09:51:28 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:51:28 - Securing GET /error
2024-07-17 09:51:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:51:28 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:51:28 - Securing GET /api/users
2024-07-17 09:51:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:51:28 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:51:28 - Securing GET /error
2024-07-17 09:51:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:51:28 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:51:28 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:51:28 - begin
2024-07-17 09:51:28 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:51:28 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@456905921 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1447866243 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:51:28 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:51:28 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:51:28 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:51:28 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1489062352
2024-07-17 09:51:28 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:51:28 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:51:28 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:51:28 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:51:28 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7f9624f7
2024-07-17 09:51:28 - committing
2024-07-17 09:51:28 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:51:28 - Writing [com.example.taskmanagement.model.User@58c149d0]
2024-07-17 09:51:28 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:51:28 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@343866606 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@2012050823 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@825423661 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:51:28 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:51:28 - Extracted JDBC value [0] - [4]
2024-07-17 09:51:28 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:51:28 - Extracted JDBC value [1] - [3]
2024-07-17 09:51:28 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:51:28 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1248664857
2024-07-17 09:51:28 - Extracted JDBC value [0] - [4]
2024-07-17 09:51:28 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1395148761
2024-07-17 09:51:28 - Extracted JDBC value [2] - [1234]
2024-07-17 09:51:28 - Extracted JDBC value [3] - [null]
2024-07-17 09:51:28 - Extracted JDBC value [4] - [1234]
2024-07-17 09:51:28 - Extracted JDBC value [5] - [1234]
2024-07-17 09:51:28 - Extracted JDBC value [6] - [1234]
2024-07-17 09:51:28 - Extracted JDBC value [7] - [null]
2024-07-17 09:51:28 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:51:28 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1395148761
2024-07-17 09:51:28 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5ac7aa3f
2024-07-17 09:51:28 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:51:28 - Securing GET /api/users/4
2024-07-17 09:51:28 - Secured GET /api/users/4
2024-07-17 09:51:28 - GET "/api/users/4", parameters={}
2024-07-17 09:51:28 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:51:28 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:51:28 - begin
2024-07-17 09:51:28 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:51:28 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1284139377 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1219879992 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:51:28 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:51:28 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:51:28 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:51:28 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1022406286
2024-07-17 09:51:28 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:51:28 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:51:28 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:51:28 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:51:28 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d989c05
2024-07-17 09:51:28 - committing
2024-07-17 09:51:28 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:51:28 - Writing [com.example.taskmanagement.model.User@3cf0ae8e]
2024-07-17 09:51:28 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:51:28 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@51340169 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1082638733 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1775633708 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:51:28 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:51:28 - Extracted JDBC value [0] - [4]
2024-07-17 09:51:28 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:51:28 - Extracted JDBC value [1] - [3]
2024-07-17 09:51:28 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:51:28 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1151671636
2024-07-17 09:51:28 - Extracted JDBC value [0] - [4]
2024-07-17 09:51:28 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1535314188
2024-07-17 09:51:28 - Extracted JDBC value [2] - [1234]
2024-07-17 09:51:28 - Extracted JDBC value [3] - [null]
2024-07-17 09:51:28 - Extracted JDBC value [4] - [1234]
2024-07-17 09:51:28 - Extracted JDBC value [5] - [1234]
2024-07-17 09:51:28 - Extracted JDBC value [6] - [1234]
2024-07-17 09:51:28 - Extracted JDBC value [7] - [null]
2024-07-17 09:51:28 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:51:28 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1535314188
2024-07-17 09:51:28 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@1d839f89
2024-07-17 09:51:28 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:51:28 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:51:28 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:51:28 - Completed 200 OK
2024-07-17 09:51:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:51:28 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:51:28 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:51:28 - Completed 200 OK
2024-07-17 09:51:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:04 - Securing GET /api/users
2024-07-17 09:52:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:04 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:04 - Securing GET /error
2024-07-17 09:52:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:04 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:04 - Securing GET /api/users/4
2024-07-17 09:52:04 - Securing GET /api/users
2024-07-17 09:52:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:04 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:04 - Secured GET /api/users/4
2024-07-17 09:52:04 - GET "/api/users/4", parameters={}
2024-07-17 09:52:04 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:52:04 - Securing GET /error
2024-07-17 09:52:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:04 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:52:04 - begin
2024-07-17 09:52:04 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1519061832 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1588888769 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:52:04 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:52:04 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:52:04 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:04 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 719838166
2024-07-17 09:52:04 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:52:04 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:52:04 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:52:04 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:52:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7b99fe3c
2024-07-17 09:52:04 - committing
2024-07-17 09:52:04 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:52:04 - Writing [com.example.taskmanagement.model.User@2ae7dbd6]
2024-07-17 09:52:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1705833421 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1267408471 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@2144821508 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:52:04 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:52:04 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:04 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:04 - Extracted JDBC value [1] - [3]
2024-07-17 09:52:04 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:52:04 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 311090288
2024-07-17 09:52:04 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:04 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1351602375
2024-07-17 09:52:04 - Extracted JDBC value [2] - [1234]
2024-07-17 09:52:04 - Extracted JDBC value [3] - [null]
2024-07-17 09:52:04 - Extracted JDBC value [4] - [1234]
2024-07-17 09:52:04 - Extracted JDBC value [5] - [1234]
2024-07-17 09:52:04 - Extracted JDBC value [6] - [1234]
2024-07-17 09:52:04 - Extracted JDBC value [7] - [null]
2024-07-17 09:52:04 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:52:04 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1351602375
2024-07-17 09:52:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@56915064
2024-07-17 09:52:04 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:52:04 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:52:04 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:52:04 - Completed 200 OK
2024-07-17 09:52:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:04 - Securing GET /api/users/4
2024-07-17 09:52:04 - Secured GET /api/users/4
2024-07-17 09:52:04 - GET "/api/users/4", parameters={}
2024-07-17 09:52:04 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:52:04 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:52:04 - begin
2024-07-17 09:52:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@707624581 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@772992792 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:52:04 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:52:04 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:52:04 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:04 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1521613014
2024-07-17 09:52:04 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:52:04 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:52:04 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:52:04 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:52:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b3f8bf1
2024-07-17 09:52:04 - committing
2024-07-17 09:52:04 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:52:04 - Writing [com.example.taskmanagement.model.User@5ab1f8d6]
2024-07-17 09:52:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@247972080 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@2028378257 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@259126399 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:52:04 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:52:04 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:04 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:04 - Extracted JDBC value [1] - [3]
2024-07-17 09:52:04 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:52:04 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 123658312
2024-07-17 09:52:04 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:04 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1675802295
2024-07-17 09:52:04 - Extracted JDBC value [2] - [1234]
2024-07-17 09:52:04 - Extracted JDBC value [3] - [null]
2024-07-17 09:52:04 - Extracted JDBC value [4] - [1234]
2024-07-17 09:52:04 - Extracted JDBC value [5] - [1234]
2024-07-17 09:52:04 - Extracted JDBC value [6] - [1234]
2024-07-17 09:52:04 - Extracted JDBC value [7] - [null]
2024-07-17 09:52:04 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:52:04 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1675802295
2024-07-17 09:52:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@78c3ed0
2024-07-17 09:52:04 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:52:04 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:52:04 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:52:04 - Completed 200 OK
2024-07-17 09:52:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:41 - Securing GET /api/users
2024-07-17 09:52:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:41 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:41 - Securing GET /error
2024-07-17 09:52:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:41 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:41 - Securing GET /api/users/4
2024-07-17 09:52:41 - Securing GET /api/users
2024-07-17 09:52:41 - Secured GET /api/users/4
2024-07-17 09:52:41 - GET "/api/users/4", parameters={}
2024-07-17 09:52:41 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:52:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:41 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:41 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:52:41 - begin
2024-07-17 09:52:41 - Securing GET /error
2024-07-17 09:52:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:41 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@271760405 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1131106348 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:52:41 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:52:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:41 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:41 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:52:41 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:41 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1730530181
2024-07-17 09:52:41 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:52:41 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:52:41 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:52:41 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:52:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@69e05598
2024-07-17 09:52:41 - committing
2024-07-17 09:52:41 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:52:41 - Writing [com.example.taskmanagement.model.User@6725cb85]
2024-07-17 09:52:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:41 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1390345396 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@472759911 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@2005558511 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:52:41 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:52:41 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:41 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:41 - Extracted JDBC value [1] - [3]
2024-07-17 09:52:41 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:52:41 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1259376406
2024-07-17 09:52:41 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:41 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@2119572861
2024-07-17 09:52:41 - Extracted JDBC value [2] - [1234]
2024-07-17 09:52:41 - Extracted JDBC value [3] - [null]
2024-07-17 09:52:41 - Extracted JDBC value [4] - [1234]
2024-07-17 09:52:41 - Extracted JDBC value [5] - [1234]
2024-07-17 09:52:41 - Extracted JDBC value [6] - [1234]
2024-07-17 09:52:41 - Extracted JDBC value [7] - [null]
2024-07-17 09:52:41 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:52:41 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@2119572861
2024-07-17 09:52:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6f193787
2024-07-17 09:52:41 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:52:41 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:52:41 - Securing GET /api/users/4
2024-07-17 09:52:41 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:52:41 - Completed 200 OK
2024-07-17 09:52:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:41 - Secured GET /api/users/4
2024-07-17 09:52:41 - GET "/api/users/4", parameters={}
2024-07-17 09:52:41 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:52:41 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:52:41 - begin
2024-07-17 09:52:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:41 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1194144020 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@279591963 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:52:41 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:52:41 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:52:41 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:41 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 664344982
2024-07-17 09:52:41 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:52:41 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:52:41 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:52:41 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:52:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@74daddde
2024-07-17 09:52:41 - committing
2024-07-17 09:52:41 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:52:41 - Writing [com.example.taskmanagement.model.User@27991996]
2024-07-17 09:52:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:41 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@59499881 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1886783713 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1390419740 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:52:41 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:52:41 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:41 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:41 - Extracted JDBC value [1] - [3]
2024-07-17 09:52:41 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:52:41 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 715039150
2024-07-17 09:52:41 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:41 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1712501658
2024-07-17 09:52:41 - Extracted JDBC value [2] - [1234]
2024-07-17 09:52:41 - Extracted JDBC value [3] - [null]
2024-07-17 09:52:41 - Extracted JDBC value [4] - [1234]
2024-07-17 09:52:41 - Extracted JDBC value [5] - [1234]
2024-07-17 09:52:41 - Extracted JDBC value [6] - [1234]
2024-07-17 09:52:41 - Extracted JDBC value [7] - [null]
2024-07-17 09:52:41 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:52:41 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1712501658
2024-07-17 09:52:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@7854431e
2024-07-17 09:52:41 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:52:41 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:52:41 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:52:41 - Completed 200 OK
2024-07-17 09:52:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:44 - Securing GET /api/users
2024-07-17 09:52:44 - Securing GET /api/users/4
2024-07-17 09:52:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:44 - Secured GET /api/users/4
2024-07-17 09:52:44 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:44 - GET "/api/users/4", parameters={}
2024-07-17 09:52:44 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:52:44 - Securing GET /error
2024-07-17 09:52:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:44 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:52:44 - begin
2024-07-17 09:52:44 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:44 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1629170998 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1696904653 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:52:44 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:52:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:52:44 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 298632729
2024-07-17 09:52:44 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:52:44 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:52:44 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:52:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:52:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4009d842
2024-07-17 09:52:44 - committing
2024-07-17 09:52:44 - Securing GET /api/users
2024-07-17 09:52:44 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:52:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:44 - Writing [com.example.taskmanagement.model.User@11ccc619]
2024-07-17 09:52:44 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:44 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@796456948 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1250098744 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1145562338 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:52:44 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:52:44 - Securing GET /error
2024-07-17 09:52:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:44 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:44 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:44 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:44 - Extracted JDBC value [1] - [3]
2024-07-17 09:52:44 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:52:44 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 830627537
2024-07-17 09:52:44 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:44 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1367774000
2024-07-17 09:52:44 - Extracted JDBC value [2] - [1234]
2024-07-17 09:52:44 - Extracted JDBC value [3] - [null]
2024-07-17 09:52:44 - Extracted JDBC value [4] - [1234]
2024-07-17 09:52:44 - Extracted JDBC value [5] - [1234]
2024-07-17 09:52:44 - Extracted JDBC value [6] - [1234]
2024-07-17 09:52:44 - Extracted JDBC value [7] - [null]
2024-07-17 09:52:44 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:52:44 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1367774000
2024-07-17 09:52:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@4a19ccf7
2024-07-17 09:52:44 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:52:44 - Securing GET /api/users/4
2024-07-17 09:52:44 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:52:44 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:52:44 - Completed 200 OK
2024-07-17 09:52:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:44 - Secured GET /api/users/4
2024-07-17 09:52:44 - GET "/api/users/4", parameters={}
2024-07-17 09:52:44 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:52:44 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:52:44 - begin
2024-07-17 09:52:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:44 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1374646337 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@356671312 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:52:44 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:52:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:52:44 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 746001635
2024-07-17 09:52:44 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:52:44 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:52:44 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:52:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:52:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3135f28
2024-07-17 09:52:44 - committing
2024-07-17 09:52:44 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:52:44 - Writing [com.example.taskmanagement.model.User@2c7714e3]
2024-07-17 09:52:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:44 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@300501613 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@2046742980 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1619864524 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:52:44 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:52:44 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:44 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:44 - Extracted JDBC value [1] - [3]
2024-07-17 09:52:44 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:52:44 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1575393106
2024-07-17 09:52:44 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:44 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@734553826
2024-07-17 09:52:44 - Extracted JDBC value [2] - [1234]
2024-07-17 09:52:44 - Extracted JDBC value [3] - [null]
2024-07-17 09:52:44 - Extracted JDBC value [4] - [1234]
2024-07-17 09:52:44 - Extracted JDBC value [5] - [1234]
2024-07-17 09:52:44 - Extracted JDBC value [6] - [1234]
2024-07-17 09:52:44 - Extracted JDBC value [7] - [null]
2024-07-17 09:52:44 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:52:44 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@734553826
2024-07-17 09:52:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@54bc0469
2024-07-17 09:52:44 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:52:44 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:52:44 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:52:44 - Completed 200 OK
2024-07-17 09:52:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:56 - Securing GET /api/users
2024-07-17 09:52:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:56 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:56 - Securing GET /error
2024-07-17 09:52:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:56 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:56 - Securing GET /api/users/4
2024-07-17 09:52:56 - Securing GET /api/users
2024-07-17 09:52:56 - Secured GET /api/users/4
2024-07-17 09:52:56 - GET "/api/users/4", parameters={}
2024-07-17 09:52:56 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:52:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:56 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:52:56 - begin
2024-07-17 09:52:56 - Securing GET /error
2024-07-17 09:52:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:56 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:52:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1306013062 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1239916773 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:52:56 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:52:56 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:52:56 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:56 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1034135935
2024-07-17 09:52:56 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:52:56 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:52:56 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:52:56 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:52:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6ccad8f2
2024-07-17 09:52:56 - committing
2024-07-17 09:52:56 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:52:56 - Writing [com.example.taskmanagement.model.User@3da3a97f]
2024-07-17 09:52:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@633761693 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1379082085 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1753497753 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:52:56 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:52:56 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:56 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:56 - Extracted JDBC value [1] - [3]
2024-07-17 09:52:56 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:52:56 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1197958592
2024-07-17 09:52:56 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:56 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1228396198
2024-07-17 09:52:56 - Extracted JDBC value [2] - [1234]
2024-07-17 09:52:56 - Extracted JDBC value [3] - [null]
2024-07-17 09:52:56 - Extracted JDBC value [4] - [1234]
2024-07-17 09:52:56 - Extracted JDBC value [5] - [1234]
2024-07-17 09:52:56 - Extracted JDBC value [6] - [1234]
2024-07-17 09:52:56 - Extracted JDBC value [7] - [null]
2024-07-17 09:52:56 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:52:56 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1228396198
2024-07-17 09:52:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@dad753d
2024-07-17 09:52:56 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:52:56 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:52:56 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:52:56 - Completed 200 OK
2024-07-17 09:52:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:52:56 - Securing GET /api/users/4
2024-07-17 09:52:56 - Secured GET /api/users/4
2024-07-17 09:52:56 - GET "/api/users/4", parameters={}
2024-07-17 09:52:56 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:52:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:52:56 - begin
2024-07-17 09:52:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1692531594 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1625191374 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:52:56 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:52:56 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:52:56 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:56 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 347305857
2024-07-17 09:52:56 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:52:56 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:52:56 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:52:56 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:52:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@45f30efe
2024-07-17 09:52:56 - committing
2024-07-17 09:52:56 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:52:56 - Writing [com.example.taskmanagement.model.User@14b37781]
2024-07-17 09:52:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:52:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@439643482 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@476368432 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1102952380 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:52:56 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:52:56 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:56 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:52:56 - Extracted JDBC value [1] - [3]
2024-07-17 09:52:56 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:52:56 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1997329187
2024-07-17 09:52:56 - Extracted JDBC value [0] - [4]
2024-07-17 09:52:56 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@123741914
2024-07-17 09:52:56 - Extracted JDBC value [2] - [1234]
2024-07-17 09:52:56 - Extracted JDBC value [3] - [null]
2024-07-17 09:52:56 - Extracted JDBC value [4] - [1234]
2024-07-17 09:52:56 - Extracted JDBC value [5] - [1234]
2024-07-17 09:52:56 - Extracted JDBC value [6] - [1234]
2024-07-17 09:52:56 - Extracted JDBC value [7] - [null]
2024-07-17 09:52:56 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:52:56 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@123741914
2024-07-17 09:52:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5ba08a29
2024-07-17 09:52:56 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:52:56 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:52:56 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:52:56 - Completed 200 OK
2024-07-17 09:52:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:23 - Securing GET /api/users
2024-07-17 09:53:23 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:23 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:53:23 - Securing GET /error
2024-07-17 09:53:23 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:23 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:53:23 - Securing GET /api/users/4
2024-07-17 09:53:23 - Securing GET /api/users
2024-07-17 09:53:23 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:23 - Secured GET /api/users/4
2024-07-17 09:53:23 - GET "/api/users/4", parameters={}
2024-07-17 09:53:23 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:53:23 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:53:23 - Securing GET /error
2024-07-17 09:53:23 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:23 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:53:23 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:53:23 - begin
2024-07-17 09:53:23 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:53:23 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1154271714 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@461406980 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:53:23 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:53:23 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:53:23 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:53:23 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1528553256
2024-07-17 09:53:23 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:53:23 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:53:23 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:53:23 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:53:23 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3686b811
2024-07-17 09:53:23 - committing
2024-07-17 09:53:23 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:53:23 - Writing [com.example.taskmanagement.model.User@5b1bdf28]
2024-07-17 09:53:23 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:53:23 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@505876880 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1030188583 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1042419626 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:53:23 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:53:23 - Extracted JDBC value [0] - [4]
2024-07-17 09:53:23 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:53:23 - Extracted JDBC value [1] - [3]
2024-07-17 09:53:23 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:53:23 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 110971655
2024-07-17 09:53:23 - Extracted JDBC value [0] - [4]
2024-07-17 09:53:23 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1142751212
2024-07-17 09:53:23 - Extracted JDBC value [2] - [1234]
2024-07-17 09:53:23 - Extracted JDBC value [3] - [null]
2024-07-17 09:53:23 - Extracted JDBC value [4] - [1234]
2024-07-17 09:53:23 - Extracted JDBC value [5] - [1234]
2024-07-17 09:53:23 - Extracted JDBC value [6] - [1234]
2024-07-17 09:53:23 - Extracted JDBC value [7] - [null]
2024-07-17 09:53:23 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:53:23 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1142751212
2024-07-17 09:53:23 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@286c4b21
2024-07-17 09:53:23 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:53:23 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:53:23 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:53:23 - Completed 200 OK
2024-07-17 09:53:23 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:23 - Securing GET /api/users/4
2024-07-17 09:53:23 - Secured GET /api/users/4
2024-07-17 09:53:23 - GET "/api/users/4", parameters={}
2024-07-17 09:53:23 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:53:23 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:53:23 - begin
2024-07-17 09:53:23 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:53:23 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@152990881 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@220324186 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:53:23 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:53:23 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:53:23 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:53:23 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2040656607
2024-07-17 09:53:23 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:53:23 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:53:23 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:53:23 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:53:23 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@280c81d5
2024-07-17 09:53:23 - committing
2024-07-17 09:53:23 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:53:23 - Writing [com.example.taskmanagement.model.User@79a1f2df]
2024-07-17 09:53:23 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:53:23 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1552167538 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1611459205 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@742579576 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:53:23 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:53:23 - Extracted JDBC value [0] - [4]
2024-07-17 09:53:23 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:53:23 - Extracted JDBC value [1] - [3]
2024-07-17 09:53:23 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:53:23 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1416071367
2024-07-17 09:53:23 - Extracted JDBC value [0] - [4]
2024-07-17 09:53:23 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@2064181120
2024-07-17 09:53:23 - Extracted JDBC value [2] - [1234]
2024-07-17 09:53:23 - Extracted JDBC value [3] - [null]
2024-07-17 09:53:23 - Extracted JDBC value [4] - [1234]
2024-07-17 09:53:23 - Extracted JDBC value [5] - [1234]
2024-07-17 09:53:23 - Extracted JDBC value [6] - [1234]
2024-07-17 09:53:23 - Extracted JDBC value [7] - [null]
2024-07-17 09:53:23 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:53:23 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@2064181120
2024-07-17 09:53:23 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6e74362e
2024-07-17 09:53:23 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:53:23 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:53:23 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:53:23 - Completed 200 OK
2024-07-17 09:53:23 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:34 - Securing GET /api/users
2024-07-17 09:53:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:34 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:53:34 - Securing GET /error
2024-07-17 09:53:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:34 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:53:34 - Securing GET /api/users/4
2024-07-17 09:53:34 - Secured GET /api/users/4
2024-07-17 09:53:34 - GET "/api/users/4", parameters={}
2024-07-17 09:53:34 - Securing GET /api/users
2024-07-17 09:53:34 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:53:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:34 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:53:34 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:53:34 - begin
2024-07-17 09:53:34 - Securing GET /error
2024-07-17 09:53:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:53:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@62991923 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1794405662 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:53:34 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:53:34 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:53:34 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:53:34 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:53:34 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1452066723
2024-07-17 09:53:34 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:53:34 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:53:34 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:53:34 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:53:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3cbe80ec
2024-07-17 09:53:34 - committing
2024-07-17 09:53:34 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:53:34 - Writing [com.example.taskmanagement.model.User@568cc7a3]
2024-07-17 09:53:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:53:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1723226795 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@828351688 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@2033118191 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:53:34 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:53:34 - Extracted JDBC value [0] - [4]
2024-07-17 09:53:34 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:53:34 - Extracted JDBC value [1] - [3]
2024-07-17 09:53:34 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:53:34 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 235205502
2024-07-17 09:53:34 - Extracted JDBC value [0] - [4]
2024-07-17 09:53:34 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@521737449
2024-07-17 09:53:34 - Extracted JDBC value [2] - [1234]
2024-07-17 09:53:34 - Extracted JDBC value [3] - [null]
2024-07-17 09:53:34 - Extracted JDBC value [4] - [1234]
2024-07-17 09:53:34 - Extracted JDBC value [5] - [1234]
2024-07-17 09:53:34 - Extracted JDBC value [6] - [1234]
2024-07-17 09:53:34 - Extracted JDBC value [7] - [null]
2024-07-17 09:53:34 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:53:34 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@521737449
2024-07-17 09:53:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@7b10c2
2024-07-17 09:53:34 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:53:34 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:53:34 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:53:34 - Completed 200 OK
2024-07-17 09:53:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:53:34 - Securing GET /api/users/4
2024-07-17 09:53:34 - Secured GET /api/users/4
2024-07-17 09:53:34 - GET "/api/users/4", parameters={}
2024-07-17 09:53:34 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:53:34 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:53:34 - begin
2024-07-17 09:53:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:53:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@955550680 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1019942942 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:53:34 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:53:34 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:53:34 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:53:34 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1216011965
2024-07-17 09:53:34 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:53:34 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:53:34 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:53:34 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:53:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@19e67eac
2024-07-17 09:53:34 - committing
2024-07-17 09:53:34 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:53:34 - Writing [com.example.taskmanagement.model.User@487adebd]
2024-07-17 09:53:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:53:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@849554871 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@932255923 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@497550323 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:53:34 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:53:34 - Extracted JDBC value [0] - [4]
2024-07-17 09:53:34 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:53:34 - Extracted JDBC value [1] - [3]
2024-07-17 09:53:34 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:53:34 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 824276048
2024-07-17 09:53:34 - Extracted JDBC value [0] - [4]
2024-07-17 09:53:34 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@747975748
2024-07-17 09:53:34 - Extracted JDBC value [2] - [1234]
2024-07-17 09:53:34 - Extracted JDBC value [3] - [null]
2024-07-17 09:53:34 - Extracted JDBC value [4] - [1234]
2024-07-17 09:53:34 - Extracted JDBC value [5] - [1234]
2024-07-17 09:53:34 - Extracted JDBC value [6] - [1234]
2024-07-17 09:53:34 - Extracted JDBC value [7] - [null]
2024-07-17 09:53:34 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:53:34 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@747975748
2024-07-17 09:53:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6c4b4e1c
2024-07-17 09:53:34 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:53:34 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:53:34 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:53:34 - Completed 200 OK
2024-07-17 09:53:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:54:05 - Securing OPTIONS /api/users/login
2024-07-17 09:54:05 - Securing POST /api/users/login
2024-07-17 09:54:06 - Secured POST /api/users/login
2024-07-17 09:54:06 - POST "/api/users/login", parameters={}
2024-07-17 09:54:06 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-17 09:54:06 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@41dc3f3e]
2024-07-17 09:54:06 - Created new SQL alias : u1_0
2024-07-17 09:54:06 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(293878822100))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 09:54:06 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@61ba88bb
2024-07-17 09:54:06 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(293878822100).username) 
2024-07-17 09:54:06 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(293878822100)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(293878822100).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(293878822100).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(293878822100).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(293878822100).username]

2024-07-17 09:54:06 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(293878822100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 09:54:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 09:54:06 - Initializer list:
	  com.example.taskmanagement.model.User(293878822100) -> EntityResultInitializer(com.example.taskmanagement.model.User(293878822100))@1959514627 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(293878822100).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(293878822100).tasks)@361222302 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:54:06 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 09:54:06 - Extracted JDBC value [0] - [4]
2024-07-17 09:54:06 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(293878822100)): 4
2024-07-17 09:54:06 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(293878822100).tasks#4
2024-07-17 09:54:06 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(293878822100)#4] : 1959854578
2024-07-17 09:54:06 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:54:06 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:54:06 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:54:06 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(293878822100)#4
2024-07-17 09:54:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e301abc
2024-07-17 09:54:06 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:54:06 - Writing [{message=Login successful!, userId=4}]
2024-07-17 09:54:06 - Completed 200 OK
2024-07-17 09:54:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:54:09 - Securing GET /api/users/4
2024-07-17 09:54:09 - Securing GET /api/users
2024-07-17 09:54:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:54:09 - Secured GET /api/users/4
2024-07-17 09:54:09 - GET "/api/users/4", parameters={}
2024-07-17 09:54:09 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:54:09 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:54:09 - Securing GET /error
2024-07-17 09:54:09 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:54:09 - begin
2024-07-17 09:54:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:54:09 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:54:09 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:54:09 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1579411777 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2104770690 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:54:09 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:54:09 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:54:09 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:54:09 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1662124561
2024-07-17 09:54:09 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:54:09 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:54:09 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:54:09 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:54:09 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@379527a4
2024-07-17 09:54:09 - committing
2024-07-17 09:54:09 - Securing GET /api/users
2024-07-17 09:54:09 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:54:09 - Writing [com.example.taskmanagement.model.User@63120211]
2024-07-17 09:54:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:54:09 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:54:09 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:54:09 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@853525024 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1732393724 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@2046069175 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:54:09 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:54:09 - Securing GET /error
2024-07-17 09:54:09 - Extracted JDBC value [0] - [4]
2024-07-17 09:54:09 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:54:09 - Extracted JDBC value [1] - [3]
2024-07-17 09:54:09 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:54:09 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1880904945
2024-07-17 09:54:09 - Extracted JDBC value [0] - [4]
2024-07-17 09:54:09 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1019031201
2024-07-17 09:54:09 - Extracted JDBC value [2] - [1234]
2024-07-17 09:54:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:54:09 - Extracted JDBC value [3] - [null]
2024-07-17 09:54:09 - Extracted JDBC value [4] - [1234]
2024-07-17 09:54:09 - Extracted JDBC value [5] - [1234]
2024-07-17 09:54:09 - Extracted JDBC value [6] - [1234]
2024-07-17 09:54:09 - Extracted JDBC value [7] - [null]
2024-07-17 09:54:09 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:54:09 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1019031201
2024-07-17 09:54:09 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@2df8d274
2024-07-17 09:54:09 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:54:09 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:54:09 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:54:09 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:54:09 - Completed 200 OK
2024-07-17 09:54:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:54:09 - Securing GET /api/users/4
2024-07-17 09:54:09 - Secured GET /api/users/4
2024-07-17 09:54:09 - GET "/api/users/4", parameters={}
2024-07-17 09:54:09 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:54:09 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:54:09 - begin
2024-07-17 09:54:09 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:54:09 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1874334529 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1175360203 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:54:09 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:54:09 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:54:09 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:54:09 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 292851965
2024-07-17 09:54:09 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:54:09 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:54:09 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:54:09 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:54:09 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@668e7646
2024-07-17 09:54:09 - committing
2024-07-17 09:54:09 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:54:09 - Writing [com.example.taskmanagement.model.User@117490fd]
2024-07-17 09:54:09 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:54:09 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@548505386 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1975262126 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1620410137 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:54:09 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:54:09 - Extracted JDBC value [0] - [4]
2024-07-17 09:54:09 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:54:09 - Extracted JDBC value [1] - [3]
2024-07-17 09:54:09 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:54:09 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1953440432
2024-07-17 09:54:09 - Extracted JDBC value [0] - [4]
2024-07-17 09:54:09 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@593416402
2024-07-17 09:54:09 - Extracted JDBC value [2] - [1234]
2024-07-17 09:54:09 - Extracted JDBC value [3] - [null]
2024-07-17 09:54:09 - Extracted JDBC value [4] - [1234]
2024-07-17 09:54:09 - Extracted JDBC value [5] - [1234]
2024-07-17 09:54:09 - Extracted JDBC value [6] - [1234]
2024-07-17 09:54:09 - Extracted JDBC value [7] - [null]
2024-07-17 09:54:09 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:54:09 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@593416402
2024-07-17 09:54:09 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@3f49e693
2024-07-17 09:54:09 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:54:09 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:54:09 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:54:09 - Completed 200 OK
2024-07-17 09:54:09 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:54:32 - Securing GET /api/users/4
2024-07-17 09:54:32 - Secured GET /api/users/4
2024-07-17 09:54:32 - GET "/api/users/4", parameters={}
2024-07-17 09:54:32 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:54:32 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:54:32 - begin
2024-07-17 09:54:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:54:32 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1834204092 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1466618290 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:54:32 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:54:32 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:54:32 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:54:32 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1531277060
2024-07-17 09:54:32 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:54:32 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:54:32 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:54:32 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:54:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1e8ff00
2024-07-17 09:54:32 - committing
2024-07-17 09:54:32 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:54:32 - Writing [com.example.taskmanagement.model.User@5b456f04]
2024-07-17 09:54:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:54:32 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@118803222 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1139234385 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@95527378 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:54:32 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:54:32 - Extracted JDBC value [0] - [4]
2024-07-17 09:54:32 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:54:32 - Extracted JDBC value [1] - [3]
2024-07-17 09:54:32 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:54:32 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1731099146
2024-07-17 09:54:32 - Extracted JDBC value [0] - [4]
2024-07-17 09:54:32 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1520681631
2024-07-17 09:54:32 - Extracted JDBC value [2] - [1234]
2024-07-17 09:54:32 - Extracted JDBC value [3] - [null]
2024-07-17 09:54:32 - Extracted JDBC value [4] - [1234]
2024-07-17 09:54:32 - Extracted JDBC value [5] - [1234]
2024-07-17 09:54:32 - Extracted JDBC value [6] - [1234]
2024-07-17 09:54:32 - Extracted JDBC value [7] - [null]
2024-07-17 09:54:32 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:54:32 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1520681631
2024-07-17 09:54:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6f99f80c
2024-07-17 09:54:32 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:54:32 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:54:32 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:54:32 - Completed 200 OK
2024-07-17 09:54:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:20 - Securing GET /api/users
2024-07-17 09:56:20 - Securing GET /api/users/4
2024-07-17 09:56:20 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:20 - Secured GET /api/users/4
2024-07-17 09:56:20 - GET "/api/users/4", parameters={}
2024-07-17 09:56:20 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:20 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:56:20 - Securing GET /error
2024-07-17 09:56:20 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:20 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:56:20 - begin
2024-07-17 09:56:20 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:20 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:20 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1214838780 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1913577232 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:56:20 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:56:20 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:56:20 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:20 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 509253366
2024-07-17 09:56:20 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:56:20 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:56:20 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:56:20 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:56:20 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@13820afb
2024-07-17 09:56:20 - Securing GET /api/users
2024-07-17 09:56:20 - committing
2024-07-17 09:56:20 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:20 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:56:20 - Writing [com.example.taskmanagement.model.User@1e5a96f6]
2024-07-17 09:56:20 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:20 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:20 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1518722654 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@26583760 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@37987787 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:56:20 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:56:20 - Securing GET /error
2024-07-17 09:56:20 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:20 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:20 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:20 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:20 - Extracted JDBC value [1] - [3]
2024-07-17 09:56:20 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:56:20 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1525783244
2024-07-17 09:56:20 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:20 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@438844530
2024-07-17 09:56:20 - Extracted JDBC value [2] - [1234]
2024-07-17 09:56:20 - Extracted JDBC value [3] - [null]
2024-07-17 09:56:20 - Extracted JDBC value [4] - [1234]
2024-07-17 09:56:20 - Extracted JDBC value [5] - [1234]
2024-07-17 09:56:20 - Extracted JDBC value [6] - [1234]
2024-07-17 09:56:20 - Extracted JDBC value [7] - [null]
2024-07-17 09:56:20 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:56:20 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@438844530
2024-07-17 09:56:20 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@458301a4
2024-07-17 09:56:20 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:56:20 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:56:20 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:56:20 - Completed 200 OK
2024-07-17 09:56:20 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:20 - Securing GET /api/users/4
2024-07-17 09:56:20 - Secured GET /api/users/4
2024-07-17 09:56:20 - GET "/api/users/4", parameters={}
2024-07-17 09:56:20 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:56:20 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:56:20 - begin
2024-07-17 09:56:20 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:20 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@867594484 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1125816938 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:56:20 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:56:20 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:56:20 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:20 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1793577202
2024-07-17 09:56:20 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:56:20 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:56:20 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:56:20 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:56:20 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6a1b1ab0
2024-07-17 09:56:20 - committing
2024-07-17 09:56:20 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:56:20 - Writing [com.example.taskmanagement.model.User@6ae7d0f2]
2024-07-17 09:56:20 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:20 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1699139519 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1446814887 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1681979978 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:56:20 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:56:20 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:20 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:20 - Extracted JDBC value [1] - [3]
2024-07-17 09:56:20 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:56:20 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 572505934
2024-07-17 09:56:20 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:20 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@2109328910
2024-07-17 09:56:20 - Extracted JDBC value [2] - [1234]
2024-07-17 09:56:20 - Extracted JDBC value [3] - [null]
2024-07-17 09:56:20 - Extracted JDBC value [4] - [1234]
2024-07-17 09:56:20 - Extracted JDBC value [5] - [1234]
2024-07-17 09:56:20 - Extracted JDBC value [6] - [1234]
2024-07-17 09:56:20 - Extracted JDBC value [7] - [null]
2024-07-17 09:56:20 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:56:20 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@2109328910
2024-07-17 09:56:20 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@416e83ed
2024-07-17 09:56:20 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:56:20 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:56:20 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:56:20 - Completed 200 OK
2024-07-17 09:56:20 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:32 - Securing GET /api/users
2024-07-17 09:56:32 - Securing GET /api/users/4
2024-07-17 09:56:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:32 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:32 - Secured GET /api/users/4
2024-07-17 09:56:32 - GET "/api/users/4", parameters={}
2024-07-17 09:56:32 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:56:32 - Securing GET /error
2024-07-17 09:56:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:32 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:32 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:56:32 - begin
2024-07-17 09:56:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:32 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@827449500 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1017527972 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:56:32 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:56:32 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:56:32 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:32 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2105287102
2024-07-17 09:56:32 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:56:32 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:56:32 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:56:32 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:56:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65cac2a0
2024-07-17 09:56:32 - Securing GET /api/users
2024-07-17 09:56:32 - committing
2024-07-17 09:56:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:32 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:32 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:56:32 - Writing [com.example.taskmanagement.model.User@7d7c21be]
2024-07-17 09:56:32 - Securing GET /error
2024-07-17 09:56:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:32 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@27948130 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1660350663 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1369108987 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:56:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:32 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:56:32 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:32 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:32 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:32 - Extracted JDBC value [1] - [3]
2024-07-17 09:56:32 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:56:32 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1966977472
2024-07-17 09:56:32 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:32 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1889690539
2024-07-17 09:56:32 - Extracted JDBC value [2] - [1234]
2024-07-17 09:56:32 - Extracted JDBC value [3] - [null]
2024-07-17 09:56:32 - Extracted JDBC value [4] - [1234]
2024-07-17 09:56:32 - Extracted JDBC value [5] - [1234]
2024-07-17 09:56:32 - Extracted JDBC value [6] - [1234]
2024-07-17 09:56:32 - Extracted JDBC value [7] - [null]
2024-07-17 09:56:32 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:56:32 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1889690539
2024-07-17 09:56:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@73ae93b5
2024-07-17 09:56:32 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:56:32 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:56:32 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:56:32 - Completed 200 OK
2024-07-17 09:56:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:32 - Securing GET /api/users/4
2024-07-17 09:56:32 - Secured GET /api/users/4
2024-07-17 09:56:32 - GET "/api/users/4", parameters={}
2024-07-17 09:56:32 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:56:32 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:56:32 - begin
2024-07-17 09:56:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:32 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2055571134 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@103851339 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:56:32 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:56:32 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:56:32 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:32 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 727825229
2024-07-17 09:56:32 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:56:32 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:56:32 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:56:32 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:56:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@593aabf1
2024-07-17 09:56:32 - committing
2024-07-17 09:56:32 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:56:32 - Writing [com.example.taskmanagement.model.User@2b61bb4d]
2024-07-17 09:56:32 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:32 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@972490570 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1403602178 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1606420901 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:56:32 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:56:32 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:32 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:32 - Extracted JDBC value [1] - [3]
2024-07-17 09:56:32 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:56:32 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 198407075
2024-07-17 09:56:32 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:32 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@678975895
2024-07-17 09:56:32 - Extracted JDBC value [2] - [1234]
2024-07-17 09:56:32 - Extracted JDBC value [3] - [null]
2024-07-17 09:56:32 - Extracted JDBC value [4] - [1234]
2024-07-17 09:56:32 - Extracted JDBC value [5] - [1234]
2024-07-17 09:56:32 - Extracted JDBC value [6] - [1234]
2024-07-17 09:56:32 - Extracted JDBC value [7] - [null]
2024-07-17 09:56:32 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:56:32 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@678975895
2024-07-17 09:56:32 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5401ce5d
2024-07-17 09:56:32 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:56:32 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:56:32 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:56:32 - Completed 200 OK
2024-07-17 09:56:32 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:34 - Securing GET /api/users
2024-07-17 09:56:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:34 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:34 - Securing GET /error
2024-07-17 09:56:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:34 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:34 - Securing GET /api/users/4
2024-07-17 09:56:34 - Secured GET /api/users/4
2024-07-17 09:56:34 - GET "/api/users/4", parameters={}
2024-07-17 09:56:34 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:56:34 - Securing GET /api/users
2024-07-17 09:56:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:34 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:34 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:56:34 - begin
2024-07-17 09:56:34 - Securing GET /error
2024-07-17 09:56:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@963710925 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1993756618 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:56:34 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:56:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:34 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:34 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:56:34 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:34 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1672926959
2024-07-17 09:56:34 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:56:34 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:56:34 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:56:34 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:56:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@582c5b04
2024-07-17 09:56:34 - committing
2024-07-17 09:56:34 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:56:34 - Writing [com.example.taskmanagement.model.User@63b6d6ef]
2024-07-17 09:56:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@449301154 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1845716155 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1422784004 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:56:34 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:56:34 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:34 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:34 - Extracted JDBC value [1] - [3]
2024-07-17 09:56:34 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:56:34 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1368341761
2024-07-17 09:56:34 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:34 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@668626252
2024-07-17 09:56:34 - Extracted JDBC value [2] - [1234]
2024-07-17 09:56:34 - Extracted JDBC value [3] - [null]
2024-07-17 09:56:34 - Extracted JDBC value [4] - [1234]
2024-07-17 09:56:34 - Extracted JDBC value [5] - [1234]
2024-07-17 09:56:34 - Extracted JDBC value [6] - [1234]
2024-07-17 09:56:34 - Extracted JDBC value [7] - [null]
2024-07-17 09:56:34 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:56:34 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@668626252
2024-07-17 09:56:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6a499ce2
2024-07-17 09:56:34 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:56:34 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:56:34 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:56:34 - Completed 200 OK
2024-07-17 09:56:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:34 - Securing GET /api/users/4
2024-07-17 09:56:34 - Secured GET /api/users/4
2024-07-17 09:56:34 - GET "/api/users/4", parameters={}
2024-07-17 09:56:34 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:56:34 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:56:34 - begin
2024-07-17 09:56:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1177988001 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@780083728 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:56:34 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:56:34 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:56:34 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:34 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 281494203
2024-07-17 09:56:34 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:56:34 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:56:34 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:56:34 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:56:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@be3d955
2024-07-17 09:56:34 - committing
2024-07-17 09:56:34 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:56:34 - Writing [com.example.taskmanagement.model.User@10c742bb]
2024-07-17 09:56:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1055751646 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@96565255 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@276635803 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:56:34 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:56:34 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:34 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:34 - Extracted JDBC value [1] - [3]
2024-07-17 09:56:34 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:56:34 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1991710216
2024-07-17 09:56:34 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:34 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1207934225
2024-07-17 09:56:34 - Extracted JDBC value [2] - [1234]
2024-07-17 09:56:34 - Extracted JDBC value [3] - [null]
2024-07-17 09:56:34 - Extracted JDBC value [4] - [1234]
2024-07-17 09:56:34 - Extracted JDBC value [5] - [1234]
2024-07-17 09:56:34 - Extracted JDBC value [6] - [1234]
2024-07-17 09:56:34 - Extracted JDBC value [7] - [null]
2024-07-17 09:56:34 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:56:34 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1207934225
2024-07-17 09:56:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@fb789bd
2024-07-17 09:56:34 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:56:34 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:56:34 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:56:34 - Completed 200 OK
2024-07-17 09:56:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:38 - Securing GET /api/users
2024-07-17 09:56:38 - Securing GET /api/users/4
2024-07-17 09:56:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:38 - Secured GET /api/users/4
2024-07-17 09:56:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:38 - GET "/api/users/4", parameters={}
2024-07-17 09:56:38 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:56:38 - Securing GET /error
2024-07-17 09:56:38 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:56:38 - begin
2024-07-17 09:56:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:38 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:38 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1379091520 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@218719367 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:56:38 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:56:38 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:56:38 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:38 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2115357286
2024-07-17 09:56:38 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:56:38 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:56:38 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:56:38 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:56:38 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f1df8af
2024-07-17 09:56:38 - committing
2024-07-17 09:56:38 - Securing GET /api/users
2024-07-17 09:56:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:38 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:56:38 - Writing [com.example.taskmanagement.model.User@7e15ca66]
2024-07-17 09:56:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:38 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:38 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1842908819 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@550011419 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@537972269 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:56:38 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:56:38 - Securing GET /error
2024-07-17 09:56:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:56:38 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:38 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:38 - Extracted JDBC value [1] - [3]
2024-07-17 09:56:38 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:56:38 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 554041720
2024-07-17 09:56:38 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:38 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@956216447
2024-07-17 09:56:38 - Extracted JDBC value [2] - [1234]
2024-07-17 09:56:38 - Extracted JDBC value [3] - [null]
2024-07-17 09:56:38 - Extracted JDBC value [4] - [1234]
2024-07-17 09:56:38 - Extracted JDBC value [5] - [1234]
2024-07-17 09:56:38 - Extracted JDBC value [6] - [1234]
2024-07-17 09:56:38 - Extracted JDBC value [7] - [null]
2024-07-17 09:56:38 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:56:38 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@956216447
2024-07-17 09:56:38 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@741c2d3
2024-07-17 09:56:38 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:56:38 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:56:38 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:56:38 - Completed 200 OK
2024-07-17 09:56:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:56:38 - Securing GET /api/users/4
2024-07-17 09:56:38 - Secured GET /api/users/4
2024-07-17 09:56:38 - GET "/api/users/4", parameters={}
2024-07-17 09:56:38 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:56:38 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:56:38 - begin
2024-07-17 09:56:38 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:38 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@666380571 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@861075916 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:56:38 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:56:38 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:56:38 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:38 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1418451528
2024-07-17 09:56:38 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:56:38 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:56:38 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:56:38 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:56:38 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a233f06
2024-07-17 09:56:38 - committing
2024-07-17 09:56:38 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:56:38 - Writing [com.example.taskmanagement.model.User@548bda48]
2024-07-17 09:56:38 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:56:38 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1818149093 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@36693831 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@559362827 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:56:38 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:56:38 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:38 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:56:38 - Extracted JDBC value [1] - [3]
2024-07-17 09:56:38 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:56:38 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1216385573
2024-07-17 09:56:38 - Extracted JDBC value [0] - [4]
2024-07-17 09:56:38 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1890829708
2024-07-17 09:56:38 - Extracted JDBC value [2] - [1234]
2024-07-17 09:56:38 - Extracted JDBC value [3] - [null]
2024-07-17 09:56:38 - Extracted JDBC value [4] - [1234]
2024-07-17 09:56:38 - Extracted JDBC value [5] - [1234]
2024-07-17 09:56:38 - Extracted JDBC value [6] - [1234]
2024-07-17 09:56:38 - Extracted JDBC value [7] - [null]
2024-07-17 09:56:38 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:56:38 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1890829708
2024-07-17 09:56:38 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@50572f55
2024-07-17 09:56:38 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:56:38 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:56:38 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:56:38 - Completed 200 OK
2024-07-17 09:56:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:17 - Securing GET /api/users/4
2024-07-17 09:59:17 - Secured GET /api/users/4
2024-07-17 09:59:17 - GET "/api/users/4", parameters={}
2024-07-17 09:59:17 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:17 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:17 - begin
2024-07-17 09:59:17 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:17 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1111021812 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2077405130 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:17 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:17 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:17 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:17 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 870903900
2024-07-17 09:59:17 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:17 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:17 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:17 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:17 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44c94c3e
2024-07-17 09:59:17 - committing
2024-07-17 09:59:17 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:17 - Writing [com.example.taskmanagement.model.User@33e8f05c]
2024-07-17 09:59:17 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:17 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@484530343 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@350964794 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@441276965 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:17 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:17 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:17 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:17 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:17 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:17 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1395299888
2024-07-17 09:59:17 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:17 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1571468564
2024-07-17 09:59:17 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:17 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:17 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:17 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:17 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:17 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:17 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:17 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1571468564
2024-07-17 09:59:17 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@23c67202
2024-07-17 09:59:17 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:17 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:17 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:17 - Completed 200 OK
2024-07-17 09:59:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:22 - Securing GET /api/users
2024-07-17 09:59:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:22 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:22 - Securing GET /error
2024-07-17 09:59:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:22 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:22 - Securing GET /api/users/4
2024-07-17 09:59:22 - Secured GET /api/users/4
2024-07-17 09:59:22 - GET "/api/users/4", parameters={}
2024-07-17 09:59:22 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:22 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:22 - begin
2024-07-17 09:59:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:22 - Securing GET /api/users
2024-07-17 09:59:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1860169933 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@546745416 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:22 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 711246891
2024-07-17 09:59:22 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:22 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:22 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@552c0ea6
2024-07-17 09:59:22 - Securing GET /error
2024-07-17 09:59:22 - committing
2024-07-17 09:59:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:22 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:22 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:22 - Writing [com.example.taskmanagement.model.User@2a64c42b]
2024-07-17 09:59:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@42121772 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@332963966 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@649381277 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:22 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:22 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:22 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:22 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:22 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:22 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 854714955
2024-07-17 09:59:22 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:22 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1057348035
2024-07-17 09:59:22 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:22 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:22 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:22 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:22 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:22 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:22 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:22 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1057348035
2024-07-17 09:59:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@32e949a5
2024-07-17 09:59:22 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:22 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:22 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:22 - Completed 200 OK
2024-07-17 09:59:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:22 - Securing GET /api/users/4
2024-07-17 09:59:22 - Secured GET /api/users/4
2024-07-17 09:59:22 - GET "/api/users/4", parameters={}
2024-07-17 09:59:22 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:22 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:22 - begin
2024-07-17 09:59:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1904936049 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1671589229 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 967044755
2024-07-17 09:59:22 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:22 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:22 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e3ce73
2024-07-17 09:59:22 - committing
2024-07-17 09:59:22 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:22 - Writing [com.example.taskmanagement.model.User@39a3ee93]
2024-07-17 09:59:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1928664760 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1784242532 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@646298122 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:22 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:22 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:22 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:22 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:22 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:22 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 746004426
2024-07-17 09:59:22 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:22 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1234843087
2024-07-17 09:59:22 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:22 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:22 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:22 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:22 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:22 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:22 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:22 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1234843087
2024-07-17 09:59:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@27a9b5a4
2024-07-17 09:59:22 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:22 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:22 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:22 - Completed 200 OK
2024-07-17 09:59:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:28 - Securing GET /api/users
2024-07-17 09:59:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:28 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:28 - Securing GET /error
2024-07-17 09:59:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:28 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:28 - Securing GET /api/users
2024-07-17 09:59:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:28 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:28 - Securing GET /error
2024-07-17 09:59:28 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:28 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:30 - Securing GET /api/users
2024-07-17 09:59:30 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:30 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:30 - Securing GET /error
2024-07-17 09:59:30 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:30 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:30 - Securing GET /api/users
2024-07-17 09:59:30 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:30 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:30 - Securing GET /error
2024-07-17 09:59:30 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:30 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:38 - Securing GET /api/users
2024-07-17 09:59:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:38 - Securing GET /error
2024-07-17 09:59:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:38 - Securing GET /api/users
2024-07-17 09:59:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:38 - Securing GET /error
2024-07-17 09:59:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:53 - Securing POST /api/users/login
2024-07-17 09:59:53 - Secured POST /api/users/login
2024-07-17 09:59:53 - POST "/api/users/login", parameters={}
2024-07-17 09:59:53 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-17 09:59:53 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@29d9ab2b]
2024-07-17 09:59:53 - Created new SQL alias : u1_0
2024-07-17 09:59:53 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(293878822100))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 09:59:53 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3d446895
2024-07-17 09:59:53 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(293878822100).username) 
2024-07-17 09:59:53 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(293878822100)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(293878822100).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(293878822100).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(293878822100).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(293878822100).username]

2024-07-17 09:59:53 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(293878822100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 09:59:53 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 09:59:53 - Initializer list:
	  com.example.taskmanagement.model.User(293878822100) -> EntityResultInitializer(com.example.taskmanagement.model.User(293878822100))@1711618383 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(293878822100).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(293878822100).tasks)@2015094234 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:53 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 09:59:53 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:53 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(293878822100)): 4
2024-07-17 09:59:53 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(293878822100).tasks#4
2024-07-17 09:59:53 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(293878822100)#4] : 1073648651
2024-07-17 09:59:53 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:53 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:53 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:53 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(293878822100)#4
2024-07-17 09:59:53 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6d2a45ab
2024-07-17 09:59:53 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:53 - Writing [{message=Login successful!, userId=4}]
2024-07-17 09:59:53 - Completed 200 OK
2024-07-17 09:59:53 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:57 - Securing GET /api/users/4
2024-07-17 09:59:57 - Securing GET /api/users
2024-07-17 09:59:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:57 - Secured GET /api/users/4
2024-07-17 09:59:57 - GET "/api/users/4", parameters={}
2024-07-17 09:59:57 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:57 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:57 - Securing GET /error
2024-07-17 09:59:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:57 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:57 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:57 - begin
2024-07-17 09:59:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:57 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1463038408 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@468287665 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:57 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:57 - Securing GET /api/users
2024-07-17 09:59:57 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:57 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:57 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2077831510
2024-07-17 09:59:57 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:57 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:57 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:57 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:57 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@379ce3df
2024-07-17 09:59:57 - committing
2024-07-17 09:59:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:57 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:57 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:57 - Writing [com.example.taskmanagement.model.User@7bd93156]
2024-07-17 09:59:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:57 - Securing GET /error
2024-07-17 09:59:57 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@663812491 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@488419719 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1305357280 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:57 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:57 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:57 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:57 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:57 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:57 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:57 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 167302585
2024-07-17 09:59:57 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:57 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@744671892
2024-07-17 09:59:57 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:57 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:57 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:57 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:57 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:57 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:57 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:57 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@744671892
2024-07-17 09:59:57 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@35557e4d
2024-07-17 09:59:57 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:57 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:57 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:57 - Completed 200 OK
2024-07-17 09:59:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:57 - Securing GET /api/users/4
2024-07-17 09:59:57 - Secured GET /api/users/4
2024-07-17 09:59:57 - GET "/api/users/4", parameters={}
2024-07-17 09:59:57 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:57 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:57 - begin
2024-07-17 09:59:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:57 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@837530760 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@565544829 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:57 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:57 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:57 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:57 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2031499177
2024-07-17 09:59:57 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:57 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:57 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:57 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:57 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6925bc7d
2024-07-17 09:59:57 - committing
2024-07-17 09:59:57 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:57 - Writing [com.example.taskmanagement.model.User@791637a9]
2024-07-17 09:59:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:57 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@414789489 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1111155966 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@112750224 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:57 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:57 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:57 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:57 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:57 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:57 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1165217380
2024-07-17 09:59:57 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:57 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1955973529
2024-07-17 09:59:57 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:57 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:57 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:57 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:57 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:57 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:57 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:57 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1955973529
2024-07-17 09:59:57 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@faf4b4
2024-07-17 09:59:57 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:57 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:57 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:57 - Completed 200 OK
2024-07-17 09:59:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - Securing GET /api/users
2024-07-17 09:59:58 - Securing GET /api/users/4
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - Secured GET /api/users/4
2024-07-17 09:59:58 - GET "/api/users/4", parameters={}
2024-07-17 09:59:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:58 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:58 - Securing GET /error
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:58 - begin
2024-07-17 09:59:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1563072941 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1286524128 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:58 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:58 - Securing GET /api/users
2024-07-17 09:59:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:58 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 694552689
2024-07-17 09:59:58 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:58 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:58 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@735389b
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - committing
2024-07-17 09:59:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:58 - Securing GET /error
2024-07-17 09:59:58 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - Writing [com.example.taskmanagement.model.User@29660871]
2024-07-17 09:59:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@2117087915 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1163754396 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1803706956 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:58 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:58 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:58 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:58 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 967161833
2024-07-17 09:59:58 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:58 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@328534129
2024-07-17 09:59:58 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:58 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:58 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@328534129
2024-07-17 09:59:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@414d2293
2024-07-17 09:59:58 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:58 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:58 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:58 - Completed 200 OK
2024-07-17 09:59:58 - Securing GET /api/users/4
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - Secured GET /api/users/4
2024-07-17 09:59:58 - GET "/api/users/4", parameters={}
2024-07-17 09:59:58 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:58 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:58 - begin
2024-07-17 09:59:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@724031284 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2111184742 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:58 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:58 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 268992498
2024-07-17 09:59:58 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:58 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:58 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@501aec29
2024-07-17 09:59:58 - committing
2024-07-17 09:59:58 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:58 - Writing [com.example.taskmanagement.model.User@10087ff2]
2024-07-17 09:59:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@445929998 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@69165913 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@65252439 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:58 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:58 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:58 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:58 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 264757684
2024-07-17 09:59:58 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:58 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1575514042
2024-07-17 09:59:58 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:58 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:58 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1575514042
2024-07-17 09:59:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@1158650f
2024-07-17 09:59:58 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:58 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:58 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:58 - Completed 200 OK
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - Securing GET /api/users
2024-07-17 09:59:58 - Securing GET /api/users/4
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - Secured GET /api/users/4
2024-07-17 09:59:58 - GET "/api/users/4", parameters={}
2024-07-17 09:59:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:58 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:58 - Securing GET /error
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:58 - begin
2024-07-17 09:59:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@643947961 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1516889637 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:58 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:58 - Securing GET /api/users
2024-07-17 09:59:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:58 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 39343877
2024-07-17 09:59:58 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:58 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:58 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d10ab9e
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - committing
2024-07-17 09:59:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:58 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:58 - Writing [com.example.taskmanagement.model.User@2585705]
2024-07-17 09:59:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:58 - Securing GET /error
2024-07-17 09:59:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1910470132 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1216219795 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@810157145 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:58 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 09:59:58 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:58 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:58 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1291214954
2024-07-17 09:59:58 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:58 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@387305893
2024-07-17 09:59:58 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:58 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:58 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@387305893
2024-07-17 09:59:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@2c7edd61
2024-07-17 09:59:58 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:58 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:58 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:58 - Completed 200 OK
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 09:59:58 - Securing GET /api/users/4
2024-07-17 09:59:58 - Secured GET /api/users/4
2024-07-17 09:59:58 - GET "/api/users/4", parameters={}
2024-07-17 09:59:58 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 09:59:58 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 09:59:58 - begin
2024-07-17 09:59:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2061913283 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1649234414 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 09:59:58 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 09:59:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 09:59:58 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 838629167
2024-07-17 09:59:58 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 09:59:58 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 09:59:58 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 09:59:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 09:59:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@16c9d8cd
2024-07-17 09:59:58 - committing
2024-07-17 09:59:58 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 09:59:58 - Writing [com.example.taskmanagement.model.User@31fc772f]
2024-07-17 09:59:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 09:59:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@408028462 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@360664209 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1302917443 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 09:59:58 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 09:59:58 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:58 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 09:59:58 - Extracted JDBC value [1] - [3]
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1245231446
2024-07-17 09:59:58 - Extracted JDBC value [0] - [4]
2024-07-17 09:59:58 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@968266463
2024-07-17 09:59:58 - Extracted JDBC value [2] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [3] - [null]
2024-07-17 09:59:58 - Extracted JDBC value [4] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [5] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [6] - [1234]
2024-07-17 09:59:58 - Extracted JDBC value [7] - [null]
2024-07-17 09:59:58 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 09:59:58 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@968266463
2024-07-17 09:59:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@40907bbb
2024-07-17 09:59:58 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 09:59:58 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 09:59:58 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 09:59:58 - Completed 200 OK
2024-07-17 09:59:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:00:00 - Securing GET /api/users
2024-07-17 10:00:00 - Securing GET /api/users/4
2024-07-17 10:00:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:00:00 - Secured GET /api/users/4
2024-07-17 10:00:00 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:00:00 - GET "/api/users/4", parameters={}
2024-07-17 10:00:00 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:00:00 - Securing GET /error
2024-07-17 10:00:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:00:00 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:00:00 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:00:00 - begin
2024-07-17 10:00:00 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:00:00 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1242365439 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@290921012 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:00:00 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:00:00 - Securing GET /api/users
2024-07-17 10:00:00 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:00:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:00:00 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:00:00 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 39107450
2024-07-17 10:00:00 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:00:00 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:00:00 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:00:00 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:00:00 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1505b1cc
2024-07-17 10:00:00 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:00:00 - committing
2024-07-17 10:00:00 - Securing GET /error
2024-07-17 10:00:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:00:00 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:00:00 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:00:00 - Writing [com.example.taskmanagement.model.User@254bb7a]
2024-07-17 10:00:00 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:00:00 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1326011338 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@943254514 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@767720 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:00:00 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:00:00 - Extracted JDBC value [0] - [4]
2024-07-17 10:00:00 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:00:00 - Extracted JDBC value [1] - [3]
2024-07-17 10:00:00 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:00:00 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 529734422
2024-07-17 10:00:00 - Extracted JDBC value [0] - [4]
2024-07-17 10:00:00 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@729520062
2024-07-17 10:00:00 - Extracted JDBC value [2] - [1234]
2024-07-17 10:00:00 - Extracted JDBC value [3] - [null]
2024-07-17 10:00:00 - Extracted JDBC value [4] - [1234]
2024-07-17 10:00:00 - Extracted JDBC value [5] - [1234]
2024-07-17 10:00:00 - Extracted JDBC value [6] - [1234]
2024-07-17 10:00:00 - Extracted JDBC value [7] - [null]
2024-07-17 10:00:00 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:00:00 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@729520062
2024-07-17 10:00:00 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@42f252fa
2024-07-17 10:00:00 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:00:00 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:00:00 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:00:00 - Completed 200 OK
2024-07-17 10:00:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:00:00 - Securing GET /api/users/4
2024-07-17 10:00:00 - Secured GET /api/users/4
2024-07-17 10:00:00 - GET "/api/users/4", parameters={}
2024-07-17 10:00:00 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:00:00 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:00:00 - begin
2024-07-17 10:00:00 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:00:00 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2083128203 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1415925306 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:00:00 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:00:00 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:00:00 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:00:00 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1002608777
2024-07-17 10:00:00 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:00:00 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:00:00 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:00:00 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:00:00 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5cea609e
2024-07-17 10:00:00 - committing
2024-07-17 10:00:00 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:00:00 - Writing [com.example.taskmanagement.model.User@3bc29889]
2024-07-17 10:00:00 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:00:00 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@603368964 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@653362578 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@697368386 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:00:00 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:00:00 - Extracted JDBC value [0] - [4]
2024-07-17 10:00:00 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:00:00 - Extracted JDBC value [1] - [3]
2024-07-17 10:00:00 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:00:00 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1653727280
2024-07-17 10:00:00 - Extracted JDBC value [0] - [4]
2024-07-17 10:00:00 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1160254805
2024-07-17 10:00:00 - Extracted JDBC value [2] - [1234]
2024-07-17 10:00:00 - Extracted JDBC value [3] - [null]
2024-07-17 10:00:00 - Extracted JDBC value [4] - [1234]
2024-07-17 10:00:00 - Extracted JDBC value [5] - [1234]
2024-07-17 10:00:00 - Extracted JDBC value [6] - [1234]
2024-07-17 10:00:00 - Extracted JDBC value [7] - [null]
2024-07-17 10:00:00 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:00:00 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1160254805
2024-07-17 10:00:00 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@4cd569cf
2024-07-17 10:00:00 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:00:00 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:00:00 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:00:00 - Completed 200 OK
2024-07-17 10:00:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:55 - Securing GET /api/users/4
2024-07-17 10:01:55 - Secured GET /api/users/4
2024-07-17 10:01:55 - GET "/api/users/4", parameters={}
2024-07-17 10:01:55 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:01:55 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:01:55 - begin
2024-07-17 10:01:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:55 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@66603615 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@316966553 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:01:55 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:01:55 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:01:55 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:55 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 916267358
2024-07-17 10:01:55 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:01:55 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:01:55 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:01:55 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:01:55 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f44a0f0
2024-07-17 10:01:55 - committing
2024-07-17 10:01:55 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:01:55 - Writing [com.example.taskmanagement.model.User@369d215e]
2024-07-17 10:01:55 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:55 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1443294652 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@191545183 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1631833570 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:01:55 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:01:55 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:55 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:55 - Extracted JDBC value [1] - [3]
2024-07-17 10:01:55 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:01:55 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 577079474
2024-07-17 10:01:55 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:55 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@8104282
2024-07-17 10:01:55 - Extracted JDBC value [2] - [1234]
2024-07-17 10:01:55 - Extracted JDBC value [3] - [null]
2024-07-17 10:01:55 - Extracted JDBC value [4] - [1234]
2024-07-17 10:01:55 - Extracted JDBC value [5] - [1234]
2024-07-17 10:01:55 - Extracted JDBC value [6] - [1234]
2024-07-17 10:01:55 - Extracted JDBC value [7] - [null]
2024-07-17 10:01:55 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:01:55 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@8104282
2024-07-17 10:01:55 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5db67dc1
2024-07-17 10:01:55 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:01:55 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:01:55 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:01:55 - Completed 200 OK
2024-07-17 10:01:55 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:57 - Securing GET /api/users
2024-07-17 10:01:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:57 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:01:57 - Securing GET /error
2024-07-17 10:01:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:57 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:01:57 - Securing GET /api/users/4
2024-07-17 10:01:57 - Securing GET /api/users
2024-07-17 10:01:57 - Secured GET /api/users/4
2024-07-17 10:01:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:57 - GET "/api/users/4", parameters={}
2024-07-17 10:01:57 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:01:57 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:01:57 - Securing GET /error
2024-07-17 10:01:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:57 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:01:57 - begin
2024-07-17 10:01:57 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:01:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:57 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1345070696 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1599194930 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:01:57 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:01:57 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:01:57 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:57 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 624421791
2024-07-17 10:01:57 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:01:57 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:01:57 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:01:57 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:01:57 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1122a52f
2024-07-17 10:01:57 - committing
2024-07-17 10:01:57 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:01:57 - Writing [com.example.taskmanagement.model.User@2537eb9f]
2024-07-17 10:01:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:57 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1393745705 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1369241895 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1435706854 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:01:57 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:01:57 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:57 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:57 - Extracted JDBC value [1] - [3]
2024-07-17 10:01:57 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:01:57 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1914519110
2024-07-17 10:01:57 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:57 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1955516508
2024-07-17 10:01:57 - Extracted JDBC value [2] - [1234]
2024-07-17 10:01:57 - Extracted JDBC value [3] - [null]
2024-07-17 10:01:57 - Extracted JDBC value [4] - [1234]
2024-07-17 10:01:57 - Extracted JDBC value [5] - [1234]
2024-07-17 10:01:57 - Extracted JDBC value [6] - [1234]
2024-07-17 10:01:57 - Extracted JDBC value [7] - [null]
2024-07-17 10:01:57 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:01:57 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1955516508
2024-07-17 10:01:57 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@3e6d89f6
2024-07-17 10:01:57 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:01:57 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:01:57 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:01:57 - Securing GET /api/users/4
2024-07-17 10:01:57 - Completed 200 OK
2024-07-17 10:01:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:57 - Secured GET /api/users/4
2024-07-17 10:01:57 - GET "/api/users/4", parameters={}
2024-07-17 10:01:57 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:01:57 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:01:57 - begin
2024-07-17 10:01:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:57 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@660460987 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@549538934 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:01:57 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:01:57 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:01:57 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:57 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 673723505
2024-07-17 10:01:57 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:01:57 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:01:57 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:01:57 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:01:57 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@94c84a8
2024-07-17 10:01:57 - committing
2024-07-17 10:01:57 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:01:57 - Writing [com.example.taskmanagement.model.User@28283471]
2024-07-17 10:01:57 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:57 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@268401943 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@237087881 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1663369249 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:01:57 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:01:57 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:57 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:57 - Extracted JDBC value [1] - [3]
2024-07-17 10:01:57 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:01:57 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 413221617
2024-07-17 10:01:57 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:57 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@35680254
2024-07-17 10:01:57 - Extracted JDBC value [2] - [1234]
2024-07-17 10:01:57 - Extracted JDBC value [3] - [null]
2024-07-17 10:01:57 - Extracted JDBC value [4] - [1234]
2024-07-17 10:01:57 - Extracted JDBC value [5] - [1234]
2024-07-17 10:01:57 - Extracted JDBC value [6] - [1234]
2024-07-17 10:01:57 - Extracted JDBC value [7] - [null]
2024-07-17 10:01:57 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:01:57 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@35680254
2024-07-17 10:01:57 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@53ce6dcc
2024-07-17 10:01:57 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:01:57 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:01:57 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:01:57 - Completed 200 OK
2024-07-17 10:01:57 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:58 - Securing GET /api/users
2024-07-17 10:01:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:01:58 - Securing GET /error
2024-07-17 10:01:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:01:58 - Securing GET /api/users/4
2024-07-17 10:01:58 - Secured GET /api/users/4
2024-07-17 10:01:58 - GET "/api/users/4", parameters={}
2024-07-17 10:01:58 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:01:58 - Securing GET /api/users
2024-07-17 10:01:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:58 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:01:58 - begin
2024-07-17 10:01:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:01:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1514757465 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@926201408 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:01:58 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:01:58 - Securing GET /error
2024-07-17 10:01:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:58 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:01:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:01:58 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 965102640
2024-07-17 10:01:58 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:01:58 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:01:58 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:01:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:01:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a980f06
2024-07-17 10:01:58 - committing
2024-07-17 10:01:58 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:01:58 - Writing [com.example.taskmanagement.model.User@39864c30]
2024-07-17 10:01:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@859656262 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@189288460 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1909624412 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:01:58 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:01:58 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:58 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:58 - Extracted JDBC value [1] - [3]
2024-07-17 10:01:58 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:01:58 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1387455500
2024-07-17 10:01:58 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:58 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@731016182
2024-07-17 10:01:58 - Extracted JDBC value [2] - [1234]
2024-07-17 10:01:58 - Extracted JDBC value [3] - [null]
2024-07-17 10:01:58 - Extracted JDBC value [4] - [1234]
2024-07-17 10:01:58 - Extracted JDBC value [5] - [1234]
2024-07-17 10:01:58 - Extracted JDBC value [6] - [1234]
2024-07-17 10:01:58 - Extracted JDBC value [7] - [null]
2024-07-17 10:01:58 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:01:58 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@731016182
2024-07-17 10:01:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@37f73068
2024-07-17 10:01:58 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:01:58 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:01:58 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:01:58 - Securing GET /api/users/4
2024-07-17 10:01:58 - Completed 200 OK
2024-07-17 10:01:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:01:58 - Secured GET /api/users/4
2024-07-17 10:01:58 - GET "/api/users/4", parameters={}
2024-07-17 10:01:58 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:01:58 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:01:58 - begin
2024-07-17 10:01:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@19015856 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1018964333 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:01:58 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:01:58 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:01:58 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:58 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1646701391
2024-07-17 10:01:58 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:01:58 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:01:58 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:01:58 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:01:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7cf6a4e3
2024-07-17 10:01:58 - committing
2024-07-17 10:01:58 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:01:58 - Writing [com.example.taskmanagement.model.User@6226ab4f]
2024-07-17 10:01:58 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:01:58 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1378195295 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@226435333 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1147624949 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:01:58 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:01:58 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:58 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:01:58 - Extracted JDBC value [1] - [3]
2024-07-17 10:01:58 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:01:58 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 985440595
2024-07-17 10:01:58 - Extracted JDBC value [0] - [4]
2024-07-17 10:01:58 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1066139943
2024-07-17 10:01:58 - Extracted JDBC value [2] - [1234]
2024-07-17 10:01:58 - Extracted JDBC value [3] - [null]
2024-07-17 10:01:58 - Extracted JDBC value [4] - [1234]
2024-07-17 10:01:58 - Extracted JDBC value [5] - [1234]
2024-07-17 10:01:58 - Extracted JDBC value [6] - [1234]
2024-07-17 10:01:58 - Extracted JDBC value [7] - [null]
2024-07-17 10:01:58 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:01:58 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1066139943
2024-07-17 10:01:58 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@444acb04
2024-07-17 10:01:58 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:01:58 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:01:58 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:01:58 - Completed 200 OK
2024-07-17 10:01:58 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:12 - Securing GET /api/users
2024-07-17 10:02:12 - Securing GET /api/users/4
2024-07-17 10:02:12 - Secured GET /api/users/4
2024-07-17 10:02:12 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:12 - GET "/api/users/4", parameters={}
2024-07-17 10:02:12 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:12 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:02:12 - Securing GET /error
2024-07-17 10:02:12 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:12 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:12 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:02:12 - begin
2024-07-17 10:02:12 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:12 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1873186842 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1636345156 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:02:12 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:02:12 - Securing GET /api/users
2024-07-17 10:02:12 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:02:12 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:12 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1236130245
2024-07-17 10:02:12 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:02:12 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:02:12 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:02:12 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:12 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:02:12 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1648eed9
2024-07-17 10:02:12 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:12 - committing
2024-07-17 10:02:12 - Securing GET /error
2024-07-17 10:02:12 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:12 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:12 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:02:12 - Writing [com.example.taskmanagement.model.User@49add9c5]
2024-07-17 10:02:12 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:12 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@639976792 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@344272066 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1172977325 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:02:12 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:02:12 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:12 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:12 - Extracted JDBC value [1] - [3]
2024-07-17 10:02:12 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:02:12 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 2078504612
2024-07-17 10:02:12 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:12 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1831593777
2024-07-17 10:02:12 - Extracted JDBC value [2] - [1234]
2024-07-17 10:02:12 - Extracted JDBC value [3] - [null]
2024-07-17 10:02:12 - Extracted JDBC value [4] - [1234]
2024-07-17 10:02:12 - Extracted JDBC value [5] - [1234]
2024-07-17 10:02:12 - Extracted JDBC value [6] - [1234]
2024-07-17 10:02:12 - Extracted JDBC value [7] - [null]
2024-07-17 10:02:12 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:02:12 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1831593777
2024-07-17 10:02:12 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6fa8682b
2024-07-17 10:02:12 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:02:12 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:02:12 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:02:12 - Completed 200 OK
2024-07-17 10:02:12 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:12 - Securing GET /api/users/4
2024-07-17 10:02:12 - Secured GET /api/users/4
2024-07-17 10:02:12 - GET "/api/users/4", parameters={}
2024-07-17 10:02:12 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:02:12 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:02:12 - begin
2024-07-17 10:02:12 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:12 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1918300955 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1028437493 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:02:12 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:02:12 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:02:12 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:12 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1327281622
2024-07-17 10:02:12 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:02:12 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:02:12 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:02:12 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:02:12 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1cc19615
2024-07-17 10:02:12 - committing
2024-07-17 10:02:12 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:02:12 - Writing [com.example.taskmanagement.model.User@4f1cb5d6]
2024-07-17 10:02:12 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:12 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@728713135 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@999165417 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1214561646 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:02:12 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:02:12 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:12 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:12 - Extracted JDBC value [1] - [3]
2024-07-17 10:02:12 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:02:12 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1321338900
2024-07-17 10:02:12 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:12 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@396837597
2024-07-17 10:02:12 - Extracted JDBC value [2] - [1234]
2024-07-17 10:02:12 - Extracted JDBC value [3] - [null]
2024-07-17 10:02:12 - Extracted JDBC value [4] - [1234]
2024-07-17 10:02:12 - Extracted JDBC value [5] - [1234]
2024-07-17 10:02:12 - Extracted JDBC value [6] - [1234]
2024-07-17 10:02:12 - Extracted JDBC value [7] - [null]
2024-07-17 10:02:12 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:02:12 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@396837597
2024-07-17 10:02:12 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@2320436f
2024-07-17 10:02:12 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:02:12 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:02:12 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:02:12 - Completed 200 OK
2024-07-17 10:02:12 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:14 - Securing GET /api/users
2024-07-17 10:02:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:14 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:14 - Securing GET /error
2024-07-17 10:02:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:14 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:14 - Securing GET /api/users/4
2024-07-17 10:02:14 - Securing GET /api/users
2024-07-17 10:02:14 - Secured GET /api/users/4
2024-07-17 10:02:14 - GET "/api/users/4", parameters={}
2024-07-17 10:02:14 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:02:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:14 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:14 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:02:14 - Securing GET /error
2024-07-17 10:02:14 - begin
2024-07-17 10:02:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:14 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@960377319 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@731532027 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:02:14 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:02:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:02:14 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 264755609
2024-07-17 10:02:14 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:02:14 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:02:14 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:02:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:02:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a273b35
2024-07-17 10:02:14 - committing
2024-07-17 10:02:14 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:02:14 - Writing [com.example.taskmanagement.model.User@fc7d999]
2024-07-17 10:02:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@794504396 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1174021608 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1444364529 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:02:14 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:02:14 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:14 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:14 - Extracted JDBC value [1] - [3]
2024-07-17 10:02:14 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:02:14 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 591867162
2024-07-17 10:02:14 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:14 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1995671304
2024-07-17 10:02:14 - Extracted JDBC value [2] - [1234]
2024-07-17 10:02:14 - Extracted JDBC value [3] - [null]
2024-07-17 10:02:14 - Extracted JDBC value [4] - [1234]
2024-07-17 10:02:14 - Extracted JDBC value [5] - [1234]
2024-07-17 10:02:14 - Extracted JDBC value [6] - [1234]
2024-07-17 10:02:14 - Extracted JDBC value [7] - [null]
2024-07-17 10:02:14 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:02:14 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1995671304
2024-07-17 10:02:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@4fbbf14b
2024-07-17 10:02:14 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:02:14 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:02:14 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:02:14 - Completed 200 OK
2024-07-17 10:02:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:14 - Securing GET /api/users/4
2024-07-17 10:02:14 - Secured GET /api/users/4
2024-07-17 10:02:14 - GET "/api/users/4", parameters={}
2024-07-17 10:02:14 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:02:14 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:02:14 - begin
2024-07-17 10:02:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1755900344 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2091258299 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:02:14 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:02:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:02:14 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 396634226
2024-07-17 10:02:14 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:02:14 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:02:14 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:02:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:02:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3097b147
2024-07-17 10:02:14 - committing
2024-07-17 10:02:14 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:02:14 - Writing [com.example.taskmanagement.model.User@17a42872]
2024-07-17 10:02:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1232602519 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@213508148 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@19490157 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:02:14 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:02:14 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:14 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:14 - Extracted JDBC value [1] - [3]
2024-07-17 10:02:14 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:02:14 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 2118018064
2024-07-17 10:02:14 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:14 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1531173108
2024-07-17 10:02:14 - Extracted JDBC value [2] - [1234]
2024-07-17 10:02:14 - Extracted JDBC value [3] - [null]
2024-07-17 10:02:14 - Extracted JDBC value [4] - [1234]
2024-07-17 10:02:14 - Extracted JDBC value [5] - [1234]
2024-07-17 10:02:14 - Extracted JDBC value [6] - [1234]
2024-07-17 10:02:14 - Extracted JDBC value [7] - [null]
2024-07-17 10:02:14 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:02:14 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1531173108
2024-07-17 10:02:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@347664b7
2024-07-17 10:02:14 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:02:14 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:02:14 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:02:14 - Completed 200 OK
2024-07-17 10:02:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:19 - Securing GET /api/users
2024-07-17 10:02:19 - Securing GET /api/users/4
2024-07-17 10:02:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:19 - Secured GET /api/users/4
2024-07-17 10:02:19 - GET "/api/users/4", parameters={}
2024-07-17 10:02:19 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:19 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:02:19 - Securing GET /error
2024-07-17 10:02:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:19 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:02:19 - begin
2024-07-17 10:02:19 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:19 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:19 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@904604962 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1778562293 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:02:19 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:02:19 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:02:19 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:19 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 272382809
2024-07-17 10:02:19 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:02:19 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:02:19 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:02:19 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:02:19 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@50c1d81
2024-07-17 10:02:19 - committing
2024-07-17 10:02:19 - Securing GET /api/users
2024-07-17 10:02:19 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:02:19 - Writing [com.example.taskmanagement.model.User@103c3b59]
2024-07-17 10:02:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:19 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:19 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:19 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@478147088 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1204234752 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@574801772 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:02:19 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:02:19 - Securing GET /error
2024-07-17 10:02:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:19 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:02:19 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:19 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:19 - Extracted JDBC value [1] - [3]
2024-07-17 10:02:19 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:02:19 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 355796440
2024-07-17 10:02:19 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:19 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1868992695
2024-07-17 10:02:19 - Extracted JDBC value [2] - [1234]
2024-07-17 10:02:19 - Extracted JDBC value [3] - [null]
2024-07-17 10:02:19 - Extracted JDBC value [4] - [1234]
2024-07-17 10:02:19 - Extracted JDBC value [5] - [1234]
2024-07-17 10:02:19 - Extracted JDBC value [6] - [1234]
2024-07-17 10:02:19 - Extracted JDBC value [7] - [null]
2024-07-17 10:02:19 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:02:19 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1868992695
2024-07-17 10:02:19 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@21f8c9b5
2024-07-17 10:02:19 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:02:19 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:02:19 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:02:19 - Completed 200 OK
2024-07-17 10:02:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:02:19 - Securing GET /api/users/4
2024-07-17 10:02:19 - Secured GET /api/users/4
2024-07-17 10:02:19 - GET "/api/users/4", parameters={}
2024-07-17 10:02:19 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 10:02:19 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 10:02:19 - begin
2024-07-17 10:02:19 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:19 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1930189591 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@210141228 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 10:02:19 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 10:02:19 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 10:02:19 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:19 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 156925331
2024-07-17 10:02:19 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 10:02:19 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 10:02:19 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 10:02:19 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 10:02:19 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@293cddc1
2024-07-17 10:02:19 - committing
2024-07-17 10:02:19 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 10:02:19 - Writing [com.example.taskmanagement.model.User@95a7d93]
2024-07-17 10:02:19 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 10:02:19 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@291942380 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@140461651)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@138487839 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@1380513798)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1197227523 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 10:02:19 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 10:02:19 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:19 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 10:02:19 - Extracted JDBC value [1] - [3]
2024-07-17 10:02:19 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 10:02:19 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 2119712197
2024-07-17 10:02:19 - Extracted JDBC value [0] - [4]
2024-07-17 10:02:19 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@828705652
2024-07-17 10:02:19 - Extracted JDBC value [2] - [1234]
2024-07-17 10:02:19 - Extracted JDBC value [3] - [null]
2024-07-17 10:02:19 - Extracted JDBC value [4] - [1234]
2024-07-17 10:02:19 - Extracted JDBC value [5] - [1234]
2024-07-17 10:02:19 - Extracted JDBC value [6] - [1234]
2024-07-17 10:02:19 - Extracted JDBC value [7] - [null]
2024-07-17 10:02:19 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 10:02:19 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@828705652
2024-07-17 10:02:19 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5852a82b
2024-07-17 10:02:19 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 10:02:19 - Ignoring exception, response committed already: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)
2024-07-17 10:02:19 - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Document nesting depth (1001) exceeds the maximum allowed (1000, from `StreamWriteConstraints.getMaxNestingDepth()`)]
2024-07-17 10:02:19 - Completed 200 OK
2024-07-17 10:02:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:00 - Securing GET /api/users
2024-07-17 10:03:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:00 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:00 - Securing GET /error
2024-07-17 10:03:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:00 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:00 - Securing GET /api/users
2024-07-17 10:03:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:00 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:00 - Securing GET /error
2024-07-17 10:03:00 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:00 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:19 - Securing GET /api/users
2024-07-17 10:03:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:19 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:19 - Securing GET /error
2024-07-17 10:03:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:19 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:19 - Securing GET /api/users
2024-07-17 10:03:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:19 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:19 - Securing GET /error
2024-07-17 10:03:19 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:19 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /api/users
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /error
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /api/users
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /error
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /api/users
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /error
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /api/users
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /error
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /api/users
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /error
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /api/users
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 10:03:21 - Securing GET /error
2024-07-17 10:03:21 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 10:03:21 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:06:13 - Starting TaskmanagementApplication using Java 22.0.1 with PID 36928 (C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement)
2024-07-17 11:06:13 - No active profile set, falling back to 1 default profile: "default"
2024-07-17 11:06:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-17 11:06:14 - Finished Spring Data repository scanning in 46 ms. Found 2 JPA repository interfaces.
2024-07-17 11:06:15 - Tomcat initialized with port 8080 (http)
2024-07-17 11:06:15 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-17 11:06:15 - Starting service [Tomcat]
2024-07-17 11:06:15 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-17 11:06:15 - Initializing Spring embedded WebApplicationContext
2024-07-17 11:06:15 - Root WebApplicationContext: initialization completed in 1969 ms
2024-07-17 11:06:16 - Filter 'webMvcObservationFilter' configured for use
2024-07-17 11:06:16 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/Assignment%201%20Spring%20Boot/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-17 11:06:16 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-17 11:06:16 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-17 11:06:16 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-17 11:06:16 - HHH000206: 'hibernate.properties' not found
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 11:06:16 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-17 11:06:16 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-17 11:06:16 - HHH000026: Second-level cache disabled
2024-07-17 11:06:16 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-17 11:06:16 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-17 11:06:16 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-17 11:06:16 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-17 11:06:16 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-17 11:06:16 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-17 11:06:16 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-17 11:06:16 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 11:06:16 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 11:06:16 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 11:06:16 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 11:06:16 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 11:06:16 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 11:06:16 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 11:06:16 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 11:06:16 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 11:06:16 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 11:06:16 - Adding type registration image -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 11:06:16 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 11:06:16 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 11:06:16 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-17 11:06:16 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 11:06:16 - Adding type registration short -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 11:06:16 - Adding type registration short -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 11:06:16 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 11:06:16 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 11:06:16 - Adding type registration int -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 11:06:16 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 11:06:16 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 11:06:16 - Adding type registration long -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 11:06:16 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 11:06:16 - Adding type registration float -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:06:16 - Adding type registration float -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:06:16 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:06:16 - Adding type registration double -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:06:16 - Adding type registration double -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:06:16 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:06:16 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 11:06:16 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 11:06:16 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 11:06:16 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 11:06:16 - Adding type registration character -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 11:06:16 - Adding type registration char -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 11:06:16 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 11:06:16 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-17 11:06:16 - Adding type registration string -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 11:06:16 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 11:06:16 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 11:06:16 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 11:06:16 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 11:06:16 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 11:06:16 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 11:06:16 - Adding type registration text -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 11:06:16 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 11:06:16 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 11:06:16 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 11:06:16 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 11:06:16 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 11:06:16 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 11:06:16 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 11:06:16 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 11:06:16 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 11:06:16 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 11:06:16 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-17 11:06:16 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 11:06:16 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 11:06:16 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 11:06:16 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 11:06:16 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 11:06:16 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 11:06:16 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:06:16 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:06:16 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 11:06:16 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 11:06:16 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 11:06:16 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 11:06:16 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 11:06:16 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 11:06:16 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 11:06:16 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 11:06:16 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 11:06:16 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 11:06:16 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 11:06:16 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 11:06:16 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 11:06:16 - Adding type registration date -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:06:16 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:06:16 - Adding type registration time -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 11:06:16 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 11:06:16 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 11:06:16 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 11:06:16 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 11:06:16 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 11:06:16 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 11:06:16 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 11:06:16 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 11:06:16 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 11:06:16 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 11:06:16 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 11:06:16 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 11:06:16 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 11:06:16 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 11:06:16 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-17 11:06:16 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 11:06:16 - Adding type registration class -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 11:06:16 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 11:06:16 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 11:06:16 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 11:06:16 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 11:06:16 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:06:16 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:06:16 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 11:06:16 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 11:06:16 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-17 11:06:16 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-17 11:06:16 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 11:06:16 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 11:06:16 - Adding type registration url -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 11:06:16 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 11:06:16 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-17 11:06:16 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 11:06:16 - Adding type registration object -> org.hibernate.type.JavaObjectType@4ec8d9b2
2024-07-17 11:06:16 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4ec8d9b2
2024-07-17 11:06:16 - Adding type registration null -> org.hibernate.type.NullType@6fc0e448
2024-07-17 11:06:16 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@60194904
2024-07-17 11:06:16 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4db6348b
2024-07-17 11:06:16 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7742a276
2024-07-17 11:06:16 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1f48fa72
2024-07-17 11:06:16 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@35b3c1f6
2024-07-17 11:06:16 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@495da9a7
2024-07-17 11:06:16 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2beee3e8
2024-07-17 11:06:16 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@732d078d
2024-07-17 11:06:16 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2abedbbd] into BootstrapContext; was [null]
2024-07-17 11:06:16 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2abedbbd) [was null]
2024-07-17 11:06:16 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6ea3a513] into BootstrapContext; was [null]
2024-07-17 11:06:16 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3c4059a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b336cc8]
2024-07-17 11:06:16 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-17 11:06:16 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2abedbbd]
2024-07-17 11:06:16 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@2abedbbd]
2024-07-17 11:06:16 - HikariPool-1 - Starting...
2024-07-17 11:06:16 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@44a13699
2024-07-17 11:06:16 - HikariPool-1 - Start completed.
2024-07-17 11:06:16 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-17 11:06:16 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-17 11:06:16 - JDBC version : 4.2
2024-07-17 11:06:16 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-17 11:06:16 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-17 11:06:16 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-17 11:06:16 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-17 11:06:16 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-17 11:06:16 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47772462) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59929ac)
2024-07-17 11:06:16 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e9bd2c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18f13756)
2024-07-17 11:06:16 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@665b441e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ac3d530)
2024-07-17 11:06:16 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3a5e4f32) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0494a8)
2024-07-17 11:06:16 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@17c34e62) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@239d73ff)
2024-07-17 11:06:16 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6bf28f61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64dcf763)
2024-07-17 11:06:16 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@696105c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ab919c)
2024-07-17 11:06:16 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5edd9b4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5db90818)
2024-07-17 11:06:16 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c17794e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@414d2821)
2024-07-17 11:06:16 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-17 11:06:16 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-17 11:06:16 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-17 11:06:16 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 11:06:16 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 11:06:16 - Adding type registration null -> org.hibernate.type.NullType@4be7acd9
2024-07-17 11:06:16 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6fc0e448`
2024-07-17 11:06:16 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-17 11:06:16 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 11:06:16 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 11:06:16 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:06:16 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:06:16 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:06:16 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:06:16 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:06:16 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:06:16 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:06:16 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:06:16 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:06:16 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@582ca1e2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@66226ab]
2024-07-17 11:06:16 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-17 11:06:16 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-17 11:06:16 - Import with entity name Task
2024-07-17 11:06:16 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-17 11:06:16 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 11:06:16 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 11:06:16 - MetadataSourceProcessor property id with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-17 11:06:16 - building BasicValue for id
2024-07-17 11:06:16 - Skipping column re-registration: task.id
2024-07-17 11:06:16 - Building property id
2024-07-17 11:06:16 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - MetadataSourceProcessor property category with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-17 11:06:16 - building BasicValue for category
2024-07-17 11:06:16 - Skipping column re-registration: task.category
2024-07-17 11:06:16 - Building property category
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-17 11:06:16 - building BasicValue for createdAt
2024-07-17 11:06:16 - Skipping column re-registration: task.created_at
2024-07-17 11:06:16 - Building property createdAt
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - MetadataSourceProcessor property description with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-17 11:06:16 - building BasicValue for description
2024-07-17 11:06:16 - Skipping column re-registration: task.description
2024-07-17 11:06:16 - Building property description
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - MetadataSourceProcessor property priority with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-17 11:06:16 - building BasicValue for priority
2024-07-17 11:06:16 - Skipping column re-registration: task.priority
2024-07-17 11:06:16 - Building property priority
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - MetadataSourceProcessor property title with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-17 11:06:16 - building BasicValue for title
2024-07-17 11:06:16 - Skipping column re-registration: task.title
2024-07-17 11:06:16 - Building property title
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-17 11:06:16 - building BasicValue for updatedAt
2024-07-17 11:06:16 - Skipping column re-registration: task.updated_at
2024-07-17 11:06:16 - Building property updatedAt
2024-07-17 11:06:16 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - Building property user
2024-07-17 11:06:16 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 11:06:16 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-17 11:06:16 - Import with entity name User
2024-07-17 11:06:16 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-17 11:06:16 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 11:06:16 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 11:06:16 - MetadataSourceProcessor property id with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-17 11:06:16 - building BasicValue for id
2024-07-17 11:06:16 - Skipping column re-registration: users.id
2024-07-17 11:06:16 - Building property id
2024-07-17 11:06:16 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - MetadataSourceProcessor property email with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-17 11:06:16 - building BasicValue for email
2024-07-17 11:06:16 - Skipping column re-registration: users.email
2024-07-17 11:06:16 - Building property email
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:16 - MetadataSourceProcessor property password with lazy=false
2024-07-17 11:06:16 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-17 11:06:16 - building BasicValue for password
2024-07-17 11:06:16 - Skipping column re-registration: users.password
2024-07-17 11:06:16 - Building property password
2024-07-17 11:06:16 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:06:16 - Binding column: AnnotatedColumn()
2024-07-17 11:06:17 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-17 11:06:17 - Binding column: AnnotatedColumn()
2024-07-17 11:06:17 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-17 11:06:17 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-17 11:06:17 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:06:17 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:06:17 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-17 11:06:17 - Building property tasks
2024-07-17 11:06:17 - Binding column: AnnotatedColumn()
2024-07-17 11:06:17 - MetadataSourceProcessor property username with lazy=false
2024-07-17 11:06:17 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-17 11:06:17 - building BasicValue for username
2024-07-17 11:06:17 - Skipping column re-registration: users.username
2024-07-17 11:06:17 - Building property username
2024-07-17 11:06:17 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-17 11:06:17 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-17 11:06:17 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-17 11:06:17 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-17 11:06:17 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 11:06:17 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-17 11:06:17 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-17 11:06:17 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-17 11:06:17 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-17 11:06:17 - Building session factory
2024-07-17 11:06:17 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 11:06:17 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6c2be147, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@dddcd91, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.6045274609889229832, com.sun.management.jmxremote.port=50409, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\Assignment 1 Spring Boot\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=36928, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.6045274609889229832, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@21bd6fd1, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-17 11:06:17 - Session factory constructed with filter configurations : {}
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4bac0be5] under count; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3ea1729e] under every; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6956eb58] under any; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6b6606d1] under sinh; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27605b87] under cosh; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1fc4483f] under tanh; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d7af82] under pi; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5adc71e7] under log; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-17 11:06:17 - Registering alternate key : length -> character_length
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2fe38b73] under position; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6f7c4e0] under overlay; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@31b7112d] under trim; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@d17d554] under cast; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f1c7fde] under collate; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5e83298e] under extract; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@737445ab] under ifnull; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2cb53bfc] under pad; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@28fef9a2] under str; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6f695077] under format; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1e160a9e] under timestampadd; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@12811f95] under timestampdiff; prior registration was null
2024-07-17 11:06:17 - Registering alternate key : dateadd -> timestampadd
2024-07-17 11:06:17 - Registering alternate key : datediff -> timestampdiff
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@74bcf1ab] under current_date; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a11efe6] under current_time; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e6bbe63] under current_timestamp; prior registration was null
2024-07-17 11:06:17 - Registering alternate key : current date -> current_date
2024-07-17 11:06:17 - Registering alternate key : current time -> current_time
2024-07-17 11:06:17 - Registering alternate key : current timestamp -> current_timestamp
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69356aca] under local_date; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a17ffee] under local_time; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ffc4195] under local_datetime; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ce760af] under offset_datetime; prior registration was null
2024-07-17 11:06:17 - Registering alternate key : local date -> local_date
2024-07-17 11:06:17 - Registering alternate key : local time -> local_time
2024-07-17 11:06:17 - Registering alternate key : local datetime -> local_datetime
2024-07-17 11:06:17 - Registering alternate key : offset datetime -> offset_datetime
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e4636c3] under instant; prior registration was null
2024-07-17 11:06:17 - Registering alternate key : current_instant -> instant
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2e5c7cd5] under sql; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5adc71e7
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@2aac87ab] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@c14bbab] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-17 11:06:17 - Registering alternate key : day -> dayofmonth
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72c5064f] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2fe38b73
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6b4a2887] under trunc; prior registration was null
2024-07-17 11:06:17 - Registering alternate key : truncate -> trunc
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23b087c3] under bitand; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@237c8718] under bitor; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@325e03b] under bitxor; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3911fec8] under bitnot; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1e38e8b6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6f695077
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7a17ffee
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7ffc4195
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59bbf82e] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d7af82
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75b3ef1a] under chr; prior registration was null
2024-07-17 11:06:17 - Registering alternate key : char -> chr
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e2b8da] under sysdate; prior registration was null
2024-07-17 11:06:17 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@20e9c165] under listagg; prior registration was null
2024-07-17 11:06:17 - abs(NUMERIC arg)
2024-07-17 11:06:17 - Double acos(NUMERIC arg)
2024-07-17 11:06:17 - adddate(DATE datetime, INTEGER days)
2024-07-17 11:06:17 - addtime(TIME datetime, TIME time)
2024-07-17 11:06:17 - Boolean any(BOOLEAN arg)
2024-07-17 11:06:17 - Integer ascii(STRING arg)
2024-07-17 11:06:17 - Double asin(NUMERIC arg)
2024-07-17 11:06:17 - Double atan(NUMERIC arg)
2024-07-17 11:06:17 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-17 11:06:17 - avg(arg)
2024-07-17 11:06:17 - bit_and(arg)
2024-07-17 11:06:17 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-17 11:06:17 - bit_or(arg)
2024-07-17 11:06:17 - bitand(arg0, arg1)
2024-07-17 11:06:17 - bitnot(arg)
2024-07-17 11:06:17 - bitor(arg0, arg1)
2024-07-17 11:06:17 - bitxor(arg0, arg1)
2024-07-17 11:06:17 - cast(arg as Type)
2024-07-17 11:06:17 - ceiling(NUMERIC arg)
2024-07-17 11:06:17 - Character char(INTEGER arg)
2024-07-17 11:06:17 - Integer character_length(STRING_OR_CLOB arg)
2024-07-17 11:06:17 - Character chr(INTEGER arg)
2024-07-17 11:06:17 - coalesce(arg0[, arg1[, ...]])
2024-07-17 11:06:17 - String collate(STRING string as COLLATION collation)
2024-07-17 11:06:17 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-17 11:06:17 - Double cos(NUMERIC arg)
2024-07-17 11:06:17 - Double cosh(NUMERIC arg)
2024-07-17 11:06:17 - Double cot(NUMERIC arg)
2024-07-17 11:06:17 - Long count([distinct ]{arg|*})
2024-07-17 11:06:17 - Integer crc32(arg)
2024-07-17 11:06:17 - Date curdate()
2024-07-17 11:06:17 - Date current date
2024-07-17 11:06:17 - Time current time
2024-07-17 11:06:17 - Timestamp current timestamp
2024-07-17 11:06:17 - Date current_date
2024-07-17 11:06:17 - Instant current_instant
2024-07-17 11:06:17 - Time current_time
2024-07-17 11:06:17 - Timestamp current_timestamp
2024-07-17 11:06:17 - Time curtime()
2024-07-17 11:06:17 - Date date(arg)
2024-07-17 11:06:17 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 11:06:17 - Integer datediff(DATE end, DATE start)
2024-07-17 11:06:17 - Integer day(DATE arg)
2024-07-17 11:06:17 - String dayname(DATE arg)
2024-07-17 11:06:17 - Integer dayofmonth(DATE arg)
2024-07-17 11:06:17 - Integer dayofweek(DATE arg)
2024-07-17 11:06:17 - Integer dayofyear(DATE arg)
2024-07-17 11:06:17 - Double degrees(NUMERIC arg)
2024-07-17 11:06:17 - Boolean every(BOOLEAN arg)
2024-07-17 11:06:17 - Double exp(NUMERIC arg)
2024-07-17 11:06:17 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-17 11:06:17 - floor(NUMERIC arg)
2024-07-17 11:06:17 - String format(TEMPORAL datetime as STRING pattern)
2024-07-17 11:06:17 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 11:06:17 - Integer hour(TIME arg)
2024-07-17 11:06:17 - ifnull(arg0, arg1)
2024-07-17 11:06:17 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-17 11:06:17 - Instant instant
2024-07-17 11:06:17 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-17 11:06:17 - Date last_day(DATE arg)
2024-07-17 11:06:17 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 11:06:17 - String left(STRING string, INTEGER length)
2024-07-17 11:06:17 - Integer length(STRING_OR_CLOB arg)
2024-07-17 11:06:17 - String listagg(STRING arg0, STRING arg1)
2024-07-17 11:06:17 - Double ln(NUMERIC arg)
2024-07-17 11:06:17 - LocalDate local date
2024-07-17 11:06:17 - LocalDateTime local datetime
2024-07-17 11:06:17 - LocalTime local time
2024-07-17 11:06:17 - LocalDate local_date
2024-07-17 11:06:17 - LocalDateTime local_datetime
2024-07-17 11:06:17 - LocalTime local_time
2024-07-17 11:06:17 - Timestamp localtime
2024-07-17 11:06:17 - Timestamp localtimestamp
2024-07-17 11:06:17 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-17 11:06:17 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-17 11:06:17 - Double log10(NUMERIC arg)
2024-07-17 11:06:17 - Double log2(NUMERIC arg)
2024-07-17 11:06:17 - String lower(STRING string)
2024-07-17 11:06:17 - String lpad(string, length[, padding])
2024-07-17 11:06:17 - String ltrim(STRING string[, STRING characters])
2024-07-17 11:06:17 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-17 11:06:17 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-17 11:06:17 - max(COMPARABLE arg)
2024-07-17 11:06:17 - String md5(arg)
2024-07-17 11:06:17 - Integer microsecond(TIME arg)
2024-07-17 11:06:17 - min(COMPARABLE arg)
2024-07-17 11:06:17 - Integer minute(TIME arg)
2024-07-17 11:06:17 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-17 11:06:17 - Integer month(DATE arg)
2024-07-17 11:06:17 - String monthname(DATE arg)
2024-07-17 11:06:17 - Timestamp now()
2024-07-17 11:06:17 - nullif(arg0, arg1)
2024-07-17 11:06:17 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-17 11:06:17 - OffsetDateTime offset datetime
2024-07-17 11:06:17 - OffsetDateTime offset_datetime
2024-07-17 11:06:17 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-17 11:06:17 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-17 11:06:17 - Double pi
2024-07-17 11:06:17 - Integer position(STRING pattern in STRING string)
2024-07-17 11:06:17 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-17 11:06:17 - Integer quarter(DATE arg)
2024-07-17 11:06:17 - Double radians(NUMERIC arg)
2024-07-17 11:06:17 - Double rand([INTEGER seed])
2024-07-17 11:06:17 - String repeat(STRING string, INTEGER times)
2024-07-17 11:06:17 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-17 11:06:17 - String reverse(STRING arg)
2024-07-17 11:06:17 - String right(STRING string, INTEGER length)
2024-07-17 11:06:17 - round(NUMERIC number[, INTEGER places])
2024-07-17 11:06:17 - String rpad(string, length[, padding])
2024-07-17 11:06:17 - String rtrim(STRING string[, STRING characters])
2024-07-17 11:06:17 - Integer second(TIME arg)
2024-07-17 11:06:17 - String sha(arg)
2024-07-17 11:06:17 - String sha1(arg)
2024-07-17 11:06:17 - String sha2(arg0, arg1)
2024-07-17 11:06:17 - Integer sign(NUMERIC arg)
2024-07-17 11:06:17 - Double sin(NUMERIC arg)
2024-07-17 11:06:17 - Double sinh(NUMERIC arg)
2024-07-17 11:06:17 - String soundex(arg)
2024-07-17 11:06:17 - String space(INTEGER arg)
2024-07-17 11:06:17 - Object sql
2024-07-17 11:06:17 - Double sqrt(NUMERIC arg)
2024-07-17 11:06:17 - Double stddev(NUMERIC arg)
2024-07-17 11:06:17 - Double stddev_pop(NUMERIC arg)
2024-07-17 11:06:17 - Double stddev_samp(NUMERIC arg)
2024-07-17 11:06:17 - String str(arg)
2024-07-17 11:06:17 - subdate(DATE datetime, INTEGER days)
2024-07-17 11:06:17 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-17 11:06:17 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-17 11:06:17 - subtime(TIME datetime, TIME time)
2024-07-17 11:06:17 - sum(arg)
2024-07-17 11:06:17 - Timestamp sysdate()
2024-07-17 11:06:17 - Double tan(NUMERIC arg)
2024-07-17 11:06:17 - Double tanh(NUMERIC arg)
2024-07-17 11:06:17 - String time(arg)
2024-07-17 11:06:17 - Timestamp timestamp(arg0[, arg1])
2024-07-17 11:06:17 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 11:06:17 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-17 11:06:17 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-17 11:06:17 - trunc( ... )
2024-07-17 11:06:17 - truncate( ... )
2024-07-17 11:06:17 - String upper(STRING string)
2024-07-17 11:06:17 - Date utc_date
2024-07-17 11:06:17 - Time utc_time
2024-07-17 11:06:17 - Timestamp utc_timestamp
2024-07-17 11:06:17 - Double var_pop(NUMERIC arg)
2024-07-17 11:06:17 - Double var_samp(NUMERIC arg)
2024-07-17 11:06:17 - Double variance(NUMERIC arg)
2024-07-17 11:06:17 - Integer week(DATE arg)
2024-07-17 11:06:17 - Integer year(DATE arg)
2024-07-17 11:06:17 - Starting QueryInterpretationCache(2048)
2024-07-17 11:06:17 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 11:06:17 - Configured EntityCopyObserver strategy: disallow
2024-07-17 11:06:17 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 11:06:17 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 11:06:17 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-17 11:06:17 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 11:06:17 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 11:06:17 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-17 11:06:17 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-17 11:06:17 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-17 11:06:17 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-17 11:06:17 - Starting post-init callbacks
2024-07-17 11:06:17 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 11:06:17 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-17 11:06:17 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-17 11:06:17 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-17 11:06:17 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-17 11:06:17 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-17 11:06:17 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 11:06:17 - Created new SQL alias : u1_0
2024-07-17 11:06:17 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 11:06:17 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-17 11:06:17 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 11:06:17 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-17 11:06:17 -  Version select: select id from users where id=?
2024-07-17 11:06:17 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-17 11:06:17 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-17 11:06:17 -  Delete (0): delete from users where id=?
2024-07-17 11:06:17 - Created new SQL alias : t1_0
2024-07-17 11:06:17 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 11:06:17 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@732bb49d] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 11:06:17 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-17 11:06:17 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-17 11:06:17 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-17 11:06:17 -  Version select: select id from task where id=?
2024-07-17 11:06:17 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 11:06:17 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-17 11:06:17 -  Delete (0): delete from task where id=?
2024-07-17 11:06:17 - Created new SQL alias : t1_0
2024-07-17 11:06:17 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@240e61] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-17 11:06:17 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-17 11:06:17 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@e75bae7] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-17 11:06:17 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-17 11:06:17 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-17 11:06:17 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 11:06:17 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-17 11:06:17 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@582ca1e2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1a865ebf]
2024-07-17 11:06:17 - Checking 0 named HQL queries
2024-07-17 11:06:17 - Checking 0 named SQL queries
2024-07-17 11:06:17 - No alter strings for table : task
2024-07-17 11:06:17 - No alter strings for table : users
2024-07-17 11:06:17 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f2b608e
2024-07-17 11:06:17 - Registering SessionFactory: e47a4aa1-efea-4e27-b48f-05791bd50519 (<unnamed>)
2024-07-17 11:06:17 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-17 11:06:17 - Instantiated SessionFactory
2024-07-17 11:06:17 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-17 11:06:17 - Statistics initialized [enabled=false]
2024-07-17 11:06:17 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:06:17 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:06:17 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:06:17 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:06:18 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-17 11:06:18 - 

Using generated security password: 1f9b34e8-8042-4953-a3b5-009c5fad70be

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-17 11:06:18 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-17 11:06:18 - 12 mappings in 'requestMappingHandlerMapping'
2024-07-17 11:06:18 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-17 11:06:18 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-17 11:06:18 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-17 11:06:18 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-17 11:06:18 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-17 11:06:19 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-17 11:06:19 - Tomcat started on port 8080 (http) with context path '/'
2024-07-17 11:06:19 - Started TaskmanagementApplication in 5.807 seconds (process running for 6.25)
2024-07-17 11:06:19 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-17 11:06:19 - Initializing Servlet 'dispatcherServlet'
2024-07-17 11:06:19 - Detected StandardServletMultipartResolver
2024-07-17 11:06:19 - Detected AcceptHeaderLocaleResolver
2024-07-17 11:06:19 - Detected FixedThemeResolver
2024-07-17 11:06:19 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@29244152
2024-07-17 11:06:19 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7115d5af
2024-07-17 11:06:19 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-17 11:06:19 - Completed initialization in 3 ms
2024-07-17 11:07:17 - Securing GET /api/users
2024-07-17 11:07:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:17 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:17 - Securing GET /error
2024-07-17 11:07:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:17 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:17 - Securing GET /api/users
2024-07-17 11:07:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:17 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:17 - Securing GET /error
2024-07-17 11:07:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:17 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:17 - Securing GET /api/users
2024-07-17 11:07:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:17 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:17 - Securing GET /error
2024-07-17 11:07:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:17 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:17 - Securing GET /api/users
2024-07-17 11:07:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:17 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:17 - Securing GET /error
2024-07-17 11:07:17 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:17 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:26 - Securing OPTIONS /api/users/login
2024-07-17 11:07:26 - Securing POST /api/users/login
2024-07-17 11:07:26 - Secured POST /api/users/login
2024-07-17 11:07:26 - POST "/api/users/login", parameters={}
2024-07-17 11:07:26 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-17 11:07:26 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@6dfbda06]
2024-07-17 11:07:26 - Created new SQL alias : u1_0
2024-07-17 11:07:26 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(5606751836400))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 11:07:26 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63c4e7f8
2024-07-17 11:07:26 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(5606751836400).username) 
2024-07-17 11:07:26 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(5606751836400)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(5606751836400).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(5606751836400).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(5606751836400).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(5606751836400).username]

2024-07-17 11:07:26 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(5606751836400)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 11:07:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 11:07:26 - Initializer list:
	  com.example.taskmanagement.model.User(5606751836400) -> EntityResultInitializer(com.example.taskmanagement.model.User(5606751836400))@1225095886 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(5606751836400).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(5606751836400).tasks)@375168123 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 11:07:26 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 11:07:26 - Extracted JDBC value [0] - [4]
2024-07-17 11:07:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(5606751836400)): 4
2024-07-17 11:07:26 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(5606751836400).tasks#4
2024-07-17 11:07:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(5606751836400)#4] : 1396610989
2024-07-17 11:07:26 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 11:07:26 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 11:07:26 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 11:07:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(5606751836400)#4
2024-07-17 11:07:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6df9588a
2024-07-17 11:07:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 11:07:26 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1724971334 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@794546267)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1037685869 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@969951)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1635061585 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 11:07:26 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 11:07:26 - Extracted JDBC value [0] - [4]
2024-07-17 11:07:26 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 11:07:26 - Extracted JDBC value [1] - [3]
2024-07-17 11:07:26 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 11:07:26 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1629386896
2024-07-17 11:07:26 - Extracted JDBC value [0] - [4]
2024-07-17 11:07:26 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@827738593
2024-07-17 11:07:26 - Extracted JDBC value [2] - [1234]
2024-07-17 11:07:26 - Extracted JDBC value [3] - [null]
2024-07-17 11:07:26 - Extracted JDBC value [4] - [1234]
2024-07-17 11:07:26 - Extracted JDBC value [5] - [1234]
2024-07-17 11:07:26 - Extracted JDBC value [6] - [1234]
2024-07-17 11:07:26 - Extracted JDBC value [7] - [null]
2024-07-17 11:07:26 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 11:07:26 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@827738593
2024-07-17 11:07:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@24dae9ea
2024-07-17 11:07:26 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 11:07:26 - Created new SQL alias : u1_0
2024-07-17 11:07:26 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(5606751836400))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 11:07:26 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@25fd4008
2024-07-17 11:07:26 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(5606751836400).username) 
2024-07-17 11:07:26 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(5606751836400)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(5606751836400).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(5606751836400).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(5606751836400).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(5606751836400).username]

2024-07-17 11:07:26 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(5606751836400)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 11:07:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 11:07:26 - Initializer list:
	  com.example.taskmanagement.model.User(5606751836400) -> EntityResultInitializer(com.example.taskmanagement.model.User(5606751836400))@1452741786 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(5606751836400).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(5606751836400).tasks)@430306112 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 11:07:26 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 11:07:26 - Extracted JDBC value [0] - [4]
2024-07-17 11:07:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(5606751836400)): 4
2024-07-17 11:07:26 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(5606751836400).tasks#4
2024-07-17 11:07:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@478fc23f
2024-07-17 11:07:26 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 11:07:26 - Writing [{message=Login successful!, userId=4}]
2024-07-17 11:07:26 - Completed 200 OK
2024-07-17 11:07:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:29 - Securing GET /api/users
2024-07-17 11:07:29 - Securing GET /api/users/4
2024-07-17 11:07:29 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:29 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:29 - Secured GET /api/users/4
2024-07-17 11:07:29 - GET "/api/users/4", parameters={}
2024-07-17 11:07:29 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 11:07:29 - Securing GET /error
2024-07-17 11:07:29 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:29 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:29 - Securing GET /api/users
2024-07-17 11:07:29 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:29 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:29 - Securing GET /error
2024-07-17 11:07:29 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:29 - Pre-authenticated entry point called. Rejecting access
2024-07-17 11:07:29 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 11:07:29 - begin
2024-07-17 11:07:29 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 11:07:29 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1033987763 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1823448942 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 11:07:29 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 11:07:29 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 11:07:29 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 11:07:29 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 472581747
2024-07-17 11:07:29 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 11:07:29 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 11:07:29 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 11:07:29 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 11:07:29 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f5e8647
2024-07-17 11:07:29 - committing
2024-07-17 11:07:29 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 11:07:29 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@8284139 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@794546267)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1502166341 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@969951)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@620814864 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 11:07:29 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 11:07:29 - Extracted JDBC value [0] - [4]
2024-07-17 11:07:29 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 11:07:29 - Extracted JDBC value [1] - [3]
2024-07-17 11:07:29 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 11:07:29 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 95747248
2024-07-17 11:07:29 - Extracted JDBC value [0] - [4]
2024-07-17 11:07:29 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@217034359
2024-07-17 11:07:29 - Extracted JDBC value [2] - [1234]
2024-07-17 11:07:29 - Extracted JDBC value [3] - [null]
2024-07-17 11:07:29 - Extracted JDBC value [4] - [1234]
2024-07-17 11:07:29 - Extracted JDBC value [5] - [1234]
2024-07-17 11:07:29 - Extracted JDBC value [6] - [1234]
2024-07-17 11:07:29 - Extracted JDBC value [7] - [null]
2024-07-17 11:07:29 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 11:07:29 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@217034359
2024-07-17 11:07:29 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@27068e74
2024-07-17 11:07:29 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 11:07:29 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 11:07:29 - Writing [com.example.taskmanagement.dto.UserDTO@5a2c9de8]
2024-07-17 11:07:29 - Completed 200 OK
2024-07-17 11:07:29 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:07:29 - Securing GET /api/users/4
2024-07-17 11:07:29 - Secured GET /api/users/4
2024-07-17 11:07:29 - GET "/api/users/4", parameters={}
2024-07-17 11:07:29 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 11:07:29 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 11:07:29 - begin
2024-07-17 11:07:29 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 11:07:29 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1899720936 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1963256343 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 11:07:29 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 11:07:29 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 11:07:29 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 11:07:29 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 33336248
2024-07-17 11:07:29 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 11:07:29 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 11:07:29 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 11:07:29 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 11:07:29 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5029859c
2024-07-17 11:07:29 - committing
2024-07-17 11:07:29 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 11:07:29 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1315729480 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@794546267)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1216266490 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@969951)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1416083724 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 11:07:29 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 11:07:29 - Extracted JDBC value [0] - [4]
2024-07-17 11:07:29 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 11:07:29 - Extracted JDBC value [1] - [3]
2024-07-17 11:07:29 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 11:07:29 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 550738219
2024-07-17 11:07:29 - Extracted JDBC value [0] - [4]
2024-07-17 11:07:29 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1400548802
2024-07-17 11:07:29 - Extracted JDBC value [2] - [1234]
2024-07-17 11:07:29 - Extracted JDBC value [3] - [null]
2024-07-17 11:07:29 - Extracted JDBC value [4] - [1234]
2024-07-17 11:07:29 - Extracted JDBC value [5] - [1234]
2024-07-17 11:07:29 - Extracted JDBC value [6] - [1234]
2024-07-17 11:07:29 - Extracted JDBC value [7] - [null]
2024-07-17 11:07:29 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 11:07:29 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1400548802
2024-07-17 11:07:29 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@4995ebe4
2024-07-17 11:07:29 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 11:07:29 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 11:07:29 - Writing [com.example.taskmanagement.dto.UserDTO@4683e5d0]
2024-07-17 11:07:29 - Completed 200 OK
2024-07-17 11:07:29 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 11:43:18 - Starting TaskmanagementApplication using Java 22.0.1 with PID 32596 (C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement)
2024-07-17 11:43:18 - No active profile set, falling back to 1 default profile: "default"
2024-07-17 11:43:19 - Starting TaskmanagementApplication using Java 22.0.1 with PID 31012 (C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement)
2024-07-17 11:43:19 - No active profile set, falling back to 1 default profile: "default"
2024-07-17 11:43:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-17 11:43:20 - Finished Spring Data repository scanning in 62 ms. Found 2 JPA repository interfaces.
2024-07-17 11:43:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-17 11:43:20 - Finished Spring Data repository scanning in 55 ms. Found 2 JPA repository interfaces.
2024-07-17 11:43:21 - Tomcat initialized with port 8080 (http)
2024-07-17 11:43:21 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-17 11:43:21 - Starting service [Tomcat]
2024-07-17 11:43:21 - Tomcat initialized with port 8080 (http)
2024-07-17 11:43:21 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-17 11:43:21 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-17 11:43:21 - Starting service [Tomcat]
2024-07-17 11:43:21 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-17 11:43:21 - Initializing Spring embedded WebApplicationContext
2024-07-17 11:43:21 - Root WebApplicationContext: initialization completed in 2586 ms
2024-07-17 11:43:21 - Initializing Spring embedded WebApplicationContext
2024-07-17 11:43:21 - Root WebApplicationContext: initialization completed in 2250 ms
2024-07-17 11:43:21 - Filter 'webMvcObservationFilter' configured for use
2024-07-17 11:43:21 - Filter 'webMvcObservationFilter' configured for use
2024-07-17 11:43:21 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/DSE204-03-Assignments/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-17 11:43:21 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/DSE204-03-Assignments/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-17 11:43:21 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-17 11:43:21 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-17 11:43:21 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-17 11:43:21 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-17 11:43:22 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-17 11:43:22 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-17 11:43:22 - HHH000206: 'hibernate.properties' not found
2024-07-17 11:43:22 - HHH000206: 'hibernate.properties' not found
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 11:43:22 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-17 11:43:22 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-17 11:43:22 - HHH000026: Second-level cache disabled
2024-07-17 11:43:22 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-17 11:43:22 - HHH000026: Second-level cache disabled
2024-07-17 11:43:22 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 11:43:22 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 11:43:22 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 11:43:22 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 11:43:22 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 11:43:22 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 11:43:22 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 11:43:22 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 11:43:22 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 11:43:22 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 11:43:22 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 11:43:22 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 11:43:22 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 11:43:22 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 11:43:22 - Adding type registration image -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-17 11:43:22 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 11:43:22 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 11:43:22 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 11:43:22 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 11:43:22 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 11:43:22 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 11:43:22 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 11:43:22 - Adding type registration short -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:43:22 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 11:43:22 - Adding type registration short -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 11:43:22 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:43:22 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 11:43:22 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 11:43:22 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 11:43:22 - Adding type registration int -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 11:43:22 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 11:43:22 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 11:43:22 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 11:43:22 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 11:43:22 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 11:43:22 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 11:43:22 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 11:43:22 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 11:43:22 - Adding type registration long -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 11:43:22 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 11:43:22 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-17 11:43:22 - Adding type registration float -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 11:43:22 - Adding type registration float -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 11:43:22 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-17 11:43:22 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 11:43:22 - Adding type registration image -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 11:43:22 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 11:43:22 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 11:43:22 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 11:43:22 - Adding type registration double -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 11:43:22 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 11:43:22 - Adding type registration short -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:43:22 - Adding type registration short -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:43:22 - Adding type registration double -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 11:43:22 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:43:22 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:43:22 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 11:43:22 - Adding type registration int -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:43:22 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:43:22 - Adding type registration long -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 11:43:22 - Adding type registration long -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 11:43:22 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 11:43:22 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 11:43:22 - Adding type registration float -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 11:43:22 - Adding type registration float -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 11:43:22 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 11:43:22 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 11:43:22 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 11:43:22 - Adding type registration double -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 11:43:22 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 11:43:22 - Adding type registration double -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 11:43:22 - Adding type registration character -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 11:43:22 - Adding type registration char -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 11:43:22 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 11:43:22 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 11:43:22 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 11:43:22 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-17 11:43:22 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-17 11:43:22 - Adding type registration string -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 11:43:22 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 11:43:22 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 11:43:22 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 11:43:22 - Adding type registration character -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 11:43:22 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 11:43:22 - Adding type registration char -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 11:43:22 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:43:22 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 11:43:22 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:43:22 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 11:43:22 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:43:22 - Adding type registration string -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 11:43:22 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 11:43:22 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 11:43:22 - Adding type registration text -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 11:43:22 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 11:43:22 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 11:43:22 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 11:43:22 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 11:43:22 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 11:43:22 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 11:43:22 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 11:43:22 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 11:43:22 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 11:43:22 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 11:43:22 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 11:43:22 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 11:43:22 - Adding type registration text -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 11:43:22 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-17 11:43:22 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 11:43:22 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 11:43:22 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 11:43:22 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 11:43:22 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 11:43:22 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 11:43:22 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 11:43:22 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 11:43:22 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 11:43:22 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 11:43:22 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 11:43:22 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 11:43:22 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-17 11:43:22 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:43:22 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 11:43:22 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 11:43:22 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 11:43:22 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:43:22 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:43:22 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:43:22 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 11:43:22 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 11:43:22 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 11:43:22 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 11:43:22 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-17 11:43:22 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 11:43:22 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 11:43:22 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-17 11:43:22 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 11:43:22 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 11:43:22 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 11:43:22 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 11:43:22 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 11:43:22 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 11:43:22 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 11:43:22 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-17 11:43:22 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 11:43:22 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 11:43:22 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 11:43:22 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 11:43:22 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 11:43:22 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 11:43:22 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7bdb4f17
2024-07-17 11:43:22 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 11:43:22 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77856cc5
2024-07-17 11:43:22 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 11:43:22 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1fbd5e0
2024-07-17 11:43:22 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 11:43:22 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:43:22 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-17 11:43:22 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:43:22 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 11:43:22 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-17 11:43:22 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 11:43:22 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@135064ea
2024-07-17 11:43:22 - Adding type registration date -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 11:43:22 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4f6fd101
2024-07-17 11:43:22 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 11:43:22 - Adding type registration date -> org.hibernate.type.BasicTypeReference@106459d9
2024-07-17 11:43:22 - Adding type registration time -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 11:43:22 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 11:43:22 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 11:43:22 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@106459d9
2024-07-17 11:43:22 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 11:43:22 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 11:43:22 - Adding type registration time -> org.hibernate.type.BasicTypeReference@33a71d23
2024-07-17 11:43:22 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 11:43:22 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@33a71d23
2024-07-17 11:43:22 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 11:43:22 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 11:43:22 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@23c05889
2024-07-17 11:43:22 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@23c05889
2024-07-17 11:43:22 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 11:43:22 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-17 11:43:22 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@23c05889
2024-07-17 11:43:22 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@12166229
2024-07-17 11:43:22 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@12166229
2024-07-17 11:43:22 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 11:43:22 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@12166229
2024-07-17 11:43:22 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 11:43:22 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 11:43:22 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@208e5b23
2024-07-17 11:43:22 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 11:43:22 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 11:43:22 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2bcb1414
2024-07-17 11:43:22 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 11:43:22 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 11:43:22 - Adding type registration class -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:43:22 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@aee05f4
2024-07-17 11:43:22 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:43:22 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 11:43:22 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@aee05f4
2024-07-17 11:43:22 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 11:43:22 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2b4829aa
2024-07-17 11:43:22 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2b4829aa
2024-07-17 11:43:22 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2b4829aa
2024-07-17 11:43:22 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@794d28a3
2024-07-17 11:43:22 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@a55e82a
2024-07-17 11:43:22 - Adding type registration class -> org.hibernate.type.BasicTypeReference@70ee9d31
2024-07-17 11:43:22 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@70ee9d31
2024-07-17 11:43:22 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1a01ffff
2024-07-17 11:43:22 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1a01ffff
2024-07-17 11:43:22 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 11:43:22 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 11:43:22 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 11:43:22 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 11:43:22 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 11:43:22 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-17 11:43:22 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-17 11:43:22 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 11:43:22 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 11:43:22 - Adding type registration url -> org.hibernate.type.BasicTypeReference@7bdb4f17
2024-07-17 11:43:22 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1a01ffff
2024-07-17 11:43:22 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7bdb4f17
2024-07-17 11:43:22 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@77856cc5
2024-07-17 11:43:22 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2fa879ed
2024-07-17 11:43:22 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1fbd5e0
2024-07-17 11:43:22 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2fa879ed
2024-07-17 11:43:22 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2b2b7e3c
2024-07-17 11:43:22 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2b2b7e3c
2024-07-17 11:43:22 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3ec082a1
2024-07-17 11:43:22 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3ec082a1
2024-07-17 11:43:22 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7a3c99f1
2024-07-17 11:43:22 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7a3c99f1
2024-07-17 11:43:22 - Adding type registration url -> org.hibernate.type.BasicTypeReference@16b7e04a
2024-07-17 11:43:22 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@16b7e04a
2024-07-17 11:43:22 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@661db63e
2024-07-17 11:43:22 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5cf2f5d6
2024-07-17 11:43:22 - Adding type registration object -> org.hibernate.type.JavaObjectType@3cb04dd
2024-07-17 11:43:22 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3cb04dd
2024-07-17 11:43:22 - Adding type registration object -> org.hibernate.type.JavaObjectType@2c1ea7be
2024-07-17 11:43:22 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2c1ea7be
2024-07-17 11:43:22 - Adding type registration null -> org.hibernate.type.NullType@4cc4d454
2024-07-17 11:43:22 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3add5e17
2024-07-17 11:43:22 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1c58d7be
2024-07-17 11:43:22 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@61b8c9de
2024-07-17 11:43:22 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@b34c7c9
2024-07-17 11:43:22 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5b490d5e
2024-07-17 11:43:22 - Adding type registration null -> org.hibernate.type.NullType@7742a276
2024-07-17 11:43:22 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1f6c4ae
2024-07-17 11:43:22 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@26270b77
2024-07-17 11:43:22 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@b808af5
2024-07-17 11:43:22 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1f48fa72
2024-07-17 11:43:22 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@35b3c1f6
2024-07-17 11:43:22 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@495da9a7
2024-07-17 11:43:22 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2beee3e8
2024-07-17 11:43:22 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@732d078d
2024-07-17 11:43:22 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@58bad46f
2024-07-17 11:43:22 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7c0e4e4e
2024-07-17 11:43:22 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@20231384
2024-07-17 11:43:22 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@290c266c] into BootstrapContext; was [null]
2024-07-17 11:43:22 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@290c266c) [was null]
2024-07-17 11:43:22 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@da5d5e1] into BootstrapContext; was [null]
2024-07-17 11:43:22 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@da5d5e1) [was null]
2024-07-17 11:43:22 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2570b316] into BootstrapContext; was [null]
2024-07-17 11:43:22 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@56881196] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@75c33608]
2024-07-17 11:43:22 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7df3da0b] into BootstrapContext; was [null]
2024-07-17 11:43:22 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4e5d5ac1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@70777a65]
2024-07-17 11:43:22 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-17 11:43:22 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@da5d5e1]
2024-07-17 11:43:22 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@da5d5e1]
2024-07-17 11:43:22 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-17 11:43:22 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@290c266c]
2024-07-17 11:43:22 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@290c266c]
2024-07-17 11:43:22 - HikariPool-1 - Starting...
2024-07-17 11:43:22 - HikariPool-1 - Starting...
2024-07-17 11:43:22 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3cc2e3e
2024-07-17 11:43:22 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a8656a2
2024-07-17 11:43:22 - HikariPool-1 - Start completed.
2024-07-17 11:43:22 - HikariPool-1 - Start completed.
2024-07-17 11:43:22 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-17 11:43:22 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-17 11:43:22 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-17 11:43:22 - JDBC version : 4.2
2024-07-17 11:43:22 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-17 11:43:22 - JDBC version : 4.2
2024-07-17 11:43:22 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-17 11:43:22 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-17 11:43:22 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-17 11:43:22 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-17 11:43:22 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-17 11:43:22 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-17 11:43:22 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-17 11:43:22 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-17 11:43:22 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-17 11:43:22 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-17 11:43:22 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18f13756) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@665b441e)
2024-07-17 11:43:22 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2ac3d530) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a5e4f32)
2024-07-17 11:43:22 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd6f517) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e01b195)
2024-07-17 11:43:22 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2b0494a8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@17c34e62)
2024-07-17 11:43:22 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@239d73ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6bf28f61)
2024-07-17 11:43:22 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59a3eaf7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@718d6b7c)
2024-07-17 11:43:22 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64dcf763) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@696105c4)
2024-07-17 11:43:22 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ab919c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5edd9b4f)
2024-07-17 11:43:22 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1b994617) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@807c1e8)
2024-07-17 11:43:22 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5db90818) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c17794e)
2024-07-17 11:43:22 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4eb5764d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54f9326c)
2024-07-17 11:43:22 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5016f1a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@33bfe6d3)
2024-07-17 11:43:22 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@414d2821) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7378c4a4)
2024-07-17 11:43:22 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@56dde9f7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b2acb12)
2024-07-17 11:43:22 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6694fb1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61ce238e)
2024-07-17 11:43:22 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@455d04d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@998fbd4)
2024-07-17 11:43:22 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@30333941) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d5c160e)
2024-07-17 11:43:22 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@8afce3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e02f17d)
2024-07-17 11:43:22 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-17 11:43:22 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-17 11:43:22 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-17 11:43:22 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-17 11:43:22 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-17 11:43:22 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-17 11:43:22 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 11:43:22 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 11:43:22 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 11:43:22 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 11:43:22 - Adding type registration null -> org.hibernate.type.NullType@3e63bd6b
2024-07-17 11:43:22 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7742a276`
2024-07-17 11:43:22 - Adding type registration null -> org.hibernate.type.NullType@13ddaffb
2024-07-17 11:43:22 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4cc4d454`
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:22 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:22 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:22 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:22 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:22 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:22 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:22 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:22 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:22 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:22 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:22 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:22 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:22 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:22 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:22 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:22 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:22 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:22 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8dbf0f2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@59d0fac9]
2024-07-17 11:43:22 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4713b631] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7a0d2c80]
2024-07-17 11:43:22 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-17 11:43:22 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-17 11:43:22 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-17 11:43:22 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-17 11:43:22 - Import with entity name Task
2024-07-17 11:43:22 - Import with entity name Task
2024-07-17 11:43:22 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-17 11:43:22 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-17 11:43:22 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 11:43:22 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 11:43:22 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 11:43:22 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 11:43:22 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 11:43:22 - MetadataSourceProcessor property id with lazy=false
2024-07-17 11:43:22 - MetadataSourceProcessor property id with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-17 11:43:22 - building BasicValue for id
2024-07-17 11:43:22 - building BasicValue for id
2024-07-17 11:43:22 - Skipping column re-registration: task.id
2024-07-17 11:43:22 - Skipping column re-registration: task.id
2024-07-17 11:43:22 - Building property id
2024-07-17 11:43:22 - Building property id
2024-07-17 11:43:22 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 11:43:22 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property category with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-17 11:43:22 - building BasicValue for category
2024-07-17 11:43:22 - Skipping column re-registration: task.category
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Building property category
2024-07-17 11:43:22 - MetadataSourceProcessor property category with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-17 11:43:22 - building BasicValue for category
2024-07-17 11:43:22 - Skipping column re-registration: task.category
2024-07-17 11:43:22 - Building property category
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-17 11:43:22 - building BasicValue for createdAt
2024-07-17 11:43:22 - Skipping column re-registration: task.created_at
2024-07-17 11:43:22 - Building property createdAt
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property description with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-17 11:43:22 - building BasicValue for description
2024-07-17 11:43:22 - Skipping column re-registration: task.description
2024-07-17 11:43:22 - Building property description
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property priority with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-17 11:43:22 - building BasicValue for priority
2024-07-17 11:43:22 - Skipping column re-registration: task.priority
2024-07-17 11:43:22 - Building property priority
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property title with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-17 11:43:22 - building BasicValue for title
2024-07-17 11:43:22 - Skipping column re-registration: task.title
2024-07-17 11:43:22 - Building property title
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-17 11:43:22 - building BasicValue for updatedAt
2024-07-17 11:43:22 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-17 11:43:22 - Skipping column re-registration: task.updated_at
2024-07-17 11:43:22 - building BasicValue for createdAt
2024-07-17 11:43:22 - Building property updatedAt
2024-07-17 11:43:22 - Skipping column re-registration: task.created_at
2024-07-17 11:43:22 - Building property createdAt
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property description with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-17 11:43:22 - building BasicValue for description
2024-07-17 11:43:22 - Skipping column re-registration: task.description
2024-07-17 11:43:22 - Building property description
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property priority with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-17 11:43:22 - building BasicValue for priority
2024-07-17 11:43:22 - Skipping column re-registration: task.priority
2024-07-17 11:43:22 - Building property priority
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property title with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-17 11:43:22 - building BasicValue for title
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-17 11:43:22 - Skipping column re-registration: task.title
2024-07-17 11:43:22 - Building property title
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-17 11:43:22 - building BasicValue for updatedAt
2024-07-17 11:43:22 - Skipping column re-registration: task.updated_at
2024-07-17 11:43:22 - Building property updatedAt
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Building property user
2024-07-17 11:43:22 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 11:43:22 - Building property user
2024-07-17 11:43:22 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 11:43:22 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-17 11:43:22 - Import with entity name User
2024-07-17 11:43:22 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-17 11:43:22 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 11:43:22 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Import with entity name User
2024-07-17 11:43:22 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 11:43:22 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 11:43:22 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-17 11:43:22 - MetadataSourceProcessor property id with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-17 11:43:22 - building BasicValue for id
2024-07-17 11:43:22 - Skipping column re-registration: users.id
2024-07-17 11:43:22 - Building property id
2024-07-17 11:43:22 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 11:43:22 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property email with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-17 11:43:22 - building BasicValue for email
2024-07-17 11:43:22 - Skipping column re-registration: users.email
2024-07-17 11:43:22 - Building property email
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property password with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-17 11:43:22 - building BasicValue for password
2024-07-17 11:43:22 - Skipping column re-registration: users.password
2024-07-17 11:43:22 - Building property password
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 11:43:22 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 11:43:22 - MetadataSourceProcessor property id with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-17 11:43:22 - building BasicValue for id
2024-07-17 11:43:22 - Skipping column re-registration: users.id
2024-07-17 11:43:22 - Building property id
2024-07-17 11:43:22 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property email with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-17 11:43:22 - building BasicValue for email
2024-07-17 11:43:22 - Skipping column re-registration: users.email
2024-07-17 11:43:22 - Building property email
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property password with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-17 11:43:22 - building BasicValue for password
2024-07-17 11:43:22 - Skipping column re-registration: users.password
2024-07-17 11:43:22 - Building property password
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-17 11:43:22 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-17 11:43:22 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:22 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:22 - Building property tasks
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - MetadataSourceProcessor property username with lazy=false
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-17 11:43:22 - building BasicValue for username
2024-07-17 11:43:22 - Skipping column re-registration: users.username
2024-07-17 11:43:22 - Building property username
2024-07-17 11:43:22 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 11:43:22 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:22 - Building property tasks
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-17 11:43:22 - Binding column: AnnotatedColumn()
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 11:43:22 - MetadataSourceProcessor property username with lazy=false
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-17 11:43:22 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-17 11:43:22 - building BasicValue for username
2024-07-17 11:43:22 - Skipping column re-registration: users.username
2024-07-17 11:43:22 - Building property username
2024-07-17 11:43:22 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-17 11:43:22 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-17 11:43:22 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-17 11:43:22 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-17 11:43:22 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:22 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-17 11:43:22 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-17 11:43:22 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-17 11:43:22 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-17 11:43:22 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:22 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-17 11:43:22 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-17 11:43:22 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-17 11:43:22 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-17 11:43:22 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-17 11:43:22 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-17 11:43:22 - Building session factory
2024-07-17 11:43:22 - Building session factory
2024-07-17 11:43:22 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 11:43:22 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 11:43:22 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@79e9c14, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@340c7479, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.16283239309944180785, com.sun.management.jmxremote.port=56278, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=32596, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.16283239309944180785, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@575e862c, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-17 11:43:22 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@766db6f9, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6f8fb906, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.15266553277000207933, com.sun.management.jmxremote.port=56267, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=31012, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.15266553277000207933, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@728535c6, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-17 11:43:22 - Session factory constructed with filter configurations : {}
2024-07-17 11:43:22 - Session factory constructed with filter configurations : {}
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@27605b87] under count; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2ad6895a] under count; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@153d14e3] under every; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3b17759c] under any; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6127ef86] under every; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@542754be] under any; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d7af82] under sinh; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8b1bfdf] under sinh; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5adc71e7] under cosh; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fc5a558] under tanh; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42fd8f2f] under pi; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@95f1422] under cosh; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7eea934d] under log; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@31b7112d] under tanh; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47fc9ce] under pi; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b5d1d9] under log; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : length -> character_length
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : length -> character_length
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5e83298e] under position; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@10d97b64] under position; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@95f1422] under overlay; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3bbdf835] under overlay; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@703a2bc9] under trim; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@29d29657] under trim; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7a75183d] under cast; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@11939a9f] under cast; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2acbe46d] under collate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@229d508c] under collate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6f695077] under extract; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@34fcc5e3] under extract; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1e160a9e] under ifnull; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7dbd70fd] under ifnull; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@54780c40] under pad; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2d114d27] under pad; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@e0d9e3f] under str; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@68f1b89] under str; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3b590f6a] under format; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2e5c7cd5] under format; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2aac87ab] under timestampadd; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7a14ab66] under timestampadd; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5d9d8ecf] under timestampdiff; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : dateadd -> timestampadd
2024-07-17 11:43:22 - Registering alternate key : datediff -> timestampdiff
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6e5b3642] under timestampdiff; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : dateadd -> timestampadd
2024-07-17 11:43:22 - Registering alternate key : datediff -> timestampdiff
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@446981a4] under current_date; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@644f6e89] under current_time; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9ae0794] under current_timestamp; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : current date -> current_date
2024-07-17 11:43:22 - Registering alternate key : current time -> current_time
2024-07-17 11:43:22 - Registering alternate key : current timestamp -> current_timestamp
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60e5eed0] under local_date; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@680937c9] under local_time; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77ad2767] under local_datetime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e460ca1] under offset_datetime; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : local date -> local_date
2024-07-17 11:43:22 - Registering alternate key : local time -> local_time
2024-07-17 11:43:22 - Registering alternate key : local datetime -> local_datetime
2024-07-17 11:43:22 - Registering alternate key : offset datetime -> offset_datetime
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@411ae0d7] under instant; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : current_instant -> instant
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5693d1d2] under sql; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@69356aca] under current_date; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a17ffee] under current_time; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ffc4195] under current_timestamp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b5d1d9
2024-07-17 11:43:22 - Registering alternate key : current date -> current_date
2024-07-17 11:43:22 - Registering alternate key : current time -> current_time
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : current timestamp -> current_timestamp
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ce760af] under local_date; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e4636c3] under local_time; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7b6b466a] under local_datetime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6686507b] under offset_datetime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : local date -> local_date
2024-07-17 11:43:22 - Registering alternate key : local time -> local_time
2024-07-17 11:43:22 - Registering alternate key : local datetime -> local_datetime
2024-07-17 11:43:22 - Registering alternate key : offset datetime -> offset_datetime
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2123a61c] under instant; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : current_instant -> instant
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4840ec68] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@675bf541] under sql; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7cc3a7f7] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7eea934d
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : day -> dayofmonth
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@210e2f2f] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5e83298e
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4a0c04ab] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@453439e] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : day -> dayofmonth
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2d33795c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@10d97b64
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@34ea86ff] under trunc; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : truncate -> trunc
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4bcf08ae] under bitand; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@626b9092] under bitor; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ac2829e] under bitxor; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a7f2247] under bitnot; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@325e03b] under trunc; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : truncate -> trunc
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3911fec8] under bitand; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e38e8b6] under bitor; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4946dfde] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2e5c7cd5
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59bbf82e] under bitxor; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@75b3ef1a] under bitnot; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@680937c9
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@77ad2767
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77972964] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47fc9ce
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@794f937a] under chr; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : char -> chr
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aa1fb0e] under sysdate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@43e2b8da] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3b590f6a
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3e4636c3
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7b6b466a
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1ac68548] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42fd8f2f
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1c3a64b6] under chr; prior registration was null
2024-07-17 11:43:22 - Registering alternate key : char -> chr
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@761b9314] under sysdate; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@3b29d36c] under listagg; prior registration was null
2024-07-17 11:43:22 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@6bd28e4a] under listagg; prior registration was null
2024-07-17 11:43:22 - abs(NUMERIC arg)
2024-07-17 11:43:22 - abs(NUMERIC arg)
2024-07-17 11:43:22 - Double acos(NUMERIC arg)
2024-07-17 11:43:22 - adddate(DATE datetime, INTEGER days)
2024-07-17 11:43:22 - addtime(TIME datetime, TIME time)
2024-07-17 11:43:22 - Boolean any(BOOLEAN arg)
2024-07-17 11:43:22 - Double acos(NUMERIC arg)
2024-07-17 11:43:22 - adddate(DATE datetime, INTEGER days)
2024-07-17 11:43:22 - addtime(TIME datetime, TIME time)
2024-07-17 11:43:22 - Boolean any(BOOLEAN arg)
2024-07-17 11:43:22 - Integer ascii(STRING arg)
2024-07-17 11:43:22 - Integer ascii(STRING arg)
2024-07-17 11:43:22 - Double asin(NUMERIC arg)
2024-07-17 11:43:22 - Double atan(NUMERIC arg)
2024-07-17 11:43:22 - Double asin(NUMERIC arg)
2024-07-17 11:43:22 - Double atan(NUMERIC arg)
2024-07-17 11:43:22 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-17 11:43:22 - avg(arg)
2024-07-17 11:43:22 - bit_and(arg)
2024-07-17 11:43:22 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-17 11:43:22 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-17 11:43:22 - bit_or(arg)
2024-07-17 11:43:22 - avg(arg)
2024-07-17 11:43:22 - bitand(arg0, arg1)
2024-07-17 11:43:22 - bit_and(arg)
2024-07-17 11:43:22 - bitnot(arg)
2024-07-17 11:43:22 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-17 11:43:22 - bitor(arg0, arg1)
2024-07-17 11:43:22 - bit_or(arg)
2024-07-17 11:43:22 - bitxor(arg0, arg1)
2024-07-17 11:43:22 - bitand(arg0, arg1)
2024-07-17 11:43:22 - cast(arg as Type)
2024-07-17 11:43:22 - bitnot(arg)
2024-07-17 11:43:22 - ceiling(NUMERIC arg)
2024-07-17 11:43:22 - bitor(arg0, arg1)
2024-07-17 11:43:22 - bitxor(arg0, arg1)
2024-07-17 11:43:22 - cast(arg as Type)
2024-07-17 11:43:22 - Character char(INTEGER arg)
2024-07-17 11:43:22 - ceiling(NUMERIC arg)
2024-07-17 11:43:22 - Character char(INTEGER arg)
2024-07-17 11:43:22 - Integer character_length(STRING_OR_CLOB arg)
2024-07-17 11:43:22 - Integer character_length(STRING_OR_CLOB arg)
2024-07-17 11:43:22 - Character chr(INTEGER arg)
2024-07-17 11:43:22 - Character chr(INTEGER arg)
2024-07-17 11:43:22 - coalesce(arg0[, arg1[, ...]])
2024-07-17 11:43:22 - coalesce(arg0[, arg1[, ...]])
2024-07-17 11:43:22 - String collate(STRING string as COLLATION collation)
2024-07-17 11:43:22 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-17 11:43:22 - String collate(STRING string as COLLATION collation)
2024-07-17 11:43:22 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-17 11:43:22 - Double cos(NUMERIC arg)
2024-07-17 11:43:22 - Double cos(NUMERIC arg)
2024-07-17 11:43:22 - Double cosh(NUMERIC arg)
2024-07-17 11:43:22 - Double cosh(NUMERIC arg)
2024-07-17 11:43:22 - Double cot(NUMERIC arg)
2024-07-17 11:43:22 - Long count([distinct ]{arg|*})
2024-07-17 11:43:22 - Double cot(NUMERIC arg)
2024-07-17 11:43:22 - Integer crc32(arg)
2024-07-17 11:43:22 - Date curdate()
2024-07-17 11:43:22 - Date current date
2024-07-17 11:43:22 - Long count([distinct ]{arg|*})
2024-07-17 11:43:22 - Time current time
2024-07-17 11:43:22 - Timestamp current timestamp
2024-07-17 11:43:22 - Date current_date
2024-07-17 11:43:22 - Integer crc32(arg)
2024-07-17 11:43:22 - Instant current_instant
2024-07-17 11:43:22 - Date curdate()
2024-07-17 11:43:22 - Time current_time
2024-07-17 11:43:22 - Timestamp current_timestamp
2024-07-17 11:43:22 - Time curtime()
2024-07-17 11:43:22 - Date date(arg)
2024-07-17 11:43:22 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 11:43:22 - Date current date
2024-07-17 11:43:22 - Integer datediff(DATE end, DATE start)
2024-07-17 11:43:22 - Integer day(DATE arg)
2024-07-17 11:43:22 - Time current time
2024-07-17 11:43:22 - String dayname(DATE arg)
2024-07-17 11:43:22 - Timestamp current timestamp
2024-07-17 11:43:22 - Integer dayofmonth(DATE arg)
2024-07-17 11:43:22 - Date current_date
2024-07-17 11:43:22 - Integer dayofweek(DATE arg)
2024-07-17 11:43:22 - Instant current_instant
2024-07-17 11:43:22 - Time current_time
2024-07-17 11:43:22 - Integer dayofyear(DATE arg)
2024-07-17 11:43:22 - Timestamp current_timestamp
2024-07-17 11:43:22 - Time curtime()
2024-07-17 11:43:22 - Double degrees(NUMERIC arg)
2024-07-17 11:43:22 - Date date(arg)
2024-07-17 11:43:22 - Boolean every(BOOLEAN arg)
2024-07-17 11:43:22 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 11:43:22 - Double exp(NUMERIC arg)
2024-07-17 11:43:22 - Integer datediff(DATE end, DATE start)
2024-07-17 11:43:22 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-17 11:43:22 - floor(NUMERIC arg)
2024-07-17 11:43:22 - Integer day(DATE arg)
2024-07-17 11:43:22 - String format(TEMPORAL datetime as STRING pattern)
2024-07-17 11:43:22 - String dayname(DATE arg)
2024-07-17 11:43:22 - Integer dayofmonth(DATE arg)
2024-07-17 11:43:22 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 11:43:22 - Integer dayofweek(DATE arg)
2024-07-17 11:43:22 - Integer hour(TIME arg)
2024-07-17 11:43:22 - ifnull(arg0, arg1)
2024-07-17 11:43:22 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-17 11:43:22 - Integer dayofyear(DATE arg)
2024-07-17 11:43:22 - Instant instant
2024-07-17 11:43:22 - Double degrees(NUMERIC arg)
2024-07-17 11:43:22 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-17 11:43:22 - Boolean every(BOOLEAN arg)
2024-07-17 11:43:22 - Double exp(NUMERIC arg)
2024-07-17 11:43:22 - Date last_day(DATE arg)
2024-07-17 11:43:22 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-17 11:43:22 - floor(NUMERIC arg)
2024-07-17 11:43:22 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 11:43:22 - String format(TEMPORAL datetime as STRING pattern)
2024-07-17 11:43:22 - String left(STRING string, INTEGER length)
2024-07-17 11:43:22 - Integer length(STRING_OR_CLOB arg)
2024-07-17 11:43:22 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 11:43:22 - String listagg(STRING arg0, STRING arg1)
2024-07-17 11:43:22 - Integer hour(TIME arg)
2024-07-17 11:43:22 - Double ln(NUMERIC arg)
2024-07-17 11:43:22 - ifnull(arg0, arg1)
2024-07-17 11:43:22 - LocalDate local date
2024-07-17 11:43:22 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-17 11:43:22 - Instant instant
2024-07-17 11:43:22 - LocalDateTime local datetime
2024-07-17 11:43:22 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-17 11:43:22 - LocalTime local time
2024-07-17 11:43:22 - Date last_day(DATE arg)
2024-07-17 11:43:22 - LocalDate local_date
2024-07-17 11:43:22 - LocalDateTime local_datetime
2024-07-17 11:43:22 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 11:43:22 - LocalTime local_time
2024-07-17 11:43:22 - String left(STRING string, INTEGER length)
2024-07-17 11:43:22 - Timestamp localtime
2024-07-17 11:43:22 - Integer length(STRING_OR_CLOB arg)
2024-07-17 11:43:22 - Timestamp localtimestamp
2024-07-17 11:43:22 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-17 11:43:22 - String listagg(STRING arg0, STRING arg1)
2024-07-17 11:43:22 - Double ln(NUMERIC arg)
2024-07-17 11:43:22 - LocalDate local date
2024-07-17 11:43:22 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-17 11:43:22 - LocalDateTime local datetime
2024-07-17 11:43:22 - Double log10(NUMERIC arg)
2024-07-17 11:43:22 - LocalTime local time
2024-07-17 11:43:22 - Double log2(NUMERIC arg)
2024-07-17 11:43:22 - LocalDate local_date
2024-07-17 11:43:22 - String lower(STRING string)
2024-07-17 11:43:22 - LocalDateTime local_datetime
2024-07-17 11:43:22 - String lpad(string, length[, padding])
2024-07-17 11:43:22 - LocalTime local_time
2024-07-17 11:43:22 - String ltrim(STRING string[, STRING characters])
2024-07-17 11:43:22 - Timestamp localtime
2024-07-17 11:43:22 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-17 11:43:22 - Timestamp localtimestamp
2024-07-17 11:43:22 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-17 11:43:22 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-17 11:43:22 - max(COMPARABLE arg)
2024-07-17 11:43:22 - String md5(arg)
2024-07-17 11:43:22 - Integer microsecond(TIME arg)
2024-07-17 11:43:22 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-17 11:43:22 - min(COMPARABLE arg)
2024-07-17 11:43:22 - Double log10(NUMERIC arg)
2024-07-17 11:43:22 - Integer minute(TIME arg)
2024-07-17 11:43:22 - Double log2(NUMERIC arg)
2024-07-17 11:43:22 - String lower(STRING string)
2024-07-17 11:43:22 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-17 11:43:22 - String lpad(string, length[, padding])
2024-07-17 11:43:22 - Integer month(DATE arg)
2024-07-17 11:43:22 - String ltrim(STRING string[, STRING characters])
2024-07-17 11:43:22 - String monthname(DATE arg)
2024-07-17 11:43:22 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-17 11:43:22 - Timestamp now()
2024-07-17 11:43:22 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-17 11:43:22 - nullif(arg0, arg1)
2024-07-17 11:43:22 - max(COMPARABLE arg)
2024-07-17 11:43:22 - String md5(arg)
2024-07-17 11:43:22 - Integer microsecond(TIME arg)
2024-07-17 11:43:22 - min(COMPARABLE arg)
2024-07-17 11:43:22 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-17 11:43:22 - Integer minute(TIME arg)
2024-07-17 11:43:22 - OffsetDateTime offset datetime
2024-07-17 11:43:22 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-17 11:43:22 - OffsetDateTime offset_datetime
2024-07-17 11:43:22 - Integer month(DATE arg)
2024-07-17 11:43:22 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-17 11:43:22 - String monthname(DATE arg)
2024-07-17 11:43:22 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-17 11:43:22 - Double pi
2024-07-17 11:43:22 - Integer position(STRING pattern in STRING string)
2024-07-17 11:43:22 - Timestamp now()
2024-07-17 11:43:22 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-17 11:43:22 - nullif(arg0, arg1)
2024-07-17 11:43:22 - Integer quarter(DATE arg)
2024-07-17 11:43:22 - Double radians(NUMERIC arg)
2024-07-17 11:43:22 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-17 11:43:22 - Double rand([INTEGER seed])
2024-07-17 11:43:22 - OffsetDateTime offset datetime
2024-07-17 11:43:22 - String repeat(STRING string, INTEGER times)
2024-07-17 11:43:22 - OffsetDateTime offset_datetime
2024-07-17 11:43:22 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-17 11:43:22 - String reverse(STRING arg)
2024-07-17 11:43:22 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-17 11:43:22 - String right(STRING string, INTEGER length)
2024-07-17 11:43:22 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-17 11:43:22 - round(NUMERIC number[, INTEGER places])
2024-07-17 11:43:22 - Double pi
2024-07-17 11:43:22 - String rpad(string, length[, padding])
2024-07-17 11:43:22 - Integer position(STRING pattern in STRING string)
2024-07-17 11:43:22 - String rtrim(STRING string[, STRING characters])
2024-07-17 11:43:22 - Integer second(TIME arg)
2024-07-17 11:43:22 - String sha(arg)
2024-07-17 11:43:22 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-17 11:43:22 - String sha1(arg)
2024-07-17 11:43:22 - Integer quarter(DATE arg)
2024-07-17 11:43:22 - String sha2(arg0, arg1)
2024-07-17 11:43:22 - Double radians(NUMERIC arg)
2024-07-17 11:43:22 - Integer sign(NUMERIC arg)
2024-07-17 11:43:22 - Double rand([INTEGER seed])
2024-07-17 11:43:22 - Double sin(NUMERIC arg)
2024-07-17 11:43:22 - String repeat(STRING string, INTEGER times)
2024-07-17 11:43:22 - Double sinh(NUMERIC arg)
2024-07-17 11:43:22 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-17 11:43:22 - String soundex(arg)
2024-07-17 11:43:22 - String reverse(STRING arg)
2024-07-17 11:43:22 - String space(INTEGER arg)
2024-07-17 11:43:22 - String right(STRING string, INTEGER length)
2024-07-17 11:43:22 - round(NUMERIC number[, INTEGER places])
2024-07-17 11:43:22 - Object sql
2024-07-17 11:43:22 - String rpad(string, length[, padding])
2024-07-17 11:43:22 - Double sqrt(NUMERIC arg)
2024-07-17 11:43:22 - String rtrim(STRING string[, STRING characters])
2024-07-17 11:43:22 - Double stddev(NUMERIC arg)
2024-07-17 11:43:22 - Integer second(TIME arg)
2024-07-17 11:43:22 - Double stddev_pop(NUMERIC arg)
2024-07-17 11:43:22 - String sha(arg)
2024-07-17 11:43:22 - Double stddev_samp(NUMERIC arg)
2024-07-17 11:43:22 - String sha1(arg)
2024-07-17 11:43:22 - String str(arg)
2024-07-17 11:43:22 - subdate(DATE datetime, INTEGER days)
2024-07-17 11:43:22 - String sha2(arg0, arg1)
2024-07-17 11:43:22 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-17 11:43:22 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-17 11:43:22 - Integer sign(NUMERIC arg)
2024-07-17 11:43:22 - subtime(TIME datetime, TIME time)
2024-07-17 11:43:22 - Double sin(NUMERIC arg)
2024-07-17 11:43:22 - sum(arg)
2024-07-17 11:43:22 - Timestamp sysdate()
2024-07-17 11:43:22 - Double sinh(NUMERIC arg)
2024-07-17 11:43:22 - String soundex(arg)
2024-07-17 11:43:22 - Double tan(NUMERIC arg)
2024-07-17 11:43:22 - String space(INTEGER arg)
2024-07-17 11:43:22 - Object sql
2024-07-17 11:43:22 - Double sqrt(NUMERIC arg)
2024-07-17 11:43:22 - Double stddev(NUMERIC arg)
2024-07-17 11:43:22 - Double tanh(NUMERIC arg)
2024-07-17 11:43:22 - String time(arg)
2024-07-17 11:43:22 - Timestamp timestamp(arg0[, arg1])
2024-07-17 11:43:22 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 11:43:22 - Double stddev_pop(NUMERIC arg)
2024-07-17 11:43:22 - Double stddev_samp(NUMERIC arg)
2024-07-17 11:43:22 - String str(arg)
2024-07-17 11:43:22 - subdate(DATE datetime, INTEGER days)
2024-07-17 11:43:22 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-17 11:43:22 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-17 11:43:22 - subtime(TIME datetime, TIME time)
2024-07-17 11:43:22 - sum(arg)
2024-07-17 11:43:22 - Timestamp sysdate()
2024-07-17 11:43:22 - Double tan(NUMERIC arg)
2024-07-17 11:43:22 - Double tanh(NUMERIC arg)
2024-07-17 11:43:22 - String time(arg)
2024-07-17 11:43:22 - Timestamp timestamp(arg0[, arg1])
2024-07-17 11:43:22 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 11:43:22 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-17 11:43:22 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-17 11:43:22 - trunc( ... )
2024-07-17 11:43:22 - truncate( ... )
2024-07-17 11:43:22 - String upper(STRING string)
2024-07-17 11:43:22 - Date utc_date
2024-07-17 11:43:22 - Time utc_time
2024-07-17 11:43:22 - Timestamp utc_timestamp
2024-07-17 11:43:22 - Double var_pop(NUMERIC arg)
2024-07-17 11:43:22 - Double var_samp(NUMERIC arg)
2024-07-17 11:43:22 - Double variance(NUMERIC arg)
2024-07-17 11:43:22 - Integer week(DATE arg)
2024-07-17 11:43:22 - Integer year(DATE arg)
2024-07-17 11:43:22 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-17 11:43:22 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-17 11:43:22 - trunc( ... )
2024-07-17 11:43:22 - truncate( ... )
2024-07-17 11:43:22 - String upper(STRING string)
2024-07-17 11:43:22 - Date utc_date
2024-07-17 11:43:22 - Time utc_time
2024-07-17 11:43:22 - Timestamp utc_timestamp
2024-07-17 11:43:22 - Double var_pop(NUMERIC arg)
2024-07-17 11:43:22 - Double var_samp(NUMERIC arg)
2024-07-17 11:43:22 - Double variance(NUMERIC arg)
2024-07-17 11:43:22 - Integer week(DATE arg)
2024-07-17 11:43:22 - Integer year(DATE arg)
2024-07-17 11:43:22 - Starting QueryInterpretationCache(2048)
2024-07-17 11:43:22 - Starting QueryInterpretationCache(2048)
2024-07-17 11:43:22 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 11:43:22 - Configured EntityCopyObserver strategy: disallow
2024-07-17 11:43:22 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 11:43:22 - Configured EntityCopyObserver strategy: disallow
2024-07-17 11:43:22 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 11:43:22 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 11:43:22 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 11:43:22 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 11:43:23 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-17 11:43:23 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-17 11:43:23 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 11:43:23 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 11:43:23 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 11:43:23 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 11:43:23 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-17 11:43:23 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-17 11:43:23 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:23 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:23 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:23 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:23 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:23 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:23 - Starting post-init callbacks
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-17 11:43:23 - Starting post-init callbacks
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-17 11:43:23 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 11:43:23 - Created new SQL alias : u1_0
2024-07-17 11:43:23 - Created new SQL alias : u1_0
2024-07-17 11:43:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 11:43:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 11:43:23 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-17 11:43:23 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-17 11:43:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 11:43:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 11:43:23 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-17 11:43:23 -  Version select: select id from users where id=?
2024-07-17 11:43:23 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-17 11:43:23 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-17 11:43:23 -  Delete (0): delete from users where id=?
2024-07-17 11:43:23 - Created new SQL alias : t1_0
2024-07-17 11:43:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 11:43:23 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-17 11:43:23 -  Version select: select id from users where id=?
2024-07-17 11:43:23 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-17 11:43:23 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-17 11:43:23 -  Delete (0): delete from users where id=?
2024-07-17 11:43:23 - Created new SQL alias : t1_0
2024-07-17 11:43:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 11:43:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4a778943] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 11:43:23 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-17 11:43:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-17 11:43:23 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-17 11:43:23 -  Version select: select id from task where id=?
2024-07-17 11:43:23 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 11:43:23 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-17 11:43:23 -  Delete (0): delete from task where id=?
2024-07-17 11:43:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@701da311] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 11:43:23 - Created new SQL alias : t1_0
2024-07-17 11:43:23 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-17 11:43:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@e75bae7] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-17 11:43:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-17 11:43:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-17 11:43:23 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-17 11:43:23 -  Version select: select id from task where id=?
2024-07-17 11:43:23 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 11:43:23 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-17 11:43:23 -  Delete (0): delete from task where id=?
2024-07-17 11:43:23 - Created new SQL alias : t1_0
2024-07-17 11:43:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@64b20d9c] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-17 11:43:23 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-17 11:43:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c2a33af] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-17 11:43:23 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@77d42ed7] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-17 11:43:23 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-17 11:43:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-17 11:43:23 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:23 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-17 11:43:23 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-17 11:43:23 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:23 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-17 11:43:23 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-17 11:43:23 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@8dbf0f2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e7563f6]
2024-07-17 11:43:23 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4713b631] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@53813f01]
2024-07-17 11:43:23 - Checking 0 named HQL queries
2024-07-17 11:43:23 - Checking 0 named SQL queries
2024-07-17 11:43:23 - Checking 0 named HQL queries
2024-07-17 11:43:23 - Checking 0 named SQL queries
2024-07-17 11:43:23 - No alter strings for table : task
2024-07-17 11:43:23 - No alter strings for table : task
2024-07-17 11:43:23 - No alter strings for table : users
2024-07-17 11:43:23 - No alter strings for table : users
2024-07-17 11:43:23 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4d4337f9
2024-07-17 11:43:23 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5ae22651
2024-07-17 11:43:23 - Registering SessionFactory: 7b0817dc-c549-4774-b120-a8996db6e7e4 (<unnamed>)
2024-07-17 11:43:23 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-17 11:43:23 - Registering SessionFactory: 9c0eece4-d4aa-4429-a8f1-5295a5c67f34 (<unnamed>)
2024-07-17 11:43:23 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-17 11:43:23 - Instantiated SessionFactory
2024-07-17 11:43:23 - Instantiated SessionFactory
2024-07-17 11:43:23 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-17 11:43:23 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-17 11:43:23 - Statistics initialized [enabled=false]
2024-07-17 11:43:23 - Statistics initialized [enabled=false]
2024-07-17 11:43:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:23 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:23 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-17 11:43:23 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-17 11:43:23 - 

Using generated security password: 30b7a62a-77d4-4168-84ea-49dbdc191a9e

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-17 11:43:23 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-17 11:43:23 - 

Using generated security password: e8a9c28f-fd62-4117-9a87-495731d545c4

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-17 11:43:23 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-17 11:43:24 - 12 mappings in 'requestMappingHandlerMapping'
2024-07-17 11:43:24 - 12 mappings in 'requestMappingHandlerMapping'
2024-07-17 11:43:24 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-17 11:43:24 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-17 11:43:24 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-17 11:43:24 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-17 11:43:24 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-17 11:43:24 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-17 11:43:24 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-17 11:43:24 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-17 11:43:24 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-17 11:43:24 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-17 11:43:24 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-17 11:43:24 - Tomcat started on port 8080 (http) with context path '/'
2024-07-17 11:43:24 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-17 11:43:24 - Started TaskmanagementApplication in 6.955 seconds (process running for 7.591)
2024-07-17 11:43:24 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2024-07-17 11:43:24 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-17 11:43:24 - HHH000031: Closing
2024-07-17 11:43:24 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2a90c15e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e7563f6]
2024-07-17 11:43:24 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2024-07-17 11:43:24 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2024-07-17 11:43:24 - HikariPool-1 - Shutdown initiated...
2024-07-17 11:43:25 - HikariPool-1 - Shutdown completed.
2024-07-17 11:43:25 - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-17 11:43:25 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2024-07-17 11:43:36 - Starting TaskmanagementApplication using Java 22.0.1 with PID 35032 (C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement)
2024-07-17 11:43:36 - No active profile set, falling back to 1 default profile: "default"
2024-07-17 11:43:36 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-17 11:43:37 - Finished Spring Data repository scanning in 40 ms. Found 2 JPA repository interfaces.
2024-07-17 11:43:37 - Tomcat initialized with port 8080 (http)
2024-07-17 11:43:37 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-17 11:43:37 - Starting service [Tomcat]
2024-07-17 11:43:37 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-17 11:43:37 - Initializing Spring embedded WebApplicationContext
2024-07-17 11:43:37 - Root WebApplicationContext: initialization completed in 1665 ms
2024-07-17 11:43:38 - Filter 'webMvcObservationFilter' configured for use
2024-07-17 11:43:38 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/DSE204-03-Assignments/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-17 11:43:38 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-17 11:43:38 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-17 11:43:38 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-17 11:43:38 - HHH000206: 'hibernate.properties' not found
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 11:43:38 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-17 11:43:38 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-17 11:43:38 - HHH000026: Second-level cache disabled
2024-07-17 11:43:38 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 11:43:38 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 11:43:38 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 11:43:38 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 11:43:38 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 11:43:38 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 11:43:38 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 11:43:38 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 11:43:38 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 11:43:38 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:43:38 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:43:38 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 11:43:38 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:43:38 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:43:38 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 11:43:38 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 11:43:38 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 11:43:38 - Adding type registration image -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 11:43:38 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 11:43:38 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 11:43:38 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-17 11:43:38 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 11:43:38 - Adding type registration short -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 11:43:38 - Adding type registration short -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 11:43:38 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 11:43:38 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 11:43:38 - Adding type registration int -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 11:43:38 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 11:43:38 - Adding type registration long -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 11:43:38 - Adding type registration long -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 11:43:38 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 11:43:38 - Adding type registration float -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 11:43:38 - Adding type registration float -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 11:43:38 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 11:43:38 - Adding type registration double -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 11:43:38 - Adding type registration double -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 11:43:38 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 11:43:38 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 11:43:38 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 11:43:38 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 11:43:38 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 11:43:38 - Adding type registration character -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 11:43:38 - Adding type registration char -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 11:43:38 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 11:43:38 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 11:43:38 - Adding type registration string -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 11:43:38 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 11:43:38 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 11:43:38 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 11:43:38 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 11:43:38 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 11:43:38 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-17 11:43:38 - Adding type registration text -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 11:43:38 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 11:43:38 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 11:43:38 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 11:43:38 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:43:38 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 11:43:38 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 11:43:38 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 11:43:38 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 11:43:38 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 11:43:38 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 11:43:38 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 11:43:38 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 11:43:38 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 11:43:38 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 11:43:38 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 11:43:38 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 11:43:38 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 11:43:38 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 11:43:38 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 11:43:38 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:43:38 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 11:43:38 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 11:43:38 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 11:43:38 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 11:43:38 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 11:43:38 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 11:43:38 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 11:43:38 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 11:43:38 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 11:43:38 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 11:43:38 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-17 11:43:38 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 11:43:38 - Adding type registration date -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 11:43:38 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 11:43:38 - Adding type registration time -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 11:43:38 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 11:43:38 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 11:43:38 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 11:43:38 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 11:43:38 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:43:38 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:43:38 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 11:43:38 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 11:43:38 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-17 11:43:38 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 11:43:38 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 11:43:38 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 11:43:38 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 11:43:38 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 11:43:38 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-17 11:43:38 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 11:43:38 - Adding type registration class -> org.hibernate.type.BasicTypeReference@7bdb4f17
2024-07-17 11:43:38 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7bdb4f17
2024-07-17 11:43:38 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@77856cc5
2024-07-17 11:43:38 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@77856cc5
2024-07-17 11:43:38 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@77856cc5
2024-07-17 11:43:38 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-17 11:43:38 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-17 11:43:38 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@135064ea
2024-07-17 11:43:38 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@135064ea
2024-07-17 11:43:38 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4f6fd101
2024-07-17 11:43:38 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4f6fd101
2024-07-17 11:43:38 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@106459d9
2024-07-17 11:43:38 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@106459d9
2024-07-17 11:43:38 - Adding type registration url -> org.hibernate.type.BasicTypeReference@33a71d23
2024-07-17 11:43:38 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@33a71d23
2024-07-17 11:43:38 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@23c05889
2024-07-17 11:43:38 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@12166229
2024-07-17 11:43:38 - Adding type registration object -> org.hibernate.type.JavaObjectType@2a42019a
2024-07-17 11:43:38 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2a42019a
2024-07-17 11:43:38 - Adding type registration null -> org.hibernate.type.NullType@7c0e4e4e
2024-07-17 11:43:38 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@20231384
2024-07-17 11:43:38 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3ba97962
2024-07-17 11:43:38 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@35becbd4
2024-07-17 11:43:38 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3bcc8f13
2024-07-17 11:43:38 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3cb04dd
2024-07-17 11:43:38 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@73d91faf
2024-07-17 11:43:38 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@30fa8a6b
2024-07-17 11:43:38 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6f112f70
2024-07-17 11:43:38 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75c33608] into BootstrapContext; was [null]
2024-07-17 11:43:38 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75c33608) [was null]
2024-07-17 11:43:38 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@68d8ae27] into BootstrapContext; was [null]
2024-07-17 11:43:38 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@18513c23] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6be50b35]
2024-07-17 11:43:38 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-17 11:43:38 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75c33608]
2024-07-17 11:43:38 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@75c33608]
2024-07-17 11:43:38 - HikariPool-1 - Starting...
2024-07-17 11:43:38 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4037cdb0
2024-07-17 11:43:38 - HikariPool-1 - Start completed.
2024-07-17 11:43:38 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-17 11:43:38 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-17 11:43:38 - JDBC version : 4.2
2024-07-17 11:43:38 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-17 11:43:38 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-17 11:43:38 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-17 11:43:38 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-17 11:43:38 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-17 11:43:38 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6bf28f61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64dcf763)
2024-07-17 11:43:38 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@696105c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21ab919c)
2024-07-17 11:43:38 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5edd9b4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5db90818)
2024-07-17 11:43:38 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3c17794e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@414d2821)
2024-07-17 11:43:38 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7378c4a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6694fb1b)
2024-07-17 11:43:38 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61ce238e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49ea13b6)
2024-07-17 11:43:38 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c02b3cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3d8fd373)
2024-07-17 11:43:38 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2dcd451f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@342394b3)
2024-07-17 11:43:38 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd6f517) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e01b195)
2024-07-17 11:43:38 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-17 11:43:38 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-17 11:43:38 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-17 11:43:38 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 11:43:38 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 11:43:38 - Adding type registration null -> org.hibernate.type.NullType@1669f4e5
2024-07-17 11:43:38 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7c0e4e4e`
2024-07-17 11:43:38 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:38 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:38 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 11:43:38 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:38 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:38 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 11:43:38 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:38 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:38 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 11:43:38 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:38 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:38 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 11:43:38 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1da32baf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e4af370]
2024-07-17 11:43:38 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-17 11:43:38 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-17 11:43:38 - Import with entity name Task
2024-07-17 11:43:38 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-17 11:43:38 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 11:43:38 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 11:43:38 - MetadataSourceProcessor property id with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-17 11:43:38 - building BasicValue for id
2024-07-17 11:43:38 - Skipping column re-registration: task.id
2024-07-17 11:43:38 - Building property id
2024-07-17 11:43:38 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property category with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-17 11:43:38 - building BasicValue for category
2024-07-17 11:43:38 - Skipping column re-registration: task.category
2024-07-17 11:43:38 - Building property category
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-17 11:43:38 - building BasicValue for createdAt
2024-07-17 11:43:38 - Skipping column re-registration: task.created_at
2024-07-17 11:43:38 - Building property createdAt
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property description with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-17 11:43:38 - building BasicValue for description
2024-07-17 11:43:38 - Skipping column re-registration: task.description
2024-07-17 11:43:38 - Building property description
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property priority with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-17 11:43:38 - building BasicValue for priority
2024-07-17 11:43:38 - Skipping column re-registration: task.priority
2024-07-17 11:43:38 - Building property priority
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property title with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-17 11:43:38 - building BasicValue for title
2024-07-17 11:43:38 - Skipping column re-registration: task.title
2024-07-17 11:43:38 - Building property title
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-17 11:43:38 - building BasicValue for updatedAt
2024-07-17 11:43:38 - Skipping column re-registration: task.updated_at
2024-07-17 11:43:38 - Building property updatedAt
2024-07-17 11:43:38 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - Building property user
2024-07-17 11:43:38 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 11:43:38 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-17 11:43:38 - Import with entity name User
2024-07-17 11:43:38 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-17 11:43:38 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 11:43:38 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 11:43:38 - MetadataSourceProcessor property id with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-17 11:43:38 - building BasicValue for id
2024-07-17 11:43:38 - Skipping column re-registration: users.id
2024-07-17 11:43:38 - Building property id
2024-07-17 11:43:38 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property email with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-17 11:43:38 - building BasicValue for email
2024-07-17 11:43:38 - Skipping column re-registration: users.email
2024-07-17 11:43:38 - Building property email
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property password with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-17 11:43:38 - building BasicValue for password
2024-07-17 11:43:38 - Skipping column re-registration: users.password
2024-07-17 11:43:38 - Building property password
2024-07-17 11:43:38 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-17 11:43:38 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-17 11:43:38 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:38 - Binding column: AnnotatedJoinColumn()
2024-07-17 11:43:38 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:38 - Building property tasks
2024-07-17 11:43:38 - Binding column: AnnotatedColumn()
2024-07-17 11:43:38 - MetadataSourceProcessor property username with lazy=false
2024-07-17 11:43:38 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-17 11:43:38 - building BasicValue for username
2024-07-17 11:43:38 - Skipping column re-registration: users.username
2024-07-17 11:43:38 - Building property username
2024-07-17 11:43:38 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-17 11:43:38 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-17 11:43:38 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-17 11:43:38 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-17 11:43:38 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:38 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-17 11:43:38 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-17 11:43:38 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-17 11:43:38 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-17 11:43:38 - Building session factory
2024-07-17 11:43:38 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 11:43:38 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3adeca1f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@3f62d56, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.3082119552389733241, com.sun.management.jmxremote.port=56278, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\DSE204-03-Assignments\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=35032, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.3082119552389733241, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2d41bb5a, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-17 11:43:38 - Session factory constructed with filter configurations : {}
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7fff419d] under count; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@870a9f2] under every; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6c2e7591] under any; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b17759c] under sinh; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11cdf948] under cosh; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523f3c29] under tanh; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fd8b081] under pi; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fe38b73] under log; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-17 11:43:38 - Registering alternate key : length -> character_length
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6f7c4e0] under position; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2cd2c764] under overlay; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@11939a9f] under trim; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3c9cfcde] under cast; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f3c7b24] under collate; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3bbdf835] under extract; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@29d29657] under ifnull; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@44428583] under pad; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2acbe46d] under str; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4d91d2da] under format; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6e5b3642] under timestampadd; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7ce760af] under timestampdiff; prior registration was null
2024-07-17 11:43:38 - Registering alternate key : dateadd -> timestampadd
2024-07-17 11:43:38 - Registering alternate key : datediff -> timestampdiff
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2123a61c] under current_date; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2e5c7cd5] under current_time; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f252762] under current_timestamp; prior registration was null
2024-07-17 11:43:38 - Registering alternate key : current date -> current_date
2024-07-17 11:43:38 - Registering alternate key : current time -> current_time
2024-07-17 11:43:38 - Registering alternate key : current timestamp -> current_timestamp
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b74bb75] under local_date; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@675bf541] under local_time; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2aac87ab] under local_datetime; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@c14bbab] under offset_datetime; prior registration was null
2024-07-17 11:43:38 - Registering alternate key : local date -> local_date
2024-07-17 11:43:38 - Registering alternate key : local time -> local_time
2024-07-17 11:43:38 - Registering alternate key : local datetime -> local_datetime
2024-07-17 11:43:38 - Registering alternate key : offset datetime -> offset_datetime
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@72c5064f] under instant; prior registration was null
2024-07-17 11:43:38 - Registering alternate key : current_instant -> instant
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@779ef5cb] under sql; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fe38b73
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7533923b] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@446981a4] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-17 11:43:38 - Registering alternate key : day -> dayofmonth
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@644f6e89] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6f7c4e0
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1c3a64b6] under trunc; prior registration was null
2024-07-17 11:43:38 - Registering alternate key : truncate -> trunc
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@761b9314] under bitand; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20e9c165] under bitor; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@eabecf5] under bitxor; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@417b3642] under bitnot; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6bd28e4a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4d91d2da
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@675bf541
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2aac87ab
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e88bc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fd8b081
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@544300a6] under chr; prior registration was null
2024-07-17 11:43:38 - Registering alternate key : char -> chr
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c12f54a] under sysdate; prior registration was null
2024-07-17 11:43:38 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@554e9509] under listagg; prior registration was null
2024-07-17 11:43:38 - abs(NUMERIC arg)
2024-07-17 11:43:38 - Double acos(NUMERIC arg)
2024-07-17 11:43:38 - adddate(DATE datetime, INTEGER days)
2024-07-17 11:43:38 - addtime(TIME datetime, TIME time)
2024-07-17 11:43:38 - Boolean any(BOOLEAN arg)
2024-07-17 11:43:38 - Integer ascii(STRING arg)
2024-07-17 11:43:38 - Double asin(NUMERIC arg)
2024-07-17 11:43:38 - Double atan(NUMERIC arg)
2024-07-17 11:43:38 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-17 11:43:38 - avg(arg)
2024-07-17 11:43:38 - bit_and(arg)
2024-07-17 11:43:38 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-17 11:43:38 - bit_or(arg)
2024-07-17 11:43:38 - bitand(arg0, arg1)
2024-07-17 11:43:38 - bitnot(arg)
2024-07-17 11:43:38 - bitor(arg0, arg1)
2024-07-17 11:43:38 - bitxor(arg0, arg1)
2024-07-17 11:43:38 - cast(arg as Type)
2024-07-17 11:43:38 - ceiling(NUMERIC arg)
2024-07-17 11:43:38 - Character char(INTEGER arg)
2024-07-17 11:43:38 - Integer character_length(STRING_OR_CLOB arg)
2024-07-17 11:43:38 - Character chr(INTEGER arg)
2024-07-17 11:43:38 - coalesce(arg0[, arg1[, ...]])
2024-07-17 11:43:38 - String collate(STRING string as COLLATION collation)
2024-07-17 11:43:38 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-17 11:43:38 - Double cos(NUMERIC arg)
2024-07-17 11:43:38 - Double cosh(NUMERIC arg)
2024-07-17 11:43:38 - Double cot(NUMERIC arg)
2024-07-17 11:43:38 - Long count([distinct ]{arg|*})
2024-07-17 11:43:38 - Integer crc32(arg)
2024-07-17 11:43:38 - Date curdate()
2024-07-17 11:43:38 - Date current date
2024-07-17 11:43:38 - Time current time
2024-07-17 11:43:38 - Timestamp current timestamp
2024-07-17 11:43:38 - Date current_date
2024-07-17 11:43:38 - Instant current_instant
2024-07-17 11:43:38 - Time current_time
2024-07-17 11:43:38 - Timestamp current_timestamp
2024-07-17 11:43:38 - Time curtime()
2024-07-17 11:43:38 - Date date(arg)
2024-07-17 11:43:38 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 11:43:38 - Integer datediff(DATE end, DATE start)
2024-07-17 11:43:38 - Integer day(DATE arg)
2024-07-17 11:43:38 - String dayname(DATE arg)
2024-07-17 11:43:38 - Integer dayofmonth(DATE arg)
2024-07-17 11:43:38 - Integer dayofweek(DATE arg)
2024-07-17 11:43:38 - Integer dayofyear(DATE arg)
2024-07-17 11:43:38 - Double degrees(NUMERIC arg)
2024-07-17 11:43:38 - Boolean every(BOOLEAN arg)
2024-07-17 11:43:38 - Double exp(NUMERIC arg)
2024-07-17 11:43:38 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-17 11:43:38 - floor(NUMERIC arg)
2024-07-17 11:43:38 - String format(TEMPORAL datetime as STRING pattern)
2024-07-17 11:43:38 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 11:43:38 - Integer hour(TIME arg)
2024-07-17 11:43:38 - ifnull(arg0, arg1)
2024-07-17 11:43:38 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-17 11:43:38 - Instant instant
2024-07-17 11:43:38 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-17 11:43:38 - Date last_day(DATE arg)
2024-07-17 11:43:38 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 11:43:38 - String left(STRING string, INTEGER length)
2024-07-17 11:43:38 - Integer length(STRING_OR_CLOB arg)
2024-07-17 11:43:38 - String listagg(STRING arg0, STRING arg1)
2024-07-17 11:43:38 - Double ln(NUMERIC arg)
2024-07-17 11:43:38 - LocalDate local date
2024-07-17 11:43:38 - LocalDateTime local datetime
2024-07-17 11:43:38 - LocalTime local time
2024-07-17 11:43:38 - LocalDate local_date
2024-07-17 11:43:38 - LocalDateTime local_datetime
2024-07-17 11:43:38 - LocalTime local_time
2024-07-17 11:43:38 - Timestamp localtime
2024-07-17 11:43:38 - Timestamp localtimestamp
2024-07-17 11:43:38 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-17 11:43:38 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-17 11:43:38 - Double log10(NUMERIC arg)
2024-07-17 11:43:38 - Double log2(NUMERIC arg)
2024-07-17 11:43:38 - String lower(STRING string)
2024-07-17 11:43:38 - String lpad(string, length[, padding])
2024-07-17 11:43:38 - String ltrim(STRING string[, STRING characters])
2024-07-17 11:43:38 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-17 11:43:38 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-17 11:43:38 - max(COMPARABLE arg)
2024-07-17 11:43:38 - String md5(arg)
2024-07-17 11:43:38 - Integer microsecond(TIME arg)
2024-07-17 11:43:38 - min(COMPARABLE arg)
2024-07-17 11:43:38 - Integer minute(TIME arg)
2024-07-17 11:43:38 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-17 11:43:38 - Integer month(DATE arg)
2024-07-17 11:43:38 - String monthname(DATE arg)
2024-07-17 11:43:38 - Timestamp now()
2024-07-17 11:43:38 - nullif(arg0, arg1)
2024-07-17 11:43:38 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-17 11:43:38 - OffsetDateTime offset datetime
2024-07-17 11:43:38 - OffsetDateTime offset_datetime
2024-07-17 11:43:38 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-17 11:43:38 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-17 11:43:38 - Double pi
2024-07-17 11:43:38 - Integer position(STRING pattern in STRING string)
2024-07-17 11:43:38 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-17 11:43:38 - Integer quarter(DATE arg)
2024-07-17 11:43:38 - Double radians(NUMERIC arg)
2024-07-17 11:43:38 - Double rand([INTEGER seed])
2024-07-17 11:43:38 - String repeat(STRING string, INTEGER times)
2024-07-17 11:43:38 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-17 11:43:38 - String reverse(STRING arg)
2024-07-17 11:43:38 - String right(STRING string, INTEGER length)
2024-07-17 11:43:38 - round(NUMERIC number[, INTEGER places])
2024-07-17 11:43:38 - String rpad(string, length[, padding])
2024-07-17 11:43:38 - String rtrim(STRING string[, STRING characters])
2024-07-17 11:43:38 - Integer second(TIME arg)
2024-07-17 11:43:38 - String sha(arg)
2024-07-17 11:43:38 - String sha1(arg)
2024-07-17 11:43:38 - String sha2(arg0, arg1)
2024-07-17 11:43:38 - Integer sign(NUMERIC arg)
2024-07-17 11:43:38 - Double sin(NUMERIC arg)
2024-07-17 11:43:38 - Double sinh(NUMERIC arg)
2024-07-17 11:43:38 - String soundex(arg)
2024-07-17 11:43:38 - String space(INTEGER arg)
2024-07-17 11:43:38 - Object sql
2024-07-17 11:43:38 - Double sqrt(NUMERIC arg)
2024-07-17 11:43:38 - Double stddev(NUMERIC arg)
2024-07-17 11:43:38 - Double stddev_pop(NUMERIC arg)
2024-07-17 11:43:38 - Double stddev_samp(NUMERIC arg)
2024-07-17 11:43:38 - String str(arg)
2024-07-17 11:43:38 - subdate(DATE datetime, INTEGER days)
2024-07-17 11:43:38 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-17 11:43:38 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-17 11:43:38 - subtime(TIME datetime, TIME time)
2024-07-17 11:43:38 - sum(arg)
2024-07-17 11:43:38 - Timestamp sysdate()
2024-07-17 11:43:38 - Double tan(NUMERIC arg)
2024-07-17 11:43:38 - Double tanh(NUMERIC arg)
2024-07-17 11:43:38 - String time(arg)
2024-07-17 11:43:38 - Timestamp timestamp(arg0[, arg1])
2024-07-17 11:43:38 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 11:43:38 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-17 11:43:38 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-17 11:43:38 - trunc( ... )
2024-07-17 11:43:38 - truncate( ... )
2024-07-17 11:43:38 - String upper(STRING string)
2024-07-17 11:43:38 - Date utc_date
2024-07-17 11:43:38 - Time utc_time
2024-07-17 11:43:38 - Timestamp utc_timestamp
2024-07-17 11:43:38 - Double var_pop(NUMERIC arg)
2024-07-17 11:43:38 - Double var_samp(NUMERIC arg)
2024-07-17 11:43:38 - Double variance(NUMERIC arg)
2024-07-17 11:43:38 - Integer week(DATE arg)
2024-07-17 11:43:38 - Integer year(DATE arg)
2024-07-17 11:43:39 - Starting QueryInterpretationCache(2048)
2024-07-17 11:43:39 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 11:43:39 - Configured EntityCopyObserver strategy: disallow
2024-07-17 11:43:39 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 11:43:39 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 11:43:39 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-17 11:43:39 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 11:43:39 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 11:43:39 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-17 11:43:39 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:39 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:39 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:39 - Starting post-init callbacks
2024-07-17 11:43:39 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 11:43:39 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-17 11:43:39 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-17 11:43:39 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-17 11:43:39 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-17 11:43:39 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-17 11:43:39 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 11:43:39 - Created new SQL alias : u1_0
2024-07-17 11:43:39 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 11:43:39 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-17 11:43:39 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 11:43:39 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-17 11:43:39 -  Version select: select id from users where id=?
2024-07-17 11:43:39 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-17 11:43:39 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-17 11:43:39 -  Delete (0): delete from users where id=?
2024-07-17 11:43:39 - Created new SQL alias : t1_0
2024-07-17 11:43:39 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 11:43:39 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6fb51e17] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 11:43:39 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-17 11:43:39 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-17 11:43:39 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-17 11:43:39 -  Version select: select id from task where id=?
2024-07-17 11:43:39 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 11:43:39 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-17 11:43:39 -  Delete (0): delete from task where id=?
2024-07-17 11:43:39 - Created new SQL alias : t1_0
2024-07-17 11:43:39 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6bf34912] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-17 11:43:39 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-17 11:43:39 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6e5df971] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-17 11:43:39 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-17 11:43:39 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-17 11:43:39 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 11:43:39 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-17 11:43:39 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1da32baf] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1a4c6e74]
2024-07-17 11:43:39 - Checking 0 named HQL queries
2024-07-17 11:43:39 - Checking 0 named SQL queries
2024-07-17 11:43:39 - No alter strings for table : task
2024-07-17 11:43:39 - No alter strings for table : users
2024-07-17 11:43:39 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@770c3ca2
2024-07-17 11:43:39 - Registering SessionFactory: f259f23d-9749-417c-8839-0b66fe310d0d (<unnamed>)
2024-07-17 11:43:39 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-17 11:43:39 - Instantiated SessionFactory
2024-07-17 11:43:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-17 11:43:39 - Statistics initialized [enabled=false]
2024-07-17 11:43:39 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:39 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:39 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:39 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 11:43:39 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-17 11:43:39 - 

Using generated security password: a2622ffc-a9c3-42bf-969b-943f3d0c1149

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-17 11:43:39 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-17 11:43:40 - 12 mappings in 'requestMappingHandlerMapping'
2024-07-17 11:43:40 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-17 11:43:40 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-17 11:43:40 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-17 11:43:40 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-17 11:43:40 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-17 11:43:40 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-17 11:43:40 - Tomcat started on port 8080 (http) with context path '/'
2024-07-17 11:43:40 - Started TaskmanagementApplication in 5.241 seconds (process running for 5.683)
2024-07-17 11:43:42 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-17 11:43:42 - Initializing Servlet 'dispatcherServlet'
2024-07-17 11:43:42 - Detected StandardServletMultipartResolver
2024-07-17 11:43:42 - Detected AcceptHeaderLocaleResolver
2024-07-17 11:43:42 - Detected FixedThemeResolver
2024-07-17 11:43:42 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@4c3c1963
2024-07-17 11:43:42 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1791670e
2024-07-17 11:43:42 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-17 11:43:42 - Completed initialization in 2 ms
2024-07-17 16:16:20 - Starting TaskmanagementApplication using Java 22.0.1 with PID 33704 (C:\Users\ohchi\OneDrive\Desktop\204\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\taskmanagement)
2024-07-17 16:16:20 - No active profile set, falling back to 1 default profile: "default"
2024-07-17 16:16:21 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-17 16:16:21 - Finished Spring Data repository scanning in 52 ms. Found 2 JPA repository interfaces.
2024-07-17 16:16:22 - Tomcat initialized with port 8080 (http)
2024-07-17 16:16:22 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-17 16:16:22 - Starting service [Tomcat]
2024-07-17 16:16:22 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-17 16:16:22 - Initializing Spring embedded WebApplicationContext
2024-07-17 16:16:22 - Root WebApplicationContext: initialization completed in 1798 ms
2024-07-17 16:16:22 - Filter 'webMvcObservationFilter' configured for use
2024-07-17 16:16:23 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-17 16:16:23 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-17 16:16:23 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-17 16:16:23 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-17 16:16:23 - HHH000206: 'hibernate.properties' not found
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 16:16:23 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-17 16:16:23 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-17 16:16:23 - HHH000026: Second-level cache disabled
2024-07-17 16:16:23 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 16:16:23 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 16:16:23 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 16:16:23 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 16:16:23 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 16:16:23 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 16:16:23 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 16:16:23 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 16:16:23 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 16:16:23 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 16:16:23 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 16:16:23 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 16:16:23 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 16:16:23 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 16:16:23 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 16:16:23 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 16:16:23 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 16:16:23 - Adding type registration image -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-17 16:16:23 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 16:16:23 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 16:16:23 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 16:16:23 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 16:16:23 - Adding type registration short -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 16:16:23 - Adding type registration short -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 16:16:23 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 16:16:23 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 16:16:23 - Adding type registration int -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 16:16:23 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 16:16:23 - Adding type registration long -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 16:16:23 - Adding type registration long -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 16:16:23 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 16:16:23 - Adding type registration float -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 16:16:23 - Adding type registration float -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 16:16:23 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 16:16:23 - Adding type registration double -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 16:16:23 - Adding type registration double -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 16:16:23 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 16:16:23 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 16:16:23 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 16:16:23 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 16:16:23 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 16:16:23 - Adding type registration character -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 16:16:23 - Adding type registration char -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 16:16:23 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 16:16:23 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 16:16:23 - Adding type registration string -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 16:16:23 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 16:16:23 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-17 16:16:23 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 16:16:23 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 16:16:23 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 16:16:23 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 16:16:23 - Adding type registration text -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 16:16:23 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 16:16:23 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 16:16:23 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 16:16:23 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 16:16:23 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 16:16:23 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 16:16:23 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 16:16:23 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 16:16:23 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 16:16:23 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 16:16:23 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 16:16:23 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 16:16:23 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 16:16:23 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 16:16:23 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 16:16:23 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 16:16:23 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 16:16:23 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 16:16:23 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 16:16:23 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 16:16:23 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@30c8c6ab
2024-07-17 16:16:23 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 16:16:23 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 16:16:23 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 16:16:23 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 16:16:23 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 16:16:23 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 16:16:23 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-17 16:16:23 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 16:16:23 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 16:16:23 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7b8b07ae
2024-07-17 16:16:23 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@19ec5357
2024-07-17 16:16:23 - Adding type registration date -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 16:16:23 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@351d93bd
2024-07-17 16:16:23 - Adding type registration time -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 16:16:23 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@61c5fd78
2024-07-17 16:16:23 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 16:16:23 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 16:16:23 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@42503099
2024-07-17 16:16:23 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-17 16:16:23 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-17 16:16:23 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@39dda56f
2024-07-17 16:16:23 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@60844992
2024-07-17 16:16:23 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2ee456c7
2024-07-17 16:16:23 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-17 16:16:23 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6df37f7a
2024-07-17 16:16:23 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 16:16:23 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 16:16:23 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@39514976
2024-07-17 16:16:23 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7bdb4f17
2024-07-17 16:16:23 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@77856cc5
2024-07-17 16:16:23 - Adding type registration class -> org.hibernate.type.BasicTypeReference@1fbd5e0
2024-07-17 16:16:23 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1fbd5e0
2024-07-17 16:16:23 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-17 16:16:23 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-17 16:16:23 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@32d22650
2024-07-17 16:16:23 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4f6fd101
2024-07-17 16:16:23 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4f6fd101
2024-07-17 16:16:23 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@106459d9
2024-07-17 16:16:23 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@106459d9
2024-07-17 16:16:23 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@33a71d23
2024-07-17 16:16:23 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@33a71d23
2024-07-17 16:16:23 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@23c05889
2024-07-17 16:16:23 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@23c05889
2024-07-17 16:16:23 - Adding type registration url -> org.hibernate.type.BasicTypeReference@12166229
2024-07-17 16:16:23 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@12166229
2024-07-17 16:16:23 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@208e5b23
2024-07-17 16:16:23 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2bcb1414
2024-07-17 16:16:23 - Adding type registration object -> org.hibernate.type.JavaObjectType@60194904
2024-07-17 16:16:23 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@60194904
2024-07-17 16:16:23 - Adding type registration null -> org.hibernate.type.NullType@3ba97962
2024-07-17 16:16:23 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@35becbd4
2024-07-17 16:16:23 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3bcc8f13
2024-07-17 16:16:23 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3cb04dd
2024-07-17 16:16:23 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@73d91faf
2024-07-17 16:16:23 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@30fa8a6b
2024-07-17 16:16:23 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6f112f70
2024-07-17 16:16:23 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@342723a3
2024-07-17 16:16:23 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@f3876ef
2024-07-17 16:16:23 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58ebee9] into BootstrapContext; was [null]
2024-07-17 16:16:23 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58ebee9) [was null]
2024-07-17 16:16:23 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6be50b35] into BootstrapContext; was [null]
2024-07-17 16:16:23 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@ce2eaa7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2166c48a]
2024-07-17 16:16:23 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-17 16:16:23 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58ebee9]
2024-07-17 16:16:23 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@58ebee9]
2024-07-17 16:16:23 - HikariPool-1 - Starting...
2024-07-17 16:16:23 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@33e4068
2024-07-17 16:16:23 - HikariPool-1 - Start completed.
2024-07-17 16:16:23 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-17 16:16:23 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-17 16:16:23 - JDBC version : 4.2
2024-07-17 16:16:23 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-17 16:16:23 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-17 16:16:23 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-17 16:16:23 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-17 16:16:23 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-17 16:16:23 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@696105c4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21ab919c)
2024-07-17 16:16:23 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5edd9b4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5db90818)
2024-07-17 16:16:23 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c17794e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@414d2821)
2024-07-17 16:16:23 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7378c4a4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6694fb1b)
2024-07-17 16:16:23 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61ce238e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49ea13b6)
2024-07-17 16:16:23 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c02b3cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3d8fd373)
2024-07-17 16:16:23 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2dcd451f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@342394b3)
2024-07-17 16:16:23 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5dd6f517) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e01b195)
2024-07-17 16:16:23 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@59a3eaf7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@718d6b7c)
2024-07-17 16:16:23 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-17 16:16:23 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-17 16:16:23 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-17 16:16:23 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 16:16:23 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 16:16:23 - Adding type registration null -> org.hibernate.type.NullType@4be1dce6
2024-07-17 16:16:23 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@3ba97962`
2024-07-17 16:16:23 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-17 16:16:23 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 16:16:23 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 16:16:23 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 16:16:23 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 16:16:23 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 16:16:23 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 16:16:23 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 16:16:23 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 16:16:23 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 16:16:23 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 16:16:23 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 16:16:23 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cf33d25] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@efa04b5]
2024-07-17 16:16:23 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-17 16:16:23 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-17 16:16:23 - Import with entity name Task
2024-07-17 16:16:23 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-17 16:16:23 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 16:16:23 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 16:16:23 - MetadataSourceProcessor property id with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-17 16:16:23 - building BasicValue for id
2024-07-17 16:16:23 - Skipping column re-registration: task.id
2024-07-17 16:16:23 - Building property id
2024-07-17 16:16:23 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property category with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-17 16:16:23 - building BasicValue for category
2024-07-17 16:16:23 - Skipping column re-registration: task.category
2024-07-17 16:16:23 - Building property category
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-17 16:16:23 - building BasicValue for createdAt
2024-07-17 16:16:23 - Skipping column re-registration: task.created_at
2024-07-17 16:16:23 - Building property createdAt
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property description with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-17 16:16:23 - building BasicValue for description
2024-07-17 16:16:23 - Skipping column re-registration: task.description
2024-07-17 16:16:23 - Building property description
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property priority with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-17 16:16:23 - building BasicValue for priority
2024-07-17 16:16:23 - Skipping column re-registration: task.priority
2024-07-17 16:16:23 - Building property priority
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property title with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-17 16:16:23 - building BasicValue for title
2024-07-17 16:16:23 - Skipping column re-registration: task.title
2024-07-17 16:16:23 - Building property title
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-17 16:16:23 - building BasicValue for updatedAt
2024-07-17 16:16:23 - Skipping column re-registration: task.updated_at
2024-07-17 16:16:23 - Building property updatedAt
2024-07-17 16:16:23 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - Building property user
2024-07-17 16:16:23 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 16:16:23 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-17 16:16:23 - Import with entity name User
2024-07-17 16:16:23 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-17 16:16:23 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 16:16:23 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 16:16:23 - MetadataSourceProcessor property id with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-17 16:16:23 - building BasicValue for id
2024-07-17 16:16:23 - Skipping column re-registration: users.id
2024-07-17 16:16:23 - Building property id
2024-07-17 16:16:23 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property email with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-17 16:16:23 - building BasicValue for email
2024-07-17 16:16:23 - Skipping column re-registration: users.email
2024-07-17 16:16:23 - Building property email
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property password with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-17 16:16:23 - building BasicValue for password
2024-07-17 16:16:23 - Skipping column re-registration: users.password
2024-07-17 16:16:23 - Building property password
2024-07-17 16:16:23 - Binding column: AnnotatedJoinColumn()
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-17 16:16:23 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-17 16:16:23 - Binding column: AnnotatedJoinColumn()
2024-07-17 16:16:23 - Binding column: AnnotatedJoinColumn()
2024-07-17 16:16:23 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-17 16:16:23 - Building property tasks
2024-07-17 16:16:23 - Binding column: AnnotatedColumn()
2024-07-17 16:16:23 - MetadataSourceProcessor property username with lazy=false
2024-07-17 16:16:23 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-17 16:16:23 - building BasicValue for username
2024-07-17 16:16:23 - Skipping column re-registration: users.username
2024-07-17 16:16:23 - Building property username
2024-07-17 16:16:23 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-17 16:16:23 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-17 16:16:23 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-17 16:16:23 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-17 16:16:23 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 16:16:23 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-17 16:16:23 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-17 16:16:23 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-17 16:16:23 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-17 16:16:23 - Building session factory
2024-07-17 16:16:23 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 16:16:23 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2d41bb5a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@448a6d00, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.10481153626078487230, com.sun.management.jmxremote.port=58517, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=33704, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.10481153626078487230, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@848d9bc, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-17 16:16:23 - Session factory constructed with filter configurations : {}
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@542754be] under count; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7f2542f] under every; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3dad8bde] under any; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@523f3c29] under sinh; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fd8b081] under cosh; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2fe38b73] under tanh; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@511a307e] under pi; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aef8000] under log; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-17 16:16:23 - Registering alternate key : length -> character_length
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@8b1bfdf] under position; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1f1c7fde] under overlay; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5e83298e] under trim; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7dbd70fd] under cast; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2cb53bfc] under collate; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@28fef9a2] under extract; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@516155b5] under ifnull; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@7d4b32d1] under pad; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@48126a17] under str; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@68f1b89] under format; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@a11efe6] under timestampadd; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7b6b466a] under timestampdiff; prior registration was null
2024-07-17 16:16:23 - Registering alternate key : dateadd -> timestampadd
2024-07-17 16:16:23 - Registering alternate key : datediff -> timestampdiff
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f252762] under current_date; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b74bb75] under current_time; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@675bf541] under current_timestamp; prior registration was null
2024-07-17 16:16:23 - Registering alternate key : current date -> current_date
2024-07-17 16:16:23 - Registering alternate key : current time -> current_time
2024-07-17 16:16:23 - Registering alternate key : current timestamp -> current_timestamp
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2aac87ab] under local_date; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@c14bbab] under local_time; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@72c5064f] under local_datetime; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4a0c04ab] under offset_datetime; prior registration was null
2024-07-17 16:16:23 - Registering alternate key : local date -> local_date
2024-07-17 16:16:23 - Registering alternate key : local time -> local_time
2024-07-17 16:16:23 - Registering alternate key : local datetime -> local_datetime
2024-07-17 16:16:23 - Registering alternate key : offset datetime -> offset_datetime
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@453439e] under instant; prior registration was null
2024-07-17 16:16:23 - Registering alternate key : current_instant -> instant
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@43cc7951] under sql; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aef8000
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@644f6e89] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@9ae0794] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-17 16:16:23 - Registering alternate key : day -> dayofmonth
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60e5eed0] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@8b1bfdf
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@20e9c165] under trunc; prior registration was null
2024-07-17 16:16:23 - Registering alternate key : truncate -> trunc
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@eabecf5] under bitand; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@417b3642] under bitor; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6bd28e4a] under bitxor; prior registration was null
2024-07-17 16:16:23 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e88bc] under bitnot; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@544300a6] under format; prior registration was org.hibernate.dialect.function.FormatFunction@68f1b89
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@c14bbab
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@72c5064f
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4c12f54a] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@511a307e
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@334d825c] under chr; prior registration was null
2024-07-17 16:16:24 - Registering alternate key : char -> chr
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42a7e7e1] under sysdate; prior registration was null
2024-07-17 16:16:24 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@772bc4c9] under listagg; prior registration was null
2024-07-17 16:16:24 - abs(NUMERIC arg)
2024-07-17 16:16:24 - Double acos(NUMERIC arg)
2024-07-17 16:16:24 - adddate(DATE datetime, INTEGER days)
2024-07-17 16:16:24 - addtime(TIME datetime, TIME time)
2024-07-17 16:16:24 - Boolean any(BOOLEAN arg)
2024-07-17 16:16:24 - Integer ascii(STRING arg)
2024-07-17 16:16:24 - Double asin(NUMERIC arg)
2024-07-17 16:16:24 - Double atan(NUMERIC arg)
2024-07-17 16:16:24 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-17 16:16:24 - avg(arg)
2024-07-17 16:16:24 - bit_and(arg)
2024-07-17 16:16:24 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-17 16:16:24 - bit_or(arg)
2024-07-17 16:16:24 - bitand(arg0, arg1)
2024-07-17 16:16:24 - bitnot(arg)
2024-07-17 16:16:24 - bitor(arg0, arg1)
2024-07-17 16:16:24 - bitxor(arg0, arg1)
2024-07-17 16:16:24 - cast(arg as Type)
2024-07-17 16:16:24 - ceiling(NUMERIC arg)
2024-07-17 16:16:24 - Character char(INTEGER arg)
2024-07-17 16:16:24 - Integer character_length(STRING_OR_CLOB arg)
2024-07-17 16:16:24 - Character chr(INTEGER arg)
2024-07-17 16:16:24 - coalesce(arg0[, arg1[, ...]])
2024-07-17 16:16:24 - String collate(STRING string as COLLATION collation)
2024-07-17 16:16:24 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-17 16:16:24 - Double cos(NUMERIC arg)
2024-07-17 16:16:24 - Double cosh(NUMERIC arg)
2024-07-17 16:16:24 - Double cot(NUMERIC arg)
2024-07-17 16:16:24 - Long count([distinct ]{arg|*})
2024-07-17 16:16:24 - Integer crc32(arg)
2024-07-17 16:16:24 - Date curdate()
2024-07-17 16:16:24 - Date current date
2024-07-17 16:16:24 - Time current time
2024-07-17 16:16:24 - Timestamp current timestamp
2024-07-17 16:16:24 - Date current_date
2024-07-17 16:16:24 - Instant current_instant
2024-07-17 16:16:24 - Time current_time
2024-07-17 16:16:24 - Timestamp current_timestamp
2024-07-17 16:16:24 - Time curtime()
2024-07-17 16:16:24 - Date date(arg)
2024-07-17 16:16:24 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 16:16:24 - Integer datediff(DATE end, DATE start)
2024-07-17 16:16:24 - Integer day(DATE arg)
2024-07-17 16:16:24 - String dayname(DATE arg)
2024-07-17 16:16:24 - Integer dayofmonth(DATE arg)
2024-07-17 16:16:24 - Integer dayofweek(DATE arg)
2024-07-17 16:16:24 - Integer dayofyear(DATE arg)
2024-07-17 16:16:24 - Double degrees(NUMERIC arg)
2024-07-17 16:16:24 - Boolean every(BOOLEAN arg)
2024-07-17 16:16:24 - Double exp(NUMERIC arg)
2024-07-17 16:16:24 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-17 16:16:24 - floor(NUMERIC arg)
2024-07-17 16:16:24 - String format(TEMPORAL datetime as STRING pattern)
2024-07-17 16:16:24 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 16:16:24 - Integer hour(TIME arg)
2024-07-17 16:16:24 - ifnull(arg0, arg1)
2024-07-17 16:16:24 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-17 16:16:24 - Instant instant
2024-07-17 16:16:24 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-17 16:16:24 - Date last_day(DATE arg)
2024-07-17 16:16:24 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 16:16:24 - String left(STRING string, INTEGER length)
2024-07-17 16:16:24 - Integer length(STRING_OR_CLOB arg)
2024-07-17 16:16:24 - String listagg(STRING arg0, STRING arg1)
2024-07-17 16:16:24 - Double ln(NUMERIC arg)
2024-07-17 16:16:24 - LocalDate local date
2024-07-17 16:16:24 - LocalDateTime local datetime
2024-07-17 16:16:24 - LocalTime local time
2024-07-17 16:16:24 - LocalDate local_date
2024-07-17 16:16:24 - LocalDateTime local_datetime
2024-07-17 16:16:24 - LocalTime local_time
2024-07-17 16:16:24 - Timestamp localtime
2024-07-17 16:16:24 - Timestamp localtimestamp
2024-07-17 16:16:24 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-17 16:16:24 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-17 16:16:24 - Double log10(NUMERIC arg)
2024-07-17 16:16:24 - Double log2(NUMERIC arg)
2024-07-17 16:16:24 - String lower(STRING string)
2024-07-17 16:16:24 - String lpad(string, length[, padding])
2024-07-17 16:16:24 - String ltrim(STRING string[, STRING characters])
2024-07-17 16:16:24 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-17 16:16:24 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-17 16:16:24 - max(COMPARABLE arg)
2024-07-17 16:16:24 - String md5(arg)
2024-07-17 16:16:24 - Integer microsecond(TIME arg)
2024-07-17 16:16:24 - min(COMPARABLE arg)
2024-07-17 16:16:24 - Integer minute(TIME arg)
2024-07-17 16:16:24 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-17 16:16:24 - Integer month(DATE arg)
2024-07-17 16:16:24 - String monthname(DATE arg)
2024-07-17 16:16:24 - Timestamp now()
2024-07-17 16:16:24 - nullif(arg0, arg1)
2024-07-17 16:16:24 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-17 16:16:24 - OffsetDateTime offset datetime
2024-07-17 16:16:24 - OffsetDateTime offset_datetime
2024-07-17 16:16:24 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-17 16:16:24 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-17 16:16:24 - Double pi
2024-07-17 16:16:24 - Integer position(STRING pattern in STRING string)
2024-07-17 16:16:24 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-17 16:16:24 - Integer quarter(DATE arg)
2024-07-17 16:16:24 - Double radians(NUMERIC arg)
2024-07-17 16:16:24 - Double rand([INTEGER seed])
2024-07-17 16:16:24 - String repeat(STRING string, INTEGER times)
2024-07-17 16:16:24 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-17 16:16:24 - String reverse(STRING arg)
2024-07-17 16:16:24 - String right(STRING string, INTEGER length)
2024-07-17 16:16:24 - round(NUMERIC number[, INTEGER places])
2024-07-17 16:16:24 - String rpad(string, length[, padding])
2024-07-17 16:16:24 - String rtrim(STRING string[, STRING characters])
2024-07-17 16:16:24 - Integer second(TIME arg)
2024-07-17 16:16:24 - String sha(arg)
2024-07-17 16:16:24 - String sha1(arg)
2024-07-17 16:16:24 - String sha2(arg0, arg1)
2024-07-17 16:16:24 - Integer sign(NUMERIC arg)
2024-07-17 16:16:24 - Double sin(NUMERIC arg)
2024-07-17 16:16:24 - Double sinh(NUMERIC arg)
2024-07-17 16:16:24 - String soundex(arg)
2024-07-17 16:16:24 - String space(INTEGER arg)
2024-07-17 16:16:24 - Object sql
2024-07-17 16:16:24 - Double sqrt(NUMERIC arg)
2024-07-17 16:16:24 - Double stddev(NUMERIC arg)
2024-07-17 16:16:24 - Double stddev_pop(NUMERIC arg)
2024-07-17 16:16:24 - Double stddev_samp(NUMERIC arg)
2024-07-17 16:16:24 - String str(arg)
2024-07-17 16:16:24 - subdate(DATE datetime, INTEGER days)
2024-07-17 16:16:24 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-17 16:16:24 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-17 16:16:24 - subtime(TIME datetime, TIME time)
2024-07-17 16:16:24 - sum(arg)
2024-07-17 16:16:24 - Timestamp sysdate()
2024-07-17 16:16:24 - Double tan(NUMERIC arg)
2024-07-17 16:16:24 - Double tanh(NUMERIC arg)
2024-07-17 16:16:24 - String time(arg)
2024-07-17 16:16:24 - Timestamp timestamp(arg0[, arg1])
2024-07-17 16:16:24 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 16:16:24 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-17 16:16:24 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-17 16:16:24 - trunc( ... )
2024-07-17 16:16:24 - truncate( ... )
2024-07-17 16:16:24 - String upper(STRING string)
2024-07-17 16:16:24 - Date utc_date
2024-07-17 16:16:24 - Time utc_time
2024-07-17 16:16:24 - Timestamp utc_timestamp
2024-07-17 16:16:24 - Double var_pop(NUMERIC arg)
2024-07-17 16:16:24 - Double var_samp(NUMERIC arg)
2024-07-17 16:16:24 - Double variance(NUMERIC arg)
2024-07-17 16:16:24 - Integer week(DATE arg)
2024-07-17 16:16:24 - Integer year(DATE arg)
2024-07-17 16:16:24 - Starting QueryInterpretationCache(2048)
2024-07-17 16:16:24 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 16:16:24 - Configured EntityCopyObserver strategy: disallow
2024-07-17 16:16:24 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 16:16:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 16:16:24 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-17 16:16:24 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 16:16:24 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 16:16:24 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-17 16:16:24 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-17 16:16:24 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-17 16:16:24 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-17 16:16:24 - Starting post-init callbacks
2024-07-17 16:16:24 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 16:16:24 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-17 16:16:24 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-17 16:16:24 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-17 16:16:24 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-17 16:16:24 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-17 16:16:24 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 16:16:24 - Created new SQL alias : u1_0
2024-07-17 16:16:24 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 16:16:24 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-17 16:16:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 16:16:24 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-17 16:16:24 -  Version select: select id from users where id=?
2024-07-17 16:16:24 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-17 16:16:24 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-17 16:16:24 -  Delete (0): delete from users where id=?
2024-07-17 16:16:24 - Created new SQL alias : t1_0
2024-07-17 16:16:24 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 16:16:24 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@756030e2] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 16:16:24 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-17 16:16:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-17 16:16:24 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-17 16:16:24 -  Version select: select id from task where id=?
2024-07-17 16:16:24 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 16:16:24 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-17 16:16:24 -  Delete (0): delete from task where id=?
2024-07-17 16:16:24 - Created new SQL alias : t1_0
2024-07-17 16:16:24 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2a738d47] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-17 16:16:24 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-17 16:16:24 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@493489dd] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-17 16:16:24 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-17 16:16:24 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-17 16:16:24 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 16:16:24 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-17 16:16:24 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5cf33d25] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6715a6da]
2024-07-17 16:16:24 - Checking 0 named HQL queries
2024-07-17 16:16:24 - Checking 0 named SQL queries
2024-07-17 16:16:24 - No alter strings for table : task
2024-07-17 16:16:24 - No alter strings for table : users
2024-07-17 16:16:24 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2ae0eb98
2024-07-17 16:16:24 - Registering SessionFactory: 405fc366-87eb-400a-bdc7-6f3fb9cbd960 (<unnamed>)
2024-07-17 16:16:24 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-17 16:16:24 - Instantiated SessionFactory
2024-07-17 16:16:24 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-17 16:16:24 - Statistics initialized [enabled=false]
2024-07-17 16:16:24 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 16:16:24 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 16:16:24 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 16:16:24 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 16:16:24 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-17 16:16:24 - 

Using generated security password: 02c41bc2-3069-4d64-bb33-1f71cc0066ef

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-17 16:16:24 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-17 16:16:25 - 12 mappings in 'requestMappingHandlerMapping'
2024-07-17 16:16:25 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-17 16:16:25 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-17 16:16:25 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-17 16:16:25 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-17 16:16:25 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-17 16:16:25 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-17 16:16:25 - Tomcat started on port 8080 (http) with context path '/'
2024-07-17 16:16:25 - Started TaskmanagementApplication in 5.421 seconds (process running for 5.934)
2024-07-17 16:16:26 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-17 16:16:26 - Initializing Servlet 'dispatcherServlet'
2024-07-17 16:16:26 - Detected StandardServletMultipartResolver
2024-07-17 16:16:26 - Detected AcceptHeaderLocaleResolver
2024-07-17 16:16:26 - Detected FixedThemeResolver
2024-07-17 16:16:26 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3c0b9643
2024-07-17 16:16:26 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@27103726
2024-07-17 16:16:26 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-17 16:16:26 - Completed initialization in 0 ms
2024-07-17 16:16:38 - Securing GET /api/users/4
2024-07-17 16:16:38 - Securing GET /api/users
2024-07-17 16:16:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:16:38 - Secured GET /api/users/4
2024-07-17 16:16:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 16:16:38 - GET "/api/users/4", parameters={}
2024-07-17 16:16:38 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:16:38 - Securing GET /error
2024-07-17 16:16:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:16:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 16:16:38 - Securing GET /api/users
2024-07-17 16:16:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:16:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 16:16:38 - Securing GET /error
2024-07-17 16:16:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:16:38 - Pre-authenticated entry point called. Rejecting access
2024-07-17 16:16:38 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:16:38 - begin
2024-07-17 16:16:38 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:16:38 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@994019266 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1458530624 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:16:38 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:16:38 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:16:38 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:16:38 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1536384329
2024-07-17 16:16:38 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:16:38 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:16:38 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:16:38 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:16:38 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@601ab35e
2024-07-17 16:16:38 - committing
2024-07-17 16:16:38 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:16:38 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1874487748 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1259781053 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@452867191 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:16:38 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:16:38 - Extracted JDBC value [0] - [4]
2024-07-17 16:16:38 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:16:38 - Extracted JDBC value [1] - [3]
2024-07-17 16:16:38 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:16:38 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1867371295
2024-07-17 16:16:38 - Extracted JDBC value [0] - [4]
2024-07-17 16:16:38 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@870382184
2024-07-17 16:16:38 - Extracted JDBC value [2] - [1234]
2024-07-17 16:16:38 - Extracted JDBC value [3] - [null]
2024-07-17 16:16:38 - Extracted JDBC value [4] - [1234]
2024-07-17 16:16:38 - Extracted JDBC value [5] - [1234]
2024-07-17 16:16:38 - Extracted JDBC value [6] - [1234]
2024-07-17 16:16:38 - Extracted JDBC value [7] - [null]
2024-07-17 16:16:38 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:16:38 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@870382184
2024-07-17 16:16:38 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@1984e426
2024-07-17 16:16:38 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:16:38 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:16:38 - Writing [com.example.taskmanagement.dto.UserDTO@485adf8d]
2024-07-17 16:16:38 - Completed 200 OK
2024-07-17 16:16:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:16:38 - Securing GET /api/users/4
2024-07-17 16:16:38 - Secured GET /api/users/4
2024-07-17 16:16:38 - GET "/api/users/4", parameters={}
2024-07-17 16:16:38 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:16:38 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:16:38 - begin
2024-07-17 16:16:38 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:16:38 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@28609542 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@92997864 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:16:38 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:16:38 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:16:38 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:16:38 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1904418867
2024-07-17 16:16:38 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:16:38 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:16:38 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:16:38 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:16:38 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20a67972
2024-07-17 16:16:38 - committing
2024-07-17 16:16:38 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:16:38 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@250102736 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@924202764 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@619226485 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:16:38 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:16:38 - Extracted JDBC value [0] - [4]
2024-07-17 16:16:38 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:16:38 - Extracted JDBC value [1] - [3]
2024-07-17 16:16:38 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:16:38 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 455178113
2024-07-17 16:16:38 - Extracted JDBC value [0] - [4]
2024-07-17 16:16:38 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@739424931
2024-07-17 16:16:38 - Extracted JDBC value [2] - [1234]
2024-07-17 16:16:38 - Extracted JDBC value [3] - [null]
2024-07-17 16:16:38 - Extracted JDBC value [4] - [1234]
2024-07-17 16:16:38 - Extracted JDBC value [5] - [1234]
2024-07-17 16:16:38 - Extracted JDBC value [6] - [1234]
2024-07-17 16:16:38 - Extracted JDBC value [7] - [null]
2024-07-17 16:16:38 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:16:38 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@739424931
2024-07-17 16:16:38 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@7a83aa9d
2024-07-17 16:16:38 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:16:38 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:16:38 - Writing [com.example.taskmanagement.dto.UserDTO@77509937]
2024-07-17 16:16:38 - Completed 200 OK
2024-07-17 16:16:38 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:17:36 - Securing GET /api/users/4
2024-07-17 16:17:36 - Secured GET /api/users/4
2024-07-17 16:17:36 - GET "/api/users/4", parameters={}
2024-07-17 16:17:36 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:17:36 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:17:36 - begin
2024-07-17 16:17:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:17:36 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@369024173 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@297880266 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:17:36 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:17:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:17:36 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:17:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1700636312
2024-07-17 16:17:36 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:17:36 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:17:36 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:17:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:17:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@34ec29d9
2024-07-17 16:17:36 - committing
2024-07-17 16:17:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:17:36 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@306998667 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1700081182 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@815952268 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:17:36 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:17:36 - Extracted JDBC value [0] - [4]
2024-07-17 16:17:36 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:17:36 - Extracted JDBC value [1] - [3]
2024-07-17 16:17:36 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:17:36 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 2093961885
2024-07-17 16:17:36 - Extracted JDBC value [0] - [4]
2024-07-17 16:17:36 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@2119247843
2024-07-17 16:17:36 - Extracted JDBC value [2] - [1234]
2024-07-17 16:17:36 - Extracted JDBC value [3] - [null]
2024-07-17 16:17:36 - Extracted JDBC value [4] - [1234]
2024-07-17 16:17:36 - Extracted JDBC value [5] - [1234]
2024-07-17 16:17:36 - Extracted JDBC value [6] - [1234]
2024-07-17 16:17:36 - Extracted JDBC value [7] - [null]
2024-07-17 16:17:36 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:17:36 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@2119247843
2024-07-17 16:17:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5f426299
2024-07-17 16:17:36 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:17:36 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:17:36 - Writing [com.example.taskmanagement.dto.UserDTO@20dba8f0]
2024-07-17 16:17:36 - Completed 200 OK
2024-07-17 16:17:36 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:17:36 - Securing GET /api/users/4
2024-07-17 16:17:36 - Secured GET /api/users/4
2024-07-17 16:17:36 - GET "/api/users/4", parameters={}
2024-07-17 16:17:36 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:17:36 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:17:36 - begin
2024-07-17 16:17:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:17:36 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1148982255 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1078169528 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:17:36 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:17:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:17:36 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:17:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 881769117
2024-07-17 16:17:36 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:17:36 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:17:36 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:17:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:17:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@656ee69b
2024-07-17 16:17:36 - committing
2024-07-17 16:17:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:17:36 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@2112199878 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1936229780 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1629552476 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:17:36 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:17:36 - Extracted JDBC value [0] - [4]
2024-07-17 16:17:36 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:17:36 - Extracted JDBC value [1] - [3]
2024-07-17 16:17:36 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:17:36 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1328244284
2024-07-17 16:17:36 - Extracted JDBC value [0] - [4]
2024-07-17 16:17:36 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1751961083
2024-07-17 16:17:36 - Extracted JDBC value [2] - [1234]
2024-07-17 16:17:36 - Extracted JDBC value [3] - [null]
2024-07-17 16:17:36 - Extracted JDBC value [4] - [1234]
2024-07-17 16:17:36 - Extracted JDBC value [5] - [1234]
2024-07-17 16:17:36 - Extracted JDBC value [6] - [1234]
2024-07-17 16:17:36 - Extracted JDBC value [7] - [null]
2024-07-17 16:17:36 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:17:36 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1751961083
2024-07-17 16:17:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@2917ba9a
2024-07-17 16:17:36 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:17:36 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:17:36 - Writing [com.example.taskmanagement.dto.UserDTO@795d462f]
2024-07-17 16:17:36 - Completed 200 OK
2024-07-17 16:17:36 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:22:27 - Securing GET /api/users/4
2024-07-17 16:22:27 - Secured GET /api/users/4
2024-07-17 16:22:27 - GET "/api/users/4", parameters={}
2024-07-17 16:22:27 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:22:27 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:22:27 - begin
2024-07-17 16:22:27 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:22:27 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1980885319 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1915646813 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:22:27 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:22:27 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:22:27 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:22:27 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 114366380
2024-07-17 16:22:27 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:22:27 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:22:27 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:22:27 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:22:27 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@57031c33
2024-07-17 16:22:27 - committing
2024-07-17 16:22:27 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:22:27 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@979881198 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@484463274 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1397565313 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:22:27 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:22:27 - Extracted JDBC value [0] - [4]
2024-07-17 16:22:27 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:22:27 - Extracted JDBC value [1] - [3]
2024-07-17 16:22:27 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:22:27 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1404082142
2024-07-17 16:22:27 - Extracted JDBC value [0] - [4]
2024-07-17 16:22:27 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@132397232
2024-07-17 16:22:27 - Extracted JDBC value [2] - [1234]
2024-07-17 16:22:27 - Extracted JDBC value [3] - [null]
2024-07-17 16:22:27 - Extracted JDBC value [4] - [1234]
2024-07-17 16:22:27 - Extracted JDBC value [5] - [1234]
2024-07-17 16:22:27 - Extracted JDBC value [6] - [1234]
2024-07-17 16:22:27 - Extracted JDBC value [7] - [null]
2024-07-17 16:22:27 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:22:27 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@132397232
2024-07-17 16:22:27 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@697bd306
2024-07-17 16:22:27 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:22:27 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:22:27 - Writing [com.example.taskmanagement.dto.UserDTO@1fac77c4]
2024-07-17 16:22:27 - Completed 200 OK
2024-07-17 16:22:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:22:27 - Securing GET /api/users/4
2024-07-17 16:22:27 - Secured GET /api/users/4
2024-07-17 16:22:27 - GET "/api/users/4", parameters={}
2024-07-17 16:22:27 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:22:27 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:22:27 - begin
2024-07-17 16:22:27 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:22:27 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1634980615 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@84147911 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:22:27 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:22:27 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:22:27 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:22:27 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1489349755
2024-07-17 16:22:27 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:22:27 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:22:27 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:22:27 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:22:27 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@17bc0879
2024-07-17 16:22:27 - committing
2024-07-17 16:22:27 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:22:27 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1213668620 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1590172144 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@700464528 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:22:27 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:22:27 - Extracted JDBC value [0] - [4]
2024-07-17 16:22:27 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:22:27 - Extracted JDBC value [1] - [3]
2024-07-17 16:22:27 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:22:27 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1556937690
2024-07-17 16:22:27 - Extracted JDBC value [0] - [4]
2024-07-17 16:22:27 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1118471266
2024-07-17 16:22:27 - Extracted JDBC value [2] - [1234]
2024-07-17 16:22:27 - Extracted JDBC value [3] - [null]
2024-07-17 16:22:27 - Extracted JDBC value [4] - [1234]
2024-07-17 16:22:27 - Extracted JDBC value [5] - [1234]
2024-07-17 16:22:27 - Extracted JDBC value [6] - [1234]
2024-07-17 16:22:27 - Extracted JDBC value [7] - [null]
2024-07-17 16:22:27 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:22:27 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1118471266
2024-07-17 16:22:27 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@74c8716e
2024-07-17 16:22:27 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:22:27 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:22:27 - Writing [com.example.taskmanagement.dto.UserDTO@418171ca]
2024-07-17 16:22:27 - Completed 200 OK
2024-07-17 16:22:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:23:14 - Securing GET /api/users/4
2024-07-17 16:23:14 - Secured GET /api/users/4
2024-07-17 16:23:14 - GET "/api/users/4", parameters={}
2024-07-17 16:23:14 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:23:14 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:23:14 - begin
2024-07-17 16:23:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@240391308 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@174817694 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:23:14 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:23:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:23:14 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2129450960
2024-07-17 16:23:14 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:23:14 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:23:14 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:23:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:23:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2f46e1f8
2024-07-17 16:23:14 - committing
2024-07-17 16:23:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1966419519 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@861521061 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@721992215 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:23:14 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:23:14 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:14 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:14 - Extracted JDBC value [1] - [3]
2024-07-17 16:23:14 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:23:14 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 516614092
2024-07-17 16:23:14 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:14 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@677236450
2024-07-17 16:23:14 - Extracted JDBC value [2] - [1234]
2024-07-17 16:23:14 - Extracted JDBC value [3] - [null]
2024-07-17 16:23:14 - Extracted JDBC value [4] - [1234]
2024-07-17 16:23:14 - Extracted JDBC value [5] - [1234]
2024-07-17 16:23:14 - Extracted JDBC value [6] - [1234]
2024-07-17 16:23:14 - Extracted JDBC value [7] - [null]
2024-07-17 16:23:14 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:23:14 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@677236450
2024-07-17 16:23:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@70fc2e00
2024-07-17 16:23:14 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:23:14 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:23:14 - Writing [com.example.taskmanagement.dto.UserDTO@2169695f]
2024-07-17 16:23:14 - Completed 200 OK
2024-07-17 16:23:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:23:14 - Securing GET /api/users/4
2024-07-17 16:23:14 - Secured GET /api/users/4
2024-07-17 16:23:14 - GET "/api/users/4", parameters={}
2024-07-17 16:23:14 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:23:14 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:23:14 - begin
2024-07-17 16:23:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@276022919 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1172557061 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:23:14 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:23:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:23:14 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1051278919
2024-07-17 16:23:14 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:23:14 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:23:14 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:23:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:23:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6ca44ba7
2024-07-17 16:23:14 - committing
2024-07-17 16:23:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@794126542 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@3733649 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1309631042 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:23:14 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:23:14 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:14 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:14 - Extracted JDBC value [1] - [3]
2024-07-17 16:23:14 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:23:14 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 482332568
2024-07-17 16:23:14 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:14 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1710839666
2024-07-17 16:23:14 - Extracted JDBC value [2] - [1234]
2024-07-17 16:23:14 - Extracted JDBC value [3] - [null]
2024-07-17 16:23:14 - Extracted JDBC value [4] - [1234]
2024-07-17 16:23:14 - Extracted JDBC value [5] - [1234]
2024-07-17 16:23:14 - Extracted JDBC value [6] - [1234]
2024-07-17 16:23:14 - Extracted JDBC value [7] - [null]
2024-07-17 16:23:14 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:23:14 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1710839666
2024-07-17 16:23:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@2997a33f
2024-07-17 16:23:14 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:23:14 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:23:14 - Writing [com.example.taskmanagement.dto.UserDTO@771cd329]
2024-07-17 16:23:14 - Completed 200 OK
2024-07-17 16:23:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:23:15 - Securing GET /api/users/4
2024-07-17 16:23:15 - Secured GET /api/users/4
2024-07-17 16:23:15 - GET "/api/users/4", parameters={}
2024-07-17 16:23:15 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:23:15 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:23:15 - begin
2024-07-17 16:23:15 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:15 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@274727426 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1358725649 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:23:15 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:23:15 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:23:15 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:15 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1058950960
2024-07-17 16:23:15 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:23:15 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:23:15 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:23:15 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:23:15 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@737032b8
2024-07-17 16:23:15 - committing
2024-07-17 16:23:15 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:15 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1614604676 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1588734901 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@740632361 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:23:15 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:23:15 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:15 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:15 - Extracted JDBC value [1] - [3]
2024-07-17 16:23:15 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:23:15 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 2078100349
2024-07-17 16:23:15 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:15 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@197574344
2024-07-17 16:23:15 - Extracted JDBC value [2] - [1234]
2024-07-17 16:23:15 - Extracted JDBC value [3] - [null]
2024-07-17 16:23:15 - Extracted JDBC value [4] - [1234]
2024-07-17 16:23:15 - Extracted JDBC value [5] - [1234]
2024-07-17 16:23:15 - Extracted JDBC value [6] - [1234]
2024-07-17 16:23:15 - Extracted JDBC value [7] - [null]
2024-07-17 16:23:15 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:23:15 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@197574344
2024-07-17 16:23:15 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@7e442740
2024-07-17 16:23:15 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:23:15 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:23:15 - Writing [com.example.taskmanagement.dto.UserDTO@55e75780]
2024-07-17 16:23:15 - Completed 200 OK
2024-07-17 16:23:15 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:23:15 - Securing GET /api/users/4
2024-07-17 16:23:15 - Secured GET /api/users/4
2024-07-17 16:23:15 - GET "/api/users/4", parameters={}
2024-07-17 16:23:15 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:23:15 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:23:15 - begin
2024-07-17 16:23:15 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:15 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1816215768 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@886105840 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:23:15 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:23:15 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:23:15 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:15 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1005229876
2024-07-17 16:23:15 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:23:15 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:23:15 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:23:15 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:23:15 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7f3bd96b
2024-07-17 16:23:15 - committing
2024-07-17 16:23:15 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:15 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@395697084 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1876787304 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1309473913 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:23:15 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:23:15 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:15 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:15 - Extracted JDBC value [1] - [3]
2024-07-17 16:23:15 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:23:15 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1102664547
2024-07-17 16:23:15 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:15 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@146670047
2024-07-17 16:23:15 - Extracted JDBC value [2] - [1234]
2024-07-17 16:23:15 - Extracted JDBC value [3] - [null]
2024-07-17 16:23:15 - Extracted JDBC value [4] - [1234]
2024-07-17 16:23:15 - Extracted JDBC value [5] - [1234]
2024-07-17 16:23:15 - Extracted JDBC value [6] - [1234]
2024-07-17 16:23:15 - Extracted JDBC value [7] - [null]
2024-07-17 16:23:15 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:23:15 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@146670047
2024-07-17 16:23:15 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@687f9019
2024-07-17 16:23:15 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:23:15 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:23:15 - Writing [com.example.taskmanagement.dto.UserDTO@5172aa0a]
2024-07-17 16:23:15 - Completed 200 OK
2024-07-17 16:23:15 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:23:48 - Securing GET /api/users/4
2024-07-17 16:23:48 - Secured GET /api/users/4
2024-07-17 16:23:48 - GET "/api/users/4", parameters={}
2024-07-17 16:23:48 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:23:48 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:23:48 - begin
2024-07-17 16:23:48 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:48 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1829429492 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@123361019 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:23:48 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:23:48 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:23:48 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:48 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1569394266
2024-07-17 16:23:48 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:23:48 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:23:48 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:23:48 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:23:48 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6400ab0b
2024-07-17 16:23:48 - committing
2024-07-17 16:23:48 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:48 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1681743657 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@2007585446 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@370206635 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:23:48 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:23:48 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:48 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:48 - Extracted JDBC value [1] - [3]
2024-07-17 16:23:48 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:23:48 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1330921491
2024-07-17 16:23:48 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:48 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@145974942
2024-07-17 16:23:48 - Extracted JDBC value [2] - [1234]
2024-07-17 16:23:48 - Extracted JDBC value [3] - [null]
2024-07-17 16:23:48 - Extracted JDBC value [4] - [1234]
2024-07-17 16:23:48 - Extracted JDBC value [5] - [1234]
2024-07-17 16:23:48 - Extracted JDBC value [6] - [1234]
2024-07-17 16:23:48 - Extracted JDBC value [7] - [null]
2024-07-17 16:23:48 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:23:48 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@145974942
2024-07-17 16:23:48 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5ee8dbed
2024-07-17 16:23:48 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:23:48 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:23:48 - Writing [com.example.taskmanagement.dto.UserDTO@6ba6cc33]
2024-07-17 16:23:48 - Completed 200 OK
2024-07-17 16:23:48 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:23:48 - Securing GET /api/users/4
2024-07-17 16:23:48 - Secured GET /api/users/4
2024-07-17 16:23:48 - GET "/api/users/4", parameters={}
2024-07-17 16:23:48 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:23:48 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:23:48 - begin
2024-07-17 16:23:48 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:48 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@766337418 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@697495783 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:23:48 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:23:48 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:23:48 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:48 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1563844678
2024-07-17 16:23:48 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:23:48 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:23:48 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:23:48 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:23:48 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@cbf94fe
2024-07-17 16:23:48 - committing
2024-07-17 16:23:48 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:23:48 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1983702191 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@2014945129 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@150072560 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:23:48 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:23:48 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:48 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:23:48 - Extracted JDBC value [1] - [3]
2024-07-17 16:23:48 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:23:48 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 24649548
2024-07-17 16:23:48 - Extracted JDBC value [0] - [4]
2024-07-17 16:23:48 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1662891727
2024-07-17 16:23:48 - Extracted JDBC value [2] - [1234]
2024-07-17 16:23:48 - Extracted JDBC value [3] - [null]
2024-07-17 16:23:48 - Extracted JDBC value [4] - [1234]
2024-07-17 16:23:48 - Extracted JDBC value [5] - [1234]
2024-07-17 16:23:48 - Extracted JDBC value [6] - [1234]
2024-07-17 16:23:48 - Extracted JDBC value [7] - [null]
2024-07-17 16:23:48 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:23:48 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1662891727
2024-07-17 16:23:48 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6e9e5ff
2024-07-17 16:23:48 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:23:48 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:23:48 - Writing [com.example.taskmanagement.dto.UserDTO@127aac0e]
2024-07-17 16:23:48 - Completed 200 OK
2024-07-17 16:23:48 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:24:04 - Securing GET /api/users/4
2024-07-17 16:24:04 - Secured GET /api/users/4
2024-07-17 16:24:04 - GET "/api/users/4", parameters={}
2024-07-17 16:24:04 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:24:04 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:24:04 - begin
2024-07-17 16:24:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:24:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1326065642 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1261808339 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:24:04 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:24:04 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:24:04 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:24:04 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1064526811
2024-07-17 16:24:04 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:24:04 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:24:04 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:24:04 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:24:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e18d29e
2024-07-17 16:24:04 - committing
2024-07-17 16:24:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:24:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@717399772 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1123217109 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1784039479 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:24:04 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:24:04 - Extracted JDBC value [0] - [4]
2024-07-17 16:24:04 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:24:04 - Extracted JDBC value [1] - [3]
2024-07-17 16:24:04 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:24:04 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1427745785
2024-07-17 16:24:04 - Extracted JDBC value [0] - [4]
2024-07-17 16:24:04 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1509303764
2024-07-17 16:24:04 - Extracted JDBC value [2] - [1234]
2024-07-17 16:24:04 - Extracted JDBC value [3] - [null]
2024-07-17 16:24:04 - Extracted JDBC value [4] - [1234]
2024-07-17 16:24:04 - Extracted JDBC value [5] - [1234]
2024-07-17 16:24:04 - Extracted JDBC value [6] - [1234]
2024-07-17 16:24:04 - Extracted JDBC value [7] - [null]
2024-07-17 16:24:04 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:24:04 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1509303764
2024-07-17 16:24:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@dd6569d
2024-07-17 16:24:04 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:24:04 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:24:04 - Writing [com.example.taskmanagement.dto.UserDTO@770a6fda]
2024-07-17 16:24:04 - Completed 200 OK
2024-07-17 16:24:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:24:04 - Securing GET /api/users/4
2024-07-17 16:24:04 - Secured GET /api/users/4
2024-07-17 16:24:04 - GET "/api/users/4", parameters={}
2024-07-17 16:24:04 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:24:04 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:24:04 - begin
2024-07-17 16:24:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:24:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@798507384 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@732418131 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:24:04 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:24:04 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:24:04 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:24:04 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1593927601
2024-07-17 16:24:04 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:24:04 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:24:04 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:24:04 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:24:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e8ab40c
2024-07-17 16:24:04 - committing
2024-07-17 16:24:04 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:24:04 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@323801787 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1370827465 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@180669991 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:24:04 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:24:04 - Extracted JDBC value [0] - [4]
2024-07-17 16:24:04 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:24:04 - Extracted JDBC value [1] - [3]
2024-07-17 16:24:04 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:24:04 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1618505424
2024-07-17 16:24:04 - Extracted JDBC value [0] - [4]
2024-07-17 16:24:04 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1253114186
2024-07-17 16:24:04 - Extracted JDBC value [2] - [1234]
2024-07-17 16:24:04 - Extracted JDBC value [3] - [null]
2024-07-17 16:24:04 - Extracted JDBC value [4] - [1234]
2024-07-17 16:24:04 - Extracted JDBC value [5] - [1234]
2024-07-17 16:24:04 - Extracted JDBC value [6] - [1234]
2024-07-17 16:24:04 - Extracted JDBC value [7] - [null]
2024-07-17 16:24:04 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:24:04 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1253114186
2024-07-17 16:24:04 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@4c61310e
2024-07-17 16:24:04 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:24:04 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:24:04 - Writing [com.example.taskmanagement.dto.UserDTO@7c038ada]
2024-07-17 16:24:04 - Completed 200 OK
2024-07-17 16:24:04 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:25:10 - Securing GET /api/users/4
2024-07-17 16:25:10 - Secured GET /api/users/4
2024-07-17 16:25:10 - GET "/api/users/4", parameters={}
2024-07-17 16:25:10 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:25:10 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:25:10 - begin
2024-07-17 16:25:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:25:10 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@812961628 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@537858070 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:25:10 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:25:10 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:25:10 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:25:10 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 343544074
2024-07-17 16:25:10 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:25:10 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:25:10 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:25:10 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:25:10 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@78cd1e27
2024-07-17 16:25:10 - committing
2024-07-17 16:25:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:25:10 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@789304511 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@174205385 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@441328260 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:25:10 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:25:10 - Extracted JDBC value [0] - [4]
2024-07-17 16:25:10 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:25:10 - Extracted JDBC value [1] - [3]
2024-07-17 16:25:10 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:25:10 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1884257212
2024-07-17 16:25:10 - Extracted JDBC value [0] - [4]
2024-07-17 16:25:10 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1286421555
2024-07-17 16:25:10 - Extracted JDBC value [2] - [1234]
2024-07-17 16:25:10 - Extracted JDBC value [3] - [null]
2024-07-17 16:25:10 - Extracted JDBC value [4] - [1234]
2024-07-17 16:25:10 - Extracted JDBC value [5] - [1234]
2024-07-17 16:25:10 - Extracted JDBC value [6] - [1234]
2024-07-17 16:25:10 - Extracted JDBC value [7] - [null]
2024-07-17 16:25:10 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:25:10 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1286421555
2024-07-17 16:25:10 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@1bfe2d33
2024-07-17 16:25:10 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:25:10 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:25:10 - Writing [com.example.taskmanagement.dto.UserDTO@1d3bda44]
2024-07-17 16:25:10 - Completed 200 OK
2024-07-17 16:25:10 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:25:10 - Securing GET /api/users/4
2024-07-17 16:25:10 - Secured GET /api/users/4
2024-07-17 16:25:10 - GET "/api/users/4", parameters={}
2024-07-17 16:25:10 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:25:10 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:25:10 - begin
2024-07-17 16:25:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:25:10 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1661339822 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@156000282 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:25:10 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:25:10 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:25:10 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:25:10 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 920700585
2024-07-17 16:25:10 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:25:10 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:25:10 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:25:10 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:25:10 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@f7e5521
2024-07-17 16:25:10 - committing
2024-07-17 16:25:10 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:25:10 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1569134077 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@818608726 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1306555955 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:25:10 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:25:10 - Extracted JDBC value [0] - [4]
2024-07-17 16:25:10 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:25:10 - Extracted JDBC value [1] - [3]
2024-07-17 16:25:10 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:25:10 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 819228351
2024-07-17 16:25:10 - Extracted JDBC value [0] - [4]
2024-07-17 16:25:10 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1556495583
2024-07-17 16:25:10 - Extracted JDBC value [2] - [1234]
2024-07-17 16:25:10 - Extracted JDBC value [3] - [null]
2024-07-17 16:25:10 - Extracted JDBC value [4] - [1234]
2024-07-17 16:25:10 - Extracted JDBC value [5] - [1234]
2024-07-17 16:25:10 - Extracted JDBC value [6] - [1234]
2024-07-17 16:25:10 - Extracted JDBC value [7] - [null]
2024-07-17 16:25:10 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:25:10 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1556495583
2024-07-17 16:25:10 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@7e4bc778
2024-07-17 16:25:10 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:25:10 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:25:10 - Writing [com.example.taskmanagement.dto.UserDTO@66a59a25]
2024-07-17 16:25:10 - Completed 200 OK
2024-07-17 16:25:10 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:28:31 - Securing GET /api/users/4
2024-07-17 16:28:31 - Secured GET /api/users/4
2024-07-17 16:28:31 - GET "/api/users/4", parameters={}
2024-07-17 16:28:31 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:28:31 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:28:31 - begin
2024-07-17 16:28:31 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:28:31 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1929987353 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@141873062 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:28:31 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:28:31 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:28:31 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:28:31 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 278199387
2024-07-17 16:28:31 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:28:31 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:28:31 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:28:31 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:28:31 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7c27c9cd
2024-07-17 16:28:31 - committing
2024-07-17 16:28:31 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:28:31 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@955412 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@643559309 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1685074730 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:28:31 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:28:31 - Extracted JDBC value [0] - [4]
2024-07-17 16:28:31 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:28:31 - Extracted JDBC value [1] - [3]
2024-07-17 16:28:31 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:28:31 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 544608455
2024-07-17 16:28:31 - Extracted JDBC value [0] - [4]
2024-07-17 16:28:31 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1051920400
2024-07-17 16:28:31 - Extracted JDBC value [2] - [1234]
2024-07-17 16:28:31 - Extracted JDBC value [3] - [null]
2024-07-17 16:28:31 - Extracted JDBC value [4] - [1234]
2024-07-17 16:28:31 - Extracted JDBC value [5] - [1234]
2024-07-17 16:28:31 - Extracted JDBC value [6] - [1234]
2024-07-17 16:28:31 - Extracted JDBC value [7] - [null]
2024-07-17 16:28:31 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:28:31 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1051920400
2024-07-17 16:28:31 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@45fa9e80
2024-07-17 16:28:31 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:28:31 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:28:31 - Writing [com.example.taskmanagement.dto.UserDTO@751c04bc]
2024-07-17 16:28:31 - Completed 200 OK
2024-07-17 16:28:31 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:28:31 - Securing GET /api/users/4
2024-07-17 16:28:31 - Secured GET /api/users/4
2024-07-17 16:28:31 - GET "/api/users/4", parameters={}
2024-07-17 16:28:31 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:28:31 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:28:31 - begin
2024-07-17 16:28:31 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:28:31 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1542808995 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1154497995 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:28:31 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:28:31 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:28:31 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:28:31 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1784620647
2024-07-17 16:28:31 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:28:31 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:28:31 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:28:31 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:28:31 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20edfeab
2024-07-17 16:28:31 - committing
2024-07-17 16:28:31 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:28:31 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@356831303 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@434639373 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1455402813 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:28:31 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:28:31 - Extracted JDBC value [0] - [4]
2024-07-17 16:28:31 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:28:31 - Extracted JDBC value [1] - [3]
2024-07-17 16:28:31 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:28:31 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1729911135
2024-07-17 16:28:31 - Extracted JDBC value [0] - [4]
2024-07-17 16:28:31 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@790917250
2024-07-17 16:28:31 - Extracted JDBC value [2] - [1234]
2024-07-17 16:28:31 - Extracted JDBC value [3] - [null]
2024-07-17 16:28:31 - Extracted JDBC value [4] - [1234]
2024-07-17 16:28:31 - Extracted JDBC value [5] - [1234]
2024-07-17 16:28:31 - Extracted JDBC value [6] - [1234]
2024-07-17 16:28:31 - Extracted JDBC value [7] - [null]
2024-07-17 16:28:31 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:28:31 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@790917250
2024-07-17 16:28:31 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@4c71d4c6
2024-07-17 16:28:31 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:28:31 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:28:31 - Writing [com.example.taskmanagement.dto.UserDTO@5335b2be]
2024-07-17 16:28:31 - Completed 200 OK
2024-07-17 16:28:31 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:29:07 - Securing GET /api/users/4
2024-07-17 16:29:07 - Secured GET /api/users/4
2024-07-17 16:29:07 - GET "/api/users/4", parameters={}
2024-07-17 16:29:07 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:29:07 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:29:07 - begin
2024-07-17 16:29:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:29:07 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1222094104 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1162858968 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:29:07 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:29:07 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:29:07 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:29:07 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1500592726
2024-07-17 16:29:07 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:29:07 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:29:07 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:29:07 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:29:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@338f6feb
2024-07-17 16:29:07 - committing
2024-07-17 16:29:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:29:07 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@274285370 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@769834729 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1700424841 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:29:07 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:29:07 - Extracted JDBC value [0] - [4]
2024-07-17 16:29:07 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:29:07 - Extracted JDBC value [1] - [3]
2024-07-17 16:29:07 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:29:07 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 348326990
2024-07-17 16:29:07 - Extracted JDBC value [0] - [4]
2024-07-17 16:29:07 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1653334449
2024-07-17 16:29:07 - Extracted JDBC value [2] - [1234]
2024-07-17 16:29:07 - Extracted JDBC value [3] - [null]
2024-07-17 16:29:07 - Extracted JDBC value [4] - [1234]
2024-07-17 16:29:07 - Extracted JDBC value [5] - [1234]
2024-07-17 16:29:07 - Extracted JDBC value [6] - [1234]
2024-07-17 16:29:07 - Extracted JDBC value [7] - [null]
2024-07-17 16:29:07 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:29:07 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1653334449
2024-07-17 16:29:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@22cb147b
2024-07-17 16:29:07 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:29:07 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:29:07 - Writing [com.example.taskmanagement.dto.UserDTO@229b52ee]
2024-07-17 16:29:07 - Completed 200 OK
2024-07-17 16:29:07 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 16:29:07 - Securing GET /api/users/4
2024-07-17 16:29:07 - Secured GET /api/users/4
2024-07-17 16:29:07 - GET "/api/users/4", parameters={}
2024-07-17 16:29:07 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 16:29:07 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 16:29:07 - begin
2024-07-17 16:29:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:29:07 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@967785749 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@753299601 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 16:29:07 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 16:29:07 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 16:29:07 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:29:07 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 551451491
2024-07-17 16:29:07 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 16:29:07 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 16:29:07 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 16:29:07 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 16:29:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a79df92
2024-07-17 16:29:07 - committing
2024-07-17 16:29:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 16:29:07 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@611630900 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@81780166 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@273549184 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 16:29:07 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 16:29:07 - Extracted JDBC value [0] - [4]
2024-07-17 16:29:07 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 16:29:07 - Extracted JDBC value [1] - [3]
2024-07-17 16:29:07 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 16:29:07 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 175378607
2024-07-17 16:29:07 - Extracted JDBC value [0] - [4]
2024-07-17 16:29:07 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1059317009
2024-07-17 16:29:07 - Extracted JDBC value [2] - [1234]
2024-07-17 16:29:07 - Extracted JDBC value [3] - [null]
2024-07-17 16:29:07 - Extracted JDBC value [4] - [1234]
2024-07-17 16:29:07 - Extracted JDBC value [5] - [1234]
2024-07-17 16:29:07 - Extracted JDBC value [6] - [1234]
2024-07-17 16:29:07 - Extracted JDBC value [7] - [null]
2024-07-17 16:29:07 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 16:29:07 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1059317009
2024-07-17 16:29:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6ae67466
2024-07-17 16:29:07 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 16:29:07 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 16:29:07 - Writing [com.example.taskmanagement.dto.UserDTO@2534f9d0]
2024-07-17 16:29:07 - Completed 200 OK
2024-07-17 16:29:07 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 17:31:06 - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=50m48s838ms201µs400ns).
2024-07-17 18:48:42 - Securing OPTIONS /api/users/login
2024-07-17 18:48:42 - Securing POST /api/users/login
2024-07-17 18:48:42 - Secured POST /api/users/login
2024-07-17 18:48:42 - POST "/api/users/login", parameters={}
2024-07-17 18:48:42 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-17 18:48:42 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@75970187]
2024-07-17 18:48:43 - Created new SQL alias : u1_0
2024-07-17 18:48:43 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(24213568900000))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 18:48:43 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7cbb837a
2024-07-17 18:48:43 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(24213568900000).username) 
2024-07-17 18:48:43 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(24213568900000)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(24213568900000).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(24213568900000).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(24213568900000).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(24213568900000).username]

2024-07-17 18:48:43 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(24213568900000)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 18:48:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 18:48:43 - Initializer list:
	  com.example.taskmanagement.model.User(24213568900000) -> EntityResultInitializer(com.example.taskmanagement.model.User(24213568900000))@1920661070 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(24213568900000).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(24213568900000).tasks)@169598208 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 18:48:43 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 18:48:43 - Extracted JDBC value [0] - [4]
2024-07-17 18:48:43 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(24213568900000)): 4
2024-07-17 18:48:43 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(24213568900000).tasks#4
2024-07-17 18:48:43 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(24213568900000)#4] : 854132788
2024-07-17 18:48:43 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 18:48:43 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 18:48:43 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 18:48:43 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(24213568900000)#4
2024-07-17 18:48:43 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5fe50fef
2024-07-17 18:48:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 18:48:43 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1263415999 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1710090565 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1618253443 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 18:48:43 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 18:48:43 - Extracted JDBC value [0] - [4]
2024-07-17 18:48:43 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 18:48:43 - Extracted JDBC value [1] - [3]
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 139039947
2024-07-17 18:48:43 - Extracted JDBC value [0] - [4]
2024-07-17 18:48:43 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1168119946
2024-07-17 18:48:43 - Extracted JDBC value [2] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [3] - [null]
2024-07-17 18:48:43 - Extracted JDBC value [4] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [5] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [6] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [7] - [null]
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 18:48:43 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1168119946
2024-07-17 18:48:43 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@4c4ddbcf
2024-07-17 18:48:43 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 18:48:43 - Created new SQL alias : u1_0
2024-07-17 18:48:43 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(24213568900000))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 18:48:43 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3a0699a0
2024-07-17 18:48:43 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(24213568900000).username) 
2024-07-17 18:48:43 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(24213568900000)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(24213568900000).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(24213568900000).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(24213568900000).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(24213568900000).username]

2024-07-17 18:48:43 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(24213568900000)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 18:48:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 18:48:43 - Initializer list:
	  com.example.taskmanagement.model.User(24213568900000) -> EntityResultInitializer(com.example.taskmanagement.model.User(24213568900000))@895706471 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(24213568900000).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(24213568900000).tasks)@1000747506 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 18:48:43 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 18:48:43 - Extracted JDBC value [0] - [4]
2024-07-17 18:48:43 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(24213568900000)): 4
2024-07-17 18:48:43 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(24213568900000).tasks#4
2024-07-17 18:48:43 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@24536f2c
2024-07-17 18:48:43 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 18:48:43 - Writing [{message=Login successful!, userId=4}]
2024-07-17 18:48:43 - Completed 200 OK
2024-07-17 18:48:43 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 18:48:43 - Securing GET /api/users/4
2024-07-17 18:48:43 - Secured GET /api/users/4
2024-07-17 18:48:43 - GET "/api/users/4", parameters={}
2024-07-17 18:48:43 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 18:48:43 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 18:48:43 - begin
2024-07-17 18:48:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 18:48:43 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@180749403 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1730963798 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 18:48:43 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 18:48:43 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 18:48:43 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 18:48:43 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1973882927
2024-07-17 18:48:43 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 18:48:43 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 18:48:43 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 18:48:43 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 18:48:43 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@380d5f44
2024-07-17 18:48:43 - committing
2024-07-17 18:48:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 18:48:43 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1939041155 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@788670948 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@2099754047 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 18:48:43 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 18:48:43 - Extracted JDBC value [0] - [4]
2024-07-17 18:48:43 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 18:48:43 - Extracted JDBC value [1] - [3]
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1424247907
2024-07-17 18:48:43 - Extracted JDBC value [0] - [4]
2024-07-17 18:48:43 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1900388628
2024-07-17 18:48:43 - Extracted JDBC value [2] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [3] - [null]
2024-07-17 18:48:43 - Extracted JDBC value [4] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [5] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [6] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [7] - [null]
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 18:48:43 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1900388628
2024-07-17 18:48:43 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@14229c8c
2024-07-17 18:48:43 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 18:48:43 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 18:48:43 - Writing [com.example.taskmanagement.dto.UserDTO@37c419c8]
2024-07-17 18:48:43 - Completed 200 OK
2024-07-17 18:48:43 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 18:48:43 - Securing GET /api/users/4
2024-07-17 18:48:43 - Secured GET /api/users/4
2024-07-17 18:48:43 - GET "/api/users/4", parameters={}
2024-07-17 18:48:43 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 18:48:43 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 18:48:43 - begin
2024-07-17 18:48:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 18:48:43 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1167656805 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1612528793 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 18:48:43 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 18:48:43 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 18:48:43 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 18:48:43 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 759756117
2024-07-17 18:48:43 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 18:48:43 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 18:48:43 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 18:48:43 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 18:48:43 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4d939b55
2024-07-17 18:48:43 - committing
2024-07-17 18:48:43 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 18:48:43 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1015530697 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1597043389 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@245924669 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 18:48:43 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 18:48:43 - Extracted JDBC value [0] - [4]
2024-07-17 18:48:43 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 18:48:43 - Extracted JDBC value [1] - [3]
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 2036102703
2024-07-17 18:48:43 - Extracted JDBC value [0] - [4]
2024-07-17 18:48:43 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@616103313
2024-07-17 18:48:43 - Extracted JDBC value [2] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [3] - [null]
2024-07-17 18:48:43 - Extracted JDBC value [4] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [5] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [6] - [1234]
2024-07-17 18:48:43 - Extracted JDBC value [7] - [null]
2024-07-17 18:48:43 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 18:48:43 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@616103313
2024-07-17 18:48:43 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@3327a352
2024-07-17 18:48:43 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 18:48:43 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 18:48:43 - Writing [com.example.taskmanagement.dto.UserDTO@32a128df]
2024-07-17 18:48:43 - Completed 200 OK
2024-07-17 18:48:43 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 21:53:03 - Securing OPTIONS /api/users/login
2024-07-17 21:53:03 - Securing POST /api/users/login
2024-07-17 21:53:03 - Secured POST /api/users/login
2024-07-17 21:53:03 - POST "/api/users/login", parameters={}
2024-07-17 21:53:03 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-17 21:53:03 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@7c28ec54]
2024-07-17 21:53:03 - Created new SQL alias : u1_0
2024-07-17 21:53:03 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(24213568900000))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 21:53:03 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2db7ed0b
2024-07-17 21:53:03 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(24213568900000).username) 
2024-07-17 21:53:03 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(24213568900000)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(24213568900000).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(24213568900000).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(24213568900000).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(24213568900000).username]

2024-07-17 21:53:03 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(24213568900000)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 21:53:03 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 21:53:03 - Initializer list:
	  com.example.taskmanagement.model.User(24213568900000) -> EntityResultInitializer(com.example.taskmanagement.model.User(24213568900000))@1613376664 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(24213568900000).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(24213568900000).tasks)@1919371811 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 21:53:03 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 21:53:03 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:03 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(24213568900000)): 4
2024-07-17 21:53:03 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(24213568900000).tasks#4
2024-07-17 21:53:03 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(24213568900000)#4] : 98712108
2024-07-17 21:53:03 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 21:53:03 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 21:53:03 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 21:53:03 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(24213568900000)#4
2024-07-17 21:53:03 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22908167
2024-07-17 21:53:03 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:03 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1845779978 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1103163005 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1736295579 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 21:53:03 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 21:53:03 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:03 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:03 - Extracted JDBC value [1] - [3]
2024-07-17 21:53:03 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 21:53:03 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 246518876
2024-07-17 21:53:03 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:03 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1293704929
2024-07-17 21:53:03 - Extracted JDBC value [2] - [1234]
2024-07-17 21:53:03 - Extracted JDBC value [3] - [null]
2024-07-17 21:53:03 - Extracted JDBC value [4] - [1234]
2024-07-17 21:53:03 - Extracted JDBC value [5] - [1234]
2024-07-17 21:53:03 - Extracted JDBC value [6] - [1234]
2024-07-17 21:53:03 - Extracted JDBC value [7] - [null]
2024-07-17 21:53:03 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 21:53:03 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1293704929
2024-07-17 21:53:03 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@761d00d
2024-07-17 21:53:03 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 21:53:03 - Created new SQL alias : u1_0
2024-07-17 21:53:03 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(24213568900000))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 21:53:03 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@e17e45d
2024-07-17 21:53:03 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(24213568900000).username) 
2024-07-17 21:53:03 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(24213568900000)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(24213568900000).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(24213568900000).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(24213568900000).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(24213568900000).username]

2024-07-17 21:53:03 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(24213568900000)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 21:53:03 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 21:53:03 - Initializer list:
	  com.example.taskmanagement.model.User(24213568900000) -> EntityResultInitializer(com.example.taskmanagement.model.User(24213568900000))@215368129 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(24213568900000).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(24213568900000).tasks)@1037203722 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 21:53:03 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 21:53:03 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:03 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(24213568900000)): 4
2024-07-17 21:53:03 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(24213568900000).tasks#4
2024-07-17 21:53:03 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3600ff71
2024-07-17 21:53:03 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 21:53:03 - Writing [{message=Login successful!, userId=4}]
2024-07-17 21:53:03 - Completed 200 OK
2024-07-17 21:53:03 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 21:53:26 - Securing GET /api/users/4
2024-07-17 21:53:26 - Secured GET /api/users/4
2024-07-17 21:53:26 - GET "/api/users/4", parameters={}
2024-07-17 21:53:26 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 21:53:26 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 21:53:26 - begin
2024-07-17 21:53:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:26 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@687371476 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1644643498 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 21:53:26 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 21:53:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 21:53:26 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 368236952
2024-07-17 21:53:26 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 21:53:26 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 21:53:26 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 21:53:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 21:53:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@727b896
2024-07-17 21:53:26 - committing
2024-07-17 21:53:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:26 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1090252423 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1242935085 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1884052977 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 21:53:26 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 21:53:26 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:26 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:26 - Extracted JDBC value [1] - [3]
2024-07-17 21:53:26 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 21:53:26 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 2104483438
2024-07-17 21:53:26 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:26 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1292430744
2024-07-17 21:53:26 - Extracted JDBC value [2] - [1234]
2024-07-17 21:53:26 - Extracted JDBC value [3] - [null]
2024-07-17 21:53:26 - Extracted JDBC value [4] - [1234]
2024-07-17 21:53:26 - Extracted JDBC value [5] - [1234]
2024-07-17 21:53:26 - Extracted JDBC value [6] - [1234]
2024-07-17 21:53:26 - Extracted JDBC value [7] - [null]
2024-07-17 21:53:26 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 21:53:26 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1292430744
2024-07-17 21:53:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@6fdea7e7
2024-07-17 21:53:26 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 21:53:26 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 21:53:26 - Writing [com.example.taskmanagement.dto.UserDTO@710371af]
2024-07-17 21:53:26 - Completed 200 OK
2024-07-17 21:53:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 21:53:26 - Securing GET /api/users/4
2024-07-17 21:53:26 - Secured GET /api/users/4
2024-07-17 21:53:26 - GET "/api/users/4", parameters={}
2024-07-17 21:53:26 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 21:53:26 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 21:53:26 - begin
2024-07-17 21:53:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:26 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1987394453 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@991014436 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 21:53:26 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 21:53:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 21:53:26 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 378110010
2024-07-17 21:53:26 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 21:53:26 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 21:53:26 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 21:53:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 21:53:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77decbb0
2024-07-17 21:53:26 - committing
2024-07-17 21:53:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:26 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@434063736 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1119458166 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1136350170 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 21:53:26 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 21:53:26 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:26 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:26 - Extracted JDBC value [1] - [3]
2024-07-17 21:53:26 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 21:53:26 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 25795733
2024-07-17 21:53:26 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:26 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@543128641
2024-07-17 21:53:26 - Extracted JDBC value [2] - [1234]
2024-07-17 21:53:26 - Extracted JDBC value [3] - [null]
2024-07-17 21:53:26 - Extracted JDBC value [4] - [1234]
2024-07-17 21:53:26 - Extracted JDBC value [5] - [1234]
2024-07-17 21:53:26 - Extracted JDBC value [6] - [1234]
2024-07-17 21:53:26 - Extracted JDBC value [7] - [null]
2024-07-17 21:53:26 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 21:53:26 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@543128641
2024-07-17 21:53:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@18b53afd
2024-07-17 21:53:26 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 21:53:26 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 21:53:26 - Writing [com.example.taskmanagement.dto.UserDTO@ebad805]
2024-07-17 21:53:26 - Completed 200 OK
2024-07-17 21:53:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 21:53:56 - Securing GET /api/users/4
2024-07-17 21:53:56 - Secured GET /api/users/4
2024-07-17 21:53:56 - GET "/api/users/4", parameters={}
2024-07-17 21:53:56 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 21:53:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 21:53:56 - begin
2024-07-17 21:53:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1354591380 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@283125797 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 21:53:56 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 21:53:56 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 21:53:56 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:56 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1433807966
2024-07-17 21:53:56 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 21:53:56 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 21:53:56 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 21:53:56 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 21:53:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9a90900
2024-07-17 21:53:56 - committing
2024-07-17 21:53:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@572849709 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1387052419 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@319573983 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 21:53:56 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 21:53:56 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:56 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:56 - Extracted JDBC value [1] - [3]
2024-07-17 21:53:56 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 21:53:56 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1181436650
2024-07-17 21:53:56 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:56 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1153865685
2024-07-17 21:53:56 - Extracted JDBC value [2] - [1234]
2024-07-17 21:53:56 - Extracted JDBC value [3] - [null]
2024-07-17 21:53:56 - Extracted JDBC value [4] - [1234]
2024-07-17 21:53:56 - Extracted JDBC value [5] - [1234]
2024-07-17 21:53:56 - Extracted JDBC value [6] - [1234]
2024-07-17 21:53:56 - Extracted JDBC value [7] - [null]
2024-07-17 21:53:56 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 21:53:56 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1153865685
2024-07-17 21:53:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@37e8974f
2024-07-17 21:53:56 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 21:53:56 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 21:53:56 - Writing [com.example.taskmanagement.dto.UserDTO@2c76c12d]
2024-07-17 21:53:56 - Completed 200 OK
2024-07-17 21:53:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 21:53:56 - Securing GET /api/users/4
2024-07-17 21:53:56 - Secured GET /api/users/4
2024-07-17 21:53:56 - GET "/api/users/4", parameters={}
2024-07-17 21:53:56 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 21:53:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 21:53:56 - begin
2024-07-17 21:53:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@479746660 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1466138879 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 21:53:56 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 21:53:56 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 21:53:56 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:56 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 362971677
2024-07-17 21:53:56 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 21:53:56 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 21:53:56 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 21:53:56 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 21:53:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@63f3e8eb
2024-07-17 21:53:56 - committing
2024-07-17 21:53:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 21:53:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@340973625 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@638343777 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1514425083 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 21:53:56 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 21:53:56 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:56 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 21:53:56 - Extracted JDBC value [1] - [3]
2024-07-17 21:53:56 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 21:53:56 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 27601675
2024-07-17 21:53:56 - Extracted JDBC value [0] - [4]
2024-07-17 21:53:56 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1577946158
2024-07-17 21:53:56 - Extracted JDBC value [2] - [1234]
2024-07-17 21:53:56 - Extracted JDBC value [3] - [null]
2024-07-17 21:53:56 - Extracted JDBC value [4] - [1234]
2024-07-17 21:53:56 - Extracted JDBC value [5] - [1234]
2024-07-17 21:53:56 - Extracted JDBC value [6] - [1234]
2024-07-17 21:53:56 - Extracted JDBC value [7] - [null]
2024-07-17 21:53:56 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 21:53:56 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1577946158
2024-07-17 21:53:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@79ceba56
2024-07-17 21:53:56 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 21:53:56 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 21:53:56 - Writing [com.example.taskmanagement.dto.UserDTO@5fda193f]
2024-07-17 21:53:56 - Completed 200 OK
2024-07-17 21:53:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:07:22 - Securing GET /api/tasks
2024-07-17 22:07:22 - Secured GET /api/tasks
2024-07-17 22:07:22 - GET "/api/tasks", parameters={}
2024-07-17 22:07:22 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:07:22 - Created new SQL alias : t1_0
2024-07-17 22:07:22 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:07:22 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7654ca8d] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:07:22 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@69884afd
2024-07-17 22:07:22 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:07:22 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:07:22 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:07:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:07:22 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@10255801 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@872749755 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:07:22 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:07:22 - Extracted JDBC value [0] - [1]
2024-07-17 22:07:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:07:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1438256991
2024-07-17 22:07:22 - Extracted JDBC value [7] - [1]
2024-07-17 22:07:22 - Extracted JDBC value [1] - [Work]
2024-07-17 22:07:22 - Extracted JDBC value [2] - [null]
2024-07-17 22:07:22 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:07:22 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:07:22 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:07:22 - Extracted JDBC value [6] - [null]
2024-07-17 22:07:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:07:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18b1c88b
2024-07-17 22:07:22 - Extracted JDBC value [0] - [3]
2024-07-17 22:07:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 3
2024-07-17 22:07:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#3] : 1259583145
2024-07-17 22:07:22 - Extracted JDBC value [7] - [4]
2024-07-17 22:07:22 - Extracted JDBC value [1] - [1234]
2024-07-17 22:07:22 - Extracted JDBC value [2] - [null]
2024-07-17 22:07:22 - Extracted JDBC value [3] - [1234]
2024-07-17 22:07:22 - Extracted JDBC value [4] - [1234]
2024-07-17 22:07:22 - Extracted JDBC value [5] - [1234]
2024-07-17 22:07:22 - Extracted JDBC value [6] - [null]
2024-07-17 22:07:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#3
2024-07-17 22:07:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@18b1c88b
2024-07-17 22:07:22 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:07:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:07:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1967967955 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1334714855 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:07:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:07:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:07:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:07:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1843493449
2024-07-17 22:07:22 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:07:22 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:07:22 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:07:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:07:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35f93bbd
2024-07-17 22:07:22 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:07:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:07:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@725357537 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1268510847 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:07:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:07:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:07:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:07:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2040440122
2024-07-17 22:07:22 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:07:22 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:07:22 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:07:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:07:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@428d89a0
2024-07-17 22:07:22 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:07:22 - Writing [[com.example.taskmanagement.dto.TaskDTO@487221d5, com.example.taskmanagement.dto.TaskDTO@441e90fb]]
2024-07-17 22:07:22 - Completed 200 OK
2024-07-17 22:07:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:08:03 - Securing GET /api/users/4
2024-07-17 22:08:03 - Secured GET /api/users/4
2024-07-17 22:08:03 - GET "/api/users/4", parameters={}
2024-07-17 22:08:03 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:08:03 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:08:03 - begin
2024-07-17 22:08:03 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:03 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@295738362 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1375967413 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:03 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:03 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:08:03 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:03 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1498283584
2024-07-17 22:08:03 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:08:03 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:08:03 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:08:03 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:08:03 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c79d155
2024-07-17 22:08:03 - committing
2024-07-17 22:08:03 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:03 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@683591996 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@391902644 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@889879923 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:08:03 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:08:03 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:03 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:03 - Extracted JDBC value [1] - [3]
2024-07-17 22:08:03 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 22:08:03 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 30595980
2024-07-17 22:08:03 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:03 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@398791660
2024-07-17 22:08:03 - Extracted JDBC value [2] - [1234]
2024-07-17 22:08:03 - Extracted JDBC value [3] - [null]
2024-07-17 22:08:03 - Extracted JDBC value [4] - [1234]
2024-07-17 22:08:03 - Extracted JDBC value [5] - [1234]
2024-07-17 22:08:03 - Extracted JDBC value [6] - [1234]
2024-07-17 22:08:03 - Extracted JDBC value [7] - [null]
2024-07-17 22:08:03 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 22:08:03 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@398791660
2024-07-17 22:08:03 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@67d5cf20
2024-07-17 22:08:03 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:08:03 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:08:03 - Writing [com.example.taskmanagement.dto.UserDTO@6092096d]
2024-07-17 22:08:03 - Completed 200 OK
2024-07-17 22:08:03 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:08:03 - Securing GET /api/users/4
2024-07-17 22:08:03 - Secured GET /api/users/4
2024-07-17 22:08:03 - GET "/api/users/4", parameters={}
2024-07-17 22:08:03 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:08:03 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:08:03 - begin
2024-07-17 22:08:03 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:03 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1485431306 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@78879211 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:03 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:03 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:08:03 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:03 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1899315031
2024-07-17 22:08:03 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:08:03 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:08:03 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:08:03 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:08:03 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@e502a11
2024-07-17 22:08:03 - committing
2024-07-17 22:08:03 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:03 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1753470841 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@223722870 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@47849071 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:08:03 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:08:03 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:03 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:03 - Extracted JDBC value [1] - [3]
2024-07-17 22:08:03 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 22:08:03 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1078398090
2024-07-17 22:08:03 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:03 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1775344731
2024-07-17 22:08:03 - Extracted JDBC value [2] - [1234]
2024-07-17 22:08:03 - Extracted JDBC value [3] - [null]
2024-07-17 22:08:03 - Extracted JDBC value [4] - [1234]
2024-07-17 22:08:03 - Extracted JDBC value [5] - [1234]
2024-07-17 22:08:03 - Extracted JDBC value [6] - [1234]
2024-07-17 22:08:03 - Extracted JDBC value [7] - [null]
2024-07-17 22:08:03 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 22:08:03 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1775344731
2024-07-17 22:08:03 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@123c5b8b
2024-07-17 22:08:03 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:08:03 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:08:03 - Writing [com.example.taskmanagement.dto.UserDTO@6d03d596]
2024-07-17 22:08:03 - Completed 200 OK
2024-07-17 22:08:03 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:08:06 - Securing GET /api/users/4
2024-07-17 22:08:06 - Secured GET /api/users/4
2024-07-17 22:08:06 - GET "/api/users/4", parameters={}
2024-07-17 22:08:06 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:08:06 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:08:06 - begin
2024-07-17 22:08:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:06 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1796382798 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1345352478 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:06 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:06 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:08:06 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:06 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 558499971
2024-07-17 22:08:06 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:08:06 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:08:06 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:08:06 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:08:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@44d5ee6a
2024-07-17 22:08:06 - committing
2024-07-17 22:08:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:06 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1290325923 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@932958598 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1557581729 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:08:06 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:08:06 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:06 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:06 - Extracted JDBC value [1] - [3]
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1008178367
2024-07-17 22:08:06 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:06 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1915828023
2024-07-17 22:08:06 - Extracted JDBC value [2] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [3] - [null]
2024-07-17 22:08:06 - Extracted JDBC value [4] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [5] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [6] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [7] - [null]
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 22:08:06 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1915828023
2024-07-17 22:08:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@56d6ff5b
2024-07-17 22:08:06 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:08:06 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:08:06 - Writing [com.example.taskmanagement.dto.UserDTO@26c77217]
2024-07-17 22:08:06 - Completed 200 OK
2024-07-17 22:08:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:08:06 - Securing GET /api/users/4
2024-07-17 22:08:06 - Secured GET /api/users/4
2024-07-17 22:08:06 - GET "/api/users/4", parameters={}
2024-07-17 22:08:06 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:08:06 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:08:06 - begin
2024-07-17 22:08:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:06 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1803026935 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@503099124 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:06 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:06 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:08:06 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:06 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1277276526
2024-07-17 22:08:06 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:08:06 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:08:06 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:08:06 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:08:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@76273965
2024-07-17 22:08:06 - committing
2024-07-17 22:08:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:06 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@992160659 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@515681098 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1361008105 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:08:06 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:08:06 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:06 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:06 - Extracted JDBC value [1] - [3]
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 819220114
2024-07-17 22:08:06 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:06 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@877800720
2024-07-17 22:08:06 - Extracted JDBC value [2] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [3] - [null]
2024-07-17 22:08:06 - Extracted JDBC value [4] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [5] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [6] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [7] - [null]
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 22:08:06 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@877800720
2024-07-17 22:08:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@1bcfe57c
2024-07-17 22:08:06 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:08:06 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:08:06 - Writing [com.example.taskmanagement.dto.UserDTO@45649cb9]
2024-07-17 22:08:06 - Completed 200 OK
2024-07-17 22:08:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:08:06 - Securing GET /api/users/4
2024-07-17 22:08:06 - Secured GET /api/users/4
2024-07-17 22:08:06 - GET "/api/users/4", parameters={}
2024-07-17 22:08:06 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:08:06 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:08:06 - begin
2024-07-17 22:08:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:06 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1063877117 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@880088253 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:06 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:06 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:08:06 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:06 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 264683864
2024-07-17 22:08:06 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:08:06 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:08:06 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:08:06 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:08:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@392391a
2024-07-17 22:08:06 - committing
2024-07-17 22:08:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:06 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1726347468 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@583855365 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@813976239 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:08:06 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:08:06 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:06 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:06 - Extracted JDBC value [1] - [3]
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 1647475319
2024-07-17 22:08:06 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:06 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@319487201
2024-07-17 22:08:06 - Extracted JDBC value [2] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [3] - [null]
2024-07-17 22:08:06 - Extracted JDBC value [4] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [5] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [6] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [7] - [null]
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 22:08:06 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@319487201
2024-07-17 22:08:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@707195ac
2024-07-17 22:08:06 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:08:06 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:08:06 - Writing [com.example.taskmanagement.dto.UserDTO@1d23cf58]
2024-07-17 22:08:06 - Completed 200 OK
2024-07-17 22:08:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:08:06 - Securing GET /api/users/4
2024-07-17 22:08:06 - Secured GET /api/users/4
2024-07-17 22:08:06 - GET "/api/users/4", parameters={}
2024-07-17 22:08:06 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:08:06 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:08:06 - begin
2024-07-17 22:08:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:06 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1599568131 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1926544373 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:06 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:06 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:08:06 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:06 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 185929499
2024-07-17 22:08:06 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:08:06 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:08:06 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:08:06 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:08:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70cb0f8b
2024-07-17 22:08:06 - committing
2024-07-17 22:08:06 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:06 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1259823261 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1610541726 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@2002850237 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:08:06 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:08:06 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:06 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:06 - Extracted JDBC value [1] - [3]
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 3
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#3] : 155573889
2024-07-17 22:08:06 - Extracted JDBC value [0] - [4]
2024-07-17 22:08:06 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1548289695
2024-07-17 22:08:06 - Extracted JDBC value [2] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [3] - [null]
2024-07-17 22:08:06 - Extracted JDBC value [4] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [5] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [6] - [1234]
2024-07-17 22:08:06 - Extracted JDBC value [7] - [null]
2024-07-17 22:08:06 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#3
2024-07-17 22:08:06 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1548289695
2024-07-17 22:08:06 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@7656daed
2024-07-17 22:08:06 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:08:06 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:08:06 - Writing [com.example.taskmanagement.dto.UserDTO@3dc6d309]
2024-07-17 22:08:06 - Completed 200 OK
2024-07-17 22:08:06 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:08:08 - Securing GET /api/tasks
2024-07-17 22:08:08 - Secured GET /api/tasks
2024-07-17 22:08:08 - GET "/api/tasks", parameters={}
2024-07-17 22:08:08 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:08:08 - Created new SQL alias : t1_0
2024-07-17 22:08:08 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:08:08 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33757a6d] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:08:08 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@534a1498
2024-07-17 22:08:08 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:08:08 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:08:08 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:08:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:08:08 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@1065661212 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1742176679 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:08:08 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:08:08 - Extracted JDBC value [0] - [1]
2024-07-17 22:08:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:08:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 360714715
2024-07-17 22:08:08 - Extracted JDBC value [7] - [1]
2024-07-17 22:08:08 - Extracted JDBC value [1] - [Work]
2024-07-17 22:08:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:08:08 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:08:08 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:08:08 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:08:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:08:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:08:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e017075
2024-07-17 22:08:08 - Extracted JDBC value [0] - [3]
2024-07-17 22:08:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 3
2024-07-17 22:08:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#3] : 2023219374
2024-07-17 22:08:08 - Extracted JDBC value [7] - [4]
2024-07-17 22:08:08 - Extracted JDBC value [1] - [1234]
2024-07-17 22:08:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:08:08 - Extracted JDBC value [3] - [1234]
2024-07-17 22:08:08 - Extracted JDBC value [4] - [1234]
2024-07-17 22:08:08 - Extracted JDBC value [5] - [1234]
2024-07-17 22:08:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:08:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#3
2024-07-17 22:08:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4e017075
2024-07-17 22:08:08 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:08:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:08 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1355555343 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@353071803 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:08 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:08:08 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:08:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 435389515
2024-07-17 22:08:08 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:08:08 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:08:08 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:08:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:08:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@76cd24f6
2024-07-17 22:08:08 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:08:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:08 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@728234892 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1637209367 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:08 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:08:08 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1540597669
2024-07-17 22:08:08 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:08:08 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:08:08 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:08:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:08:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6f002bf9
2024-07-17 22:08:08 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:08:08 - Writing [[com.example.taskmanagement.dto.TaskDTO@28d379c, com.example.taskmanagement.dto.TaskDTO@19d237bc]]
2024-07-17 22:08:08 - Completed 200 OK
2024-07-17 22:08:08 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:08:08 - Securing GET /api/tasks
2024-07-17 22:08:08 - Secured GET /api/tasks
2024-07-17 22:08:08 - GET "/api/tasks", parameters={}
2024-07-17 22:08:08 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:08:08 - Created new SQL alias : t1_0
2024-07-17 22:08:08 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:08:08 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f97fa37] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:08:08 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@37823540
2024-07-17 22:08:08 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:08:08 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:08:08 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:08:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:08:08 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@235185696 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@10098222 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:08:08 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:08:08 - Extracted JDBC value [0] - [1]
2024-07-17 22:08:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:08:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1447524404
2024-07-17 22:08:08 - Extracted JDBC value [7] - [1]
2024-07-17 22:08:08 - Extracted JDBC value [1] - [Work]
2024-07-17 22:08:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:08:08 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:08:08 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:08:08 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:08:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:08:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:08:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@63c2fb4
2024-07-17 22:08:08 - Extracted JDBC value [0] - [3]
2024-07-17 22:08:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 3
2024-07-17 22:08:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#3] : 1720890233
2024-07-17 22:08:08 - Extracted JDBC value [7] - [4]
2024-07-17 22:08:08 - Extracted JDBC value [1] - [1234]
2024-07-17 22:08:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:08:08 - Extracted JDBC value [3] - [1234]
2024-07-17 22:08:08 - Extracted JDBC value [4] - [1234]
2024-07-17 22:08:08 - Extracted JDBC value [5] - [1234]
2024-07-17 22:08:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:08:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#3
2024-07-17 22:08:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@63c2fb4
2024-07-17 22:08:08 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:08:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:08 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@959590121 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1578428404 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:08 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:08:08 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:08:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 445753805
2024-07-17 22:08:08 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:08:08 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:08:08 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:08:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:08:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a857b4e
2024-07-17 22:08:08 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:08:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:08:08 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2072479602 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@101244056 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:08:08 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:08:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:08:08 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:08:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1086682541
2024-07-17 22:08:08 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:08:08 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:08:08 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:08:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:08:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@23cc6348
2024-07-17 22:08:08 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:08:08 - Writing [[com.example.taskmanagement.dto.TaskDTO@39f161d6, com.example.taskmanagement.dto.TaskDTO@75bd63cc]]
2024-07-17 22:08:08 - Completed 200 OK
2024-07-17 22:08:08 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:09:54 - Securing GET /api/tasks
2024-07-17 22:09:54 - Secured GET /api/tasks
2024-07-17 22:09:54 - GET "/api/tasks", parameters={}
2024-07-17 22:09:54 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:09:54 - Created new SQL alias : t1_0
2024-07-17 22:09:54 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:09:54 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@67159247] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:09:54 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29f76690
2024-07-17 22:09:54 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:09:54 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:09:54 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:09:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:09:54 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@99422520 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1140302408 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:09:54 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:09:54 - Extracted JDBC value [0] - [1]
2024-07-17 22:09:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:09:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 323865386
2024-07-17 22:09:54 - Extracted JDBC value [7] - [1]
2024-07-17 22:09:54 - Extracted JDBC value [1] - [Work]
2024-07-17 22:09:54 - Extracted JDBC value [2] - [null]
2024-07-17 22:09:54 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:09:54 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:09:54 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:09:54 - Extracted JDBC value [6] - [null]
2024-07-17 22:09:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:09:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6dd6cee9
2024-07-17 22:09:54 - Extracted JDBC value [0] - [3]
2024-07-17 22:09:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 3
2024-07-17 22:09:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#3] : 956762567
2024-07-17 22:09:54 - Extracted JDBC value [7] - [4]
2024-07-17 22:09:54 - Extracted JDBC value [1] - [1234]
2024-07-17 22:09:54 - Extracted JDBC value [2] - [null]
2024-07-17 22:09:54 - Extracted JDBC value [3] - [1234]
2024-07-17 22:09:54 - Extracted JDBC value [4] - [1234]
2024-07-17 22:09:54 - Extracted JDBC value [5] - [1234]
2024-07-17 22:09:54 - Extracted JDBC value [6] - [null]
2024-07-17 22:09:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#3
2024-07-17 22:09:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6dd6cee9
2024-07-17 22:09:54 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:09:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:09:54 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@436168934 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1116032182 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:09:54 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:09:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:09:54 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:09:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1921834443
2024-07-17 22:09:54 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:09:54 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:09:54 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:09:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:09:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3083dd3c
2024-07-17 22:09:54 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:09:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:09:54 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@100222059 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@968847707 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:09:54 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:09:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:09:54 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:09:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 881163282
2024-07-17 22:09:54 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:09:54 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:09:54 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:09:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:09:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@38cc419a
2024-07-17 22:09:54 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:09:54 - Writing [[com.example.taskmanagement.dto.TaskDTO@59f0e226, com.example.taskmanagement.dto.TaskDTO@38d04e0e]]
2024-07-17 22:09:54 - Completed 200 OK
2024-07-17 22:09:54 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:09:56 - Securing OPTIONS /api/tasks/3
2024-07-17 22:09:56 - Securing DELETE /api/tasks/3
2024-07-17 22:09:56 - Secured DELETE /api/tasks/3
2024-07-17 22:09:56 - DELETE "/api/tasks/3", parameters={}
2024-07-17 22:09:56 - Mapped to com.example.taskmanagement.controller.TaskController#deleteTask(Long)
2024-07-17 22:09:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:09:56 - begin
2024-07-17 22:09:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:09:56 - Initializer list:
	  com.example.taskmanagement.model.Task.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task.user)@1191865779 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.Task -> EntityResultInitializer(com.example.taskmanagement.model.Task)@1909780616 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))

2024-07-17 22:09:56 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.id=?
2024-07-17 22:09:56 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task): 3
2024-07-17 22:09:56 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task#3] : 1934835698
2024-07-17 22:09:56 - Extracted JDBC value [7] - [4]
2024-07-17 22:09:56 - Extracted JDBC value [1] - [1234]
2024-07-17 22:09:56 - Extracted JDBC value [2] - [null]
2024-07-17 22:09:56 - Extracted JDBC value [3] - [1234]
2024-07-17 22:09:56 - Extracted JDBC value [4] - [1234]
2024-07-17 22:09:56 - Extracted JDBC value [5] - [1234]
2024-07-17 22:09:56 - Extracted JDBC value [6] - [null]
2024-07-17 22:09:56 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task#3
2024-07-17 22:09:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2555c1a0
2024-07-17 22:09:56 - committing
2024-07-17 22:09:56 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:09:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:09:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@100926988 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@223846317 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:09:56 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:09:56 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:09:56 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:09:56 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 234804296
2024-07-17 22:09:56 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:09:56 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:09:56 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:09:56 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:09:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@49ed0fe8
2024-07-17 22:09:56 - begin
2024-07-17 22:09:56 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-17 22:09:56 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-17 22:09:56 - committing
2024-07-17 22:09:56 - Processing flush-time cascades
2024-07-17 22:09:56 - Dirty checking collections
2024-07-17 22:09:56 - Collection found: [com.example.taskmanagement.model.User.tasks#4], was: [com.example.taskmanagement.model.User.tasks#4] (uninitialized)
2024-07-17 22:09:56 - Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
2024-07-17 22:09:56 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-17 22:09:56 - Listing entities:
2024-07-17 22:09:56 - com.example.taskmanagement.model.User{password=$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa, id=4, email=ohchch001@gmail.com, tasks=<uninitialized>, username=ohchch001}
2024-07-17 22:09:56 - com.example.taskmanagement.model.Task{createdAt=null, description=1234, id=3, category=1234, priority=1234, title=1234, user=com.example.taskmanagement.model.User#4, updatedAt=null}
2024-07-17 22:09:56 - delete from task where id=?
2024-07-17 22:09:56 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:09:56 - Nothing to write: null body
2024-07-17 22:09:56 - Completed 204 NO_CONTENT
2024-07-17 22:09:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:09:56 - Securing GET /api/tasks
2024-07-17 22:09:56 - Secured GET /api/tasks
2024-07-17 22:09:56 - GET "/api/tasks", parameters={}
2024-07-17 22:09:56 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:09:56 - Created new SQL alias : t1_0
2024-07-17 22:09:56 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:09:56 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7077721a] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:09:56 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@2164756c
2024-07-17 22:09:56 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:09:56 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:09:56 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:09:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:09:56 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@333083058 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@208936066 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:09:56 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:09:56 - Extracted JDBC value [0] - [1]
2024-07-17 22:09:56 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:09:56 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 725340897
2024-07-17 22:09:56 - Extracted JDBC value [7] - [1]
2024-07-17 22:09:56 - Extracted JDBC value [1] - [Work]
2024-07-17 22:09:56 - Extracted JDBC value [2] - [null]
2024-07-17 22:09:56 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:09:56 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:09:56 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:09:56 - Extracted JDBC value [6] - [null]
2024-07-17 22:09:56 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:09:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7874b08
2024-07-17 22:09:56 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:09:56 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:09:56 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@183836001 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2142009860 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:09:56 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:09:56 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:09:56 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:09:56 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 459489630
2024-07-17 22:09:56 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:09:56 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:09:56 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:09:56 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:09:56 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3075144f
2024-07-17 22:09:56 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:09:56 - Writing [[com.example.taskmanagement.dto.TaskDTO@7269268a]]
2024-07-17 22:09:56 - Completed 200 OK
2024-07-17 22:09:56 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:14 - Securing OPTIONS /api/tasks?userId=4
2024-07-17 22:10:14 - Securing POST /api/tasks?userId=4
2024-07-17 22:10:14 - Secured POST /api/tasks?userId=4
2024-07-17 22:10:14 - POST "/api/tasks?userId=4", parameters={masked}
2024-07-17 22:10:14 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(TaskDTO, Long)
2024-07-17 22:10:14 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@23e488a5]
2024-07-17 22:10:14 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:10:14 - begin
2024-07-17 22:10:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1014696380 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1000268575 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:14 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:14 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 290176810
2024-07-17 22:10:14 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:14 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:14 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54bb89b8
2024-07-17 22:10:14 - committing
2024-07-17 22:10:14 - begin
2024-07-17 22:10:14 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-17 22:10:14 - Executing identity-insert immediately
2024-07-17 22:10:14 - insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 22:10:14 - Initializer list is empty
2024-07-17 22:10:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@25aa36f4
2024-07-17 22:10:14 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:14 - Extracted generated values [com.example.taskmanagement.model.Task]: [Ljava.lang.Object;@2a19e845
2024-07-17 22:10:14 - committing
2024-07-17 22:10:14 - Processing flush-time cascades
2024-07-17 22:10:14 - Dirty checking collections
2024-07-17 22:10:14 - Collection found: [com.example.taskmanagement.model.User.tasks#4], was: [com.example.taskmanagement.model.User.tasks#4] (uninitialized)
2024-07-17 22:10:14 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2024-07-17 22:10:14 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-17 22:10:14 - Listing entities:
2024-07-17 22:10:14 - com.example.taskmanagement.model.User{password=$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa, id=4, email=ohchch001@gmail.com, tasks=<uninitialized>, username=ohchch001}
2024-07-17 22:10:14 - com.example.taskmanagement.model.Task{createdAt=null, description=1234, id=4, category=1234, priority=1234, title=1234, user=com.example.taskmanagement.model.User#4, updatedAt=null}
2024-07-17 22:10:14 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:14 - Writing [com.example.taskmanagement.dto.TaskDTO@5b9b0aae]
2024-07-17 22:10:14 - Completed 200 OK
2024-07-17 22:10:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:14 - Securing GET /api/tasks
2024-07-17 22:10:14 - Secured GET /api/tasks
2024-07-17 22:10:14 - GET "/api/tasks", parameters={}
2024-07-17 22:10:14 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:10:14 - Created new SQL alias : t1_0
2024-07-17 22:10:14 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:10:14 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7283797c] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:10:14 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7763889c
2024-07-17 22:10:14 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:10:14 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:10:14 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:10:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:10:14 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@296263679 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1153747130 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:10:14 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:10:14 - Extracted JDBC value [0] - [1]
2024-07-17 22:10:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:10:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 606458743
2024-07-17 22:10:14 - Extracted JDBC value [7] - [1]
2024-07-17 22:10:14 - Extracted JDBC value [1] - [Work]
2024-07-17 22:10:14 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:14 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:10:14 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:10:14 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:10:14 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:10:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46c65e51
2024-07-17 22:10:14 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:10:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1135084647
2024-07-17 22:10:14 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:14 - Extracted JDBC value [1] - [1234]
2024-07-17 22:10:14 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:14 - Extracted JDBC value [3] - [1234]
2024-07-17 22:10:14 - Extracted JDBC value [4] - [1234]
2024-07-17 22:10:14 - Extracted JDBC value [5] - [1234]
2024-07-17 22:10:14 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:10:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@46c65e51
2024-07-17 22:10:14 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:10:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@127640789 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1935365793 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:14 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:10:14 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:10:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1559161967
2024-07-17 22:10:14 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:10:14 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:10:14 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:10:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:10:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ae9014e
2024-07-17 22:10:14 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:10:14 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:14 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2103547554 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1120872236 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:14 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:14 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:14 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:14 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 198837410
2024-07-17 22:10:14 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:14 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:14 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:14 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:14 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5566cb17
2024-07-17 22:10:14 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:14 - Writing [[com.example.taskmanagement.dto.TaskDTO@ef3106f, com.example.taskmanagement.dto.TaskDTO@3cc1737]]
2024-07-17 22:10:14 - Completed 200 OK
2024-07-17 22:10:14 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:22 - Securing POST /api/tasks?userId=4
2024-07-17 22:10:22 - Secured POST /api/tasks?userId=4
2024-07-17 22:10:22 - POST "/api/tasks?userId=4", parameters={masked}
2024-07-17 22:10:22 - Mapped to com.example.taskmanagement.controller.TaskController#createTask(TaskDTO, Long)
2024-07-17 22:10:22 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@35ab8810]
2024-07-17 22:10:22 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:10:22 - begin
2024-07-17 22:10:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2011845587 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1160209193 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 399084146
2024-07-17 22:10:22 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:22 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:22 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64440b21
2024-07-17 22:10:22 - committing
2024-07-17 22:10:22 - begin
2024-07-17 22:10:22 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-17 22:10:22 - Executing identity-insert immediately
2024-07-17 22:10:22 - insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 22:10:22 - Initializer list is empty
2024-07-17 22:10:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.basic.BasicResultAssembler@9933cd0
2024-07-17 22:10:22 - Extracted JDBC value [0] - [5]
2024-07-17 22:10:22 - Extracted generated values [com.example.taskmanagement.model.Task]: [Ljava.lang.Object;@2d390554
2024-07-17 22:10:22 - committing
2024-07-17 22:10:22 - Processing flush-time cascades
2024-07-17 22:10:22 - Dirty checking collections
2024-07-17 22:10:22 - Collection found: [com.example.taskmanagement.model.User.tasks#4], was: [com.example.taskmanagement.model.User.tasks#4] (uninitialized)
2024-07-17 22:10:22 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2024-07-17 22:10:22 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-17 22:10:22 - Listing entities:
2024-07-17 22:10:22 - com.example.taskmanagement.model.User{password=$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa, id=4, email=ohchch001@gmail.com, tasks=<uninitialized>, username=ohchch001}
2024-07-17 22:10:22 - com.example.taskmanagement.model.Task{createdAt=null, description=aaaa, id=5, category=aaaa, priority=aaaa, title=aaaa, user=com.example.taskmanagement.model.User#4, updatedAt=null}
2024-07-17 22:10:22 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:22 - Writing [com.example.taskmanagement.dto.TaskDTO@664459a5]
2024-07-17 22:10:22 - Completed 200 OK
2024-07-17 22:10:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:22 - Securing GET /api/tasks
2024-07-17 22:10:22 - Secured GET /api/tasks
2024-07-17 22:10:22 - GET "/api/tasks", parameters={}
2024-07-17 22:10:22 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:10:22 - Created new SQL alias : t1_0
2024-07-17 22:10:22 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:10:22 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8ca0008] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:10:22 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3c1230ea
2024-07-17 22:10:22 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:10:22 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:10:22 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:10:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:10:22 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@514774502 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@579465282 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:10:22 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:10:22 - Extracted JDBC value [0] - [1]
2024-07-17 22:10:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:10:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 274135764
2024-07-17 22:10:22 - Extracted JDBC value [7] - [1]
2024-07-17 22:10:22 - Extracted JDBC value [1] - [Work]
2024-07-17 22:10:22 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:22 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:10:22 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:10:22 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:10:22 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:10:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d30037c
2024-07-17 22:10:22 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:10:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1551422247
2024-07-17 22:10:22 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:22 - Extracted JDBC value [1] - [1234]
2024-07-17 22:10:22 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:22 - Extracted JDBC value [3] - [1234]
2024-07-17 22:10:22 - Extracted JDBC value [4] - [1234]
2024-07-17 22:10:22 - Extracted JDBC value [5] - [1234]
2024-07-17 22:10:22 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:10:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d30037c
2024-07-17 22:10:22 - Extracted JDBC value [0] - [5]
2024-07-17 22:10:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:10:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1556736121
2024-07-17 22:10:22 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:22 - Extracted JDBC value [1] - [aaaa]
2024-07-17 22:10:22 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:22 - Extracted JDBC value [3] - [aaaa]
2024-07-17 22:10:22 - Extracted JDBC value [4] - [aaaa]
2024-07-17 22:10:22 - Extracted JDBC value [5] - [aaaa]
2024-07-17 22:10:22 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:10:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d30037c
2024-07-17 22:10:22 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:10:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@104398492 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@482604183 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:10:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:10:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1157128870
2024-07-17 22:10:22 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:10:22 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:10:22 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:10:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:10:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1af114aa
2024-07-17 22:10:22 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:10:22 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:22 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@901951423 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@284486564 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:22 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:22 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:22 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:22 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1355248025
2024-07-17 22:10:22 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:22 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:22 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:22 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:22 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72b42418
2024-07-17 22:10:22 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:22 - Writing [[com.example.taskmanagement.dto.TaskDTO@2d43e41f, com.example.taskmanagement.dto.TaskDTO@27a0e30, co (truncated)...]
2024-07-17 22:10:22 - Completed 200 OK
2024-07-17 22:10:22 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:33 - Securing OPTIONS /api/tasks/5
2024-07-17 22:10:33 - Securing PUT /api/tasks/5
2024-07-17 22:10:33 - Secured PUT /api/tasks/5
2024-07-17 22:10:33 - PUT "/api/tasks/5", parameters={}
2024-07-17 22:10:33 - Mapped to com.example.taskmanagement.controller.TaskController#updateTask(Long, TaskDTO)
2024-07-17 22:10:33 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.dto.TaskDTO@13e80b67]
2024-07-17 22:10:33 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:10:33 - begin
2024-07-17 22:10:33 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:33 - Initializer list:
	  com.example.taskmanagement.model.Task.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task.user)@558916597 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.Task -> EntityResultInitializer(com.example.taskmanagement.model.Task)@1005341734 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))

2024-07-17 22:10:33 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.id=?
2024-07-17 22:10:33 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task): 5
2024-07-17 22:10:33 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task#5] : 2007858284
2024-07-17 22:10:33 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:33 - Extracted JDBC value [1] - [aaaa]
2024-07-17 22:10:33 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:33 - Extracted JDBC value [3] - [aaaa]
2024-07-17 22:10:33 - Extracted JDBC value [4] - [aaaa]
2024-07-17 22:10:33 - Extracted JDBC value [5] - [aaaa]
2024-07-17 22:10:33 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:33 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task#5
2024-07-17 22:10:33 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2ef983c3
2024-07-17 22:10:33 - committing
2024-07-17 22:10:33 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:10:33 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:33 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2043340661 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1704507964 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:33 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:33 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:33 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:33 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2061778170
2024-07-17 22:10:33 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:33 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:33 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:33 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:33 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@33af0224
2024-07-17 22:10:33 - begin
2024-07-17 22:10:33 - committing
2024-07-17 22:10:33 - begin
2024-07-17 22:10:33 - jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2024-07-17 22:10:33 - committing
2024-07-17 22:10:33 - Processing flush-time cascades
2024-07-17 22:10:33 - Dirty checking collections
2024-07-17 22:10:33 - Collection found: [com.example.taskmanagement.model.User.tasks#4], was: [com.example.taskmanagement.model.User.tasks#4] (uninitialized)
2024-07-17 22:10:33 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2024-07-17 22:10:33 - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
2024-07-17 22:10:33 - Listing entities:
2024-07-17 22:10:33 - com.example.taskmanagement.model.User{password=$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa, id=4, email=ohchch001@gmail.com, tasks=<uninitialized>, username=ohchch001}
2024-07-17 22:10:33 - com.example.taskmanagement.model.Task{createdAt=null, description=555, id=5, category=555, priority=551, title=555, user=com.example.taskmanagement.model.User#4, updatedAt=null}
2024-07-17 22:10:33 - update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-17 22:10:33 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:33 - Writing [com.example.taskmanagement.dto.TaskDTO@1327df64]
2024-07-17 22:10:33 - Completed 200 OK
2024-07-17 22:10:33 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:33 - Securing GET /api/tasks
2024-07-17 22:10:33 - Secured GET /api/tasks
2024-07-17 22:10:33 - GET "/api/tasks", parameters={}
2024-07-17 22:10:33 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:10:33 - Created new SQL alias : t1_0
2024-07-17 22:10:33 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:10:33 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d9c1af3] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:10:33 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@1d932bbe
2024-07-17 22:10:33 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:10:33 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:10:33 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:10:33 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:10:33 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@436919054 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@955121535 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:10:33 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:10:33 - Extracted JDBC value [0] - [1]
2024-07-17 22:10:33 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:10:33 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1635787606
2024-07-17 22:10:33 - Extracted JDBC value [7] - [1]
2024-07-17 22:10:33 - Extracted JDBC value [1] - [Work]
2024-07-17 22:10:33 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:33 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:10:33 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:10:33 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:10:33 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:33 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:10:33 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36413e1e
2024-07-17 22:10:33 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:33 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:10:33 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1510912636
2024-07-17 22:10:33 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:33 - Extracted JDBC value [1] - [1234]
2024-07-17 22:10:33 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:33 - Extracted JDBC value [3] - [1234]
2024-07-17 22:10:33 - Extracted JDBC value [4] - [1234]
2024-07-17 22:10:33 - Extracted JDBC value [5] - [1234]
2024-07-17 22:10:33 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:33 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:10:33 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36413e1e
2024-07-17 22:10:33 - Extracted JDBC value [0] - [5]
2024-07-17 22:10:33 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:10:33 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 95748658
2024-07-17 22:10:33 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:33 - Extracted JDBC value [1] - [555]
2024-07-17 22:10:33 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:33 - Extracted JDBC value [3] - [555]
2024-07-17 22:10:33 - Extracted JDBC value [4] - [551]
2024-07-17 22:10:33 - Extracted JDBC value [5] - [555]
2024-07-17 22:10:33 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:33 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:10:33 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36413e1e
2024-07-17 22:10:33 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:10:33 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:33 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1514240056 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1970519134 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:33 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:33 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:10:33 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:10:33 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 337852707
2024-07-17 22:10:33 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:10:33 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:10:33 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:10:33 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:10:33 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@708ea56a
2024-07-17 22:10:33 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:10:33 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:33 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@671493945 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@54696898 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:33 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:33 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:33 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:33 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 902556669
2024-07-17 22:10:33 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:33 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:33 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:33 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:33 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@32eb2613
2024-07-17 22:10:33 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:33 - Writing [[com.example.taskmanagement.dto.TaskDTO@1fcae7e6, com.example.taskmanagement.dto.TaskDTO@3a7ff680, c (truncated)...]
2024-07-17 22:10:33 - Completed 200 OK
2024-07-17 22:10:33 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:49 - Securing GET /api/users/4
2024-07-17 22:10:49 - Secured GET /api/users/4
2024-07-17 22:10:49 - GET "/api/users/4", parameters={}
2024-07-17 22:10:49 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:10:49 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:10:49 - begin
2024-07-17 22:10:49 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:49 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1675818383 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1581217386 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:49 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:49 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:49 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:49 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1769189105
2024-07-17 22:10:49 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:49 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:49 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:49 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:49 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@967c477
2024-07-17 22:10:49 - committing
2024-07-17 22:10:49 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:49 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@729475481 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@930114532 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@214273 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:10:49 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:10:49 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:49 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:49 - Extracted JDBC value [1] - [4]
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 1096027800
2024-07-17 22:10:49 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:49 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1289361811
2024-07-17 22:10:49 - Extracted JDBC value [2] - [1234]
2024-07-17 22:10:49 - Extracted JDBC value [3] - [null]
2024-07-17 22:10:49 - Extracted JDBC value [4] - [1234]
2024-07-17 22:10:49 - Extracted JDBC value [5] - [1234]
2024-07-17 22:10:49 - Extracted JDBC value [6] - [1234]
2024-07-17 22:10:49 - Extracted JDBC value [7] - [null]
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:10:49 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1289361811
2024-07-17 22:10:49 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5be560fe
2024-07-17 22:10:49 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:49 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:49 - Extracted JDBC value [1] - [5]
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 2035461318
2024-07-17 22:10:49 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:49 - Extracted JDBC value [2] - [555]
2024-07-17 22:10:49 - Extracted JDBC value [3] - [null]
2024-07-17 22:10:49 - Extracted JDBC value [4] - [555]
2024-07-17 22:10:49 - Extracted JDBC value [5] - [551]
2024-07-17 22:10:49 - Extracted JDBC value [6] - [555]
2024-07-17 22:10:49 - Extracted JDBC value [7] - [null]
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:10:49 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1289361811
2024-07-17 22:10:49 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5be560fe
2024-07-17 22:10:49 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:10:49 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:49 - Writing [com.example.taskmanagement.dto.UserDTO@abc7860]
2024-07-17 22:10:49 - Completed 200 OK
2024-07-17 22:10:49 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:49 - Securing GET /api/users/4
2024-07-17 22:10:49 - Secured GET /api/users/4
2024-07-17 22:10:49 - GET "/api/users/4", parameters={}
2024-07-17 22:10:49 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:10:49 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:10:49 - begin
2024-07-17 22:10:49 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:49 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1851104447 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1989818966 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:49 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:49 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:49 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:49 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1936922003
2024-07-17 22:10:49 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:49 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:49 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:49 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:49 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61a07757
2024-07-17 22:10:49 - committing
2024-07-17 22:10:49 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:49 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@125210004 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1695439074 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@359360377 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:10:49 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:10:49 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:49 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:49 - Extracted JDBC value [1] - [4]
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 147490267
2024-07-17 22:10:49 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:49 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1411176737
2024-07-17 22:10:49 - Extracted JDBC value [2] - [1234]
2024-07-17 22:10:49 - Extracted JDBC value [3] - [null]
2024-07-17 22:10:49 - Extracted JDBC value [4] - [1234]
2024-07-17 22:10:49 - Extracted JDBC value [5] - [1234]
2024-07-17 22:10:49 - Extracted JDBC value [6] - [1234]
2024-07-17 22:10:49 - Extracted JDBC value [7] - [null]
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:10:49 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1411176737
2024-07-17 22:10:49 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@46d46b14
2024-07-17 22:10:49 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:49 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:49 - Extracted JDBC value [1] - [5]
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 58797758
2024-07-17 22:10:49 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:49 - Extracted JDBC value [2] - [555]
2024-07-17 22:10:49 - Extracted JDBC value [3] - [null]
2024-07-17 22:10:49 - Extracted JDBC value [4] - [555]
2024-07-17 22:10:49 - Extracted JDBC value [5] - [551]
2024-07-17 22:10:49 - Extracted JDBC value [6] - [555]
2024-07-17 22:10:49 - Extracted JDBC value [7] - [null]
2024-07-17 22:10:49 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:10:49 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1411176737
2024-07-17 22:10:49 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@46d46b14
2024-07-17 22:10:49 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:10:49 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:49 - Writing [com.example.taskmanagement.dto.UserDTO@f39d6d4]
2024-07-17 22:10:49 - Completed 200 OK
2024-07-17 22:10:49 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:54 - Securing GET /api/tasks
2024-07-17 22:10:54 - Secured GET /api/tasks
2024-07-17 22:10:54 - GET "/api/tasks", parameters={}
2024-07-17 22:10:54 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:10:54 - Created new SQL alias : t1_0
2024-07-17 22:10:54 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:10:54 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@68ba6e01] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:10:54 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6183e5a5
2024-07-17 22:10:54 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:10:54 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:10:54 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:10:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:10:54 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@355490645 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@87316826 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:10:54 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:10:54 - Extracted JDBC value [0] - [1]
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1125647893
2024-07-17 22:10:54 - Extracted JDBC value [7] - [1]
2024-07-17 22:10:54 - Extracted JDBC value [1] - [Work]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:10:54 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:10:54 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:10:54 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64c179a5
2024-07-17 22:10:54 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1975099803
2024-07-17 22:10:54 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:54 - Extracted JDBC value [1] - [1234]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [1234]
2024-07-17 22:10:54 - Extracted JDBC value [4] - [1234]
2024-07-17 22:10:54 - Extracted JDBC value [5] - [1234]
2024-07-17 22:10:54 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64c179a5
2024-07-17 22:10:54 - Extracted JDBC value [0] - [5]
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 160013934
2024-07-17 22:10:54 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:54 - Extracted JDBC value [1] - [555]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [555]
2024-07-17 22:10:54 - Extracted JDBC value [4] - [551]
2024-07-17 22:10:54 - Extracted JDBC value [5] - [555]
2024-07-17 22:10:54 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64c179a5
2024-07-17 22:10:54 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:10:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:54 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1698780500 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1573688606 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:54 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:10:54 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1837126405
2024-07-17 22:10:54 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@54ff4540
2024-07-17 22:10:54 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:10:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:54 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@457417902 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@635317047 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:54 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:54 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1609105417
2024-07-17 22:10:54 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2dc5a059
2024-07-17 22:10:54 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:54 - Writing [[com.example.taskmanagement.dto.TaskDTO@2e6ce9f9, com.example.taskmanagement.dto.TaskDTO@757733eb, c (truncated)...]
2024-07-17 22:10:54 - Completed 200 OK
2024-07-17 22:10:54 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:10:54 - Securing GET /api/tasks
2024-07-17 22:10:54 - Secured GET /api/tasks
2024-07-17 22:10:54 - GET "/api/tasks", parameters={}
2024-07-17 22:10:54 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:10:54 - Created new SQL alias : t1_0
2024-07-17 22:10:54 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:10:54 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3cb5d9c] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:10:54 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@ccce4f4
2024-07-17 22:10:54 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:10:54 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:10:54 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:10:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:10:54 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@1803961985 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1808902321 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:10:54 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:10:54 - Extracted JDBC value [0] - [1]
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1547496346
2024-07-17 22:10:54 - Extracted JDBC value [7] - [1]
2024-07-17 22:10:54 - Extracted JDBC value [1] - [Work]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:10:54 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:10:54 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:10:54 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a4e548c
2024-07-17 22:10:54 - Extracted JDBC value [0] - [4]
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1901427776
2024-07-17 22:10:54 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:54 - Extracted JDBC value [1] - [1234]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [1234]
2024-07-17 22:10:54 - Extracted JDBC value [4] - [1234]
2024-07-17 22:10:54 - Extracted JDBC value [5] - [1234]
2024-07-17 22:10:54 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a4e548c
2024-07-17 22:10:54 - Extracted JDBC value [0] - [5]
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1283483114
2024-07-17 22:10:54 - Extracted JDBC value [7] - [4]
2024-07-17 22:10:54 - Extracted JDBC value [1] - [555]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [null]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [555]
2024-07-17 22:10:54 - Extracted JDBC value [4] - [551]
2024-07-17 22:10:54 - Extracted JDBC value [5] - [555]
2024-07-17 22:10:54 - Extracted JDBC value [6] - [null]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3a4e548c
2024-07-17 22:10:54 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:10:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:54 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1064957832 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1704213339 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:54 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:10:54 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1955254500
2024-07-17 22:10:54 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f9265e6
2024-07-17 22:10:54 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:10:54 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:10:54 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1684662358 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1464131869 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:10:54 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:10:54 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:10:54 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:10:54 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 638159316
2024-07-17 22:10:54 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:10:54 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:10:54 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:10:54 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:10:54 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5a9beb2
2024-07-17 22:10:54 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:10:54 - Writing [[com.example.taskmanagement.dto.TaskDTO@2d94a9d5, com.example.taskmanagement.dto.TaskDTO@551999a6, c (truncated)...]
2024-07-17 22:10:54 - Completed 200 OK
2024-07-17 22:10:54 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:11:34 - Securing GET /api/users/4
2024-07-17 22:11:34 - Secured GET /api/users/4
2024-07-17 22:11:34 - GET "/api/users/4", parameters={}
2024-07-17 22:11:34 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:11:34 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:11:34 - begin
2024-07-17 22:11:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:11:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@745645638 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1204614707 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:11:34 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:11:34 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:11:34 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:11:34 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 405382528
2024-07-17 22:11:34 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:11:34 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:11:34 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:11:34 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:11:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@56c22006
2024-07-17 22:11:34 - committing
2024-07-17 22:11:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:11:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1164143464 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1251064224 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1742469560 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:11:34 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:11:34 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:34 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:11:34 - Extracted JDBC value [1] - [4]
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 171323147
2024-07-17 22:11:34 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:34 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@947168728
2024-07-17 22:11:34 - Extracted JDBC value [2] - [1234]
2024-07-17 22:11:34 - Extracted JDBC value [3] - [null]
2024-07-17 22:11:34 - Extracted JDBC value [4] - [1234]
2024-07-17 22:11:34 - Extracted JDBC value [5] - [1234]
2024-07-17 22:11:34 - Extracted JDBC value [6] - [1234]
2024-07-17 22:11:34 - Extracted JDBC value [7] - [null]
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:11:34 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@947168728
2024-07-17 22:11:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@329811cc
2024-07-17 22:11:34 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:34 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:11:34 - Extracted JDBC value [1] - [5]
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 2131419832
2024-07-17 22:11:34 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:34 - Extracted JDBC value [2] - [555]
2024-07-17 22:11:34 - Extracted JDBC value [3] - [null]
2024-07-17 22:11:34 - Extracted JDBC value [4] - [555]
2024-07-17 22:11:34 - Extracted JDBC value [5] - [551]
2024-07-17 22:11:34 - Extracted JDBC value [6] - [555]
2024-07-17 22:11:34 - Extracted JDBC value [7] - [null]
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:11:34 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@947168728
2024-07-17 22:11:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@329811cc
2024-07-17 22:11:34 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:11:34 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:11:34 - Writing [com.example.taskmanagement.dto.UserDTO@56147498]
2024-07-17 22:11:34 - Completed 200 OK
2024-07-17 22:11:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:11:34 - Securing GET /api/users/4
2024-07-17 22:11:34 - Secured GET /api/users/4
2024-07-17 22:11:34 - GET "/api/users/4", parameters={}
2024-07-17 22:11:34 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:11:34 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:11:34 - begin
2024-07-17 22:11:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:11:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2139323723 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@443925578 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:11:34 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:11:34 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:11:34 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:11:34 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1084148956
2024-07-17 22:11:34 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:11:34 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:11:34 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:11:34 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:11:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@67b7c879
2024-07-17 22:11:34 - committing
2024-07-17 22:11:34 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:11:34 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1769192764 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1965714076 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@738693184 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:11:34 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:11:34 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:34 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:11:34 - Extracted JDBC value [1] - [4]
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 1244249787
2024-07-17 22:11:34 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:34 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1962743569
2024-07-17 22:11:34 - Extracted JDBC value [2] - [1234]
2024-07-17 22:11:34 - Extracted JDBC value [3] - [null]
2024-07-17 22:11:34 - Extracted JDBC value [4] - [1234]
2024-07-17 22:11:34 - Extracted JDBC value [5] - [1234]
2024-07-17 22:11:34 - Extracted JDBC value [6] - [1234]
2024-07-17 22:11:34 - Extracted JDBC value [7] - [null]
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:11:34 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1962743569
2024-07-17 22:11:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5a3cb22e
2024-07-17 22:11:34 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:34 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:11:34 - Extracted JDBC value [1] - [5]
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 1046325171
2024-07-17 22:11:34 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:34 - Extracted JDBC value [2] - [555]
2024-07-17 22:11:34 - Extracted JDBC value [3] - [null]
2024-07-17 22:11:34 - Extracted JDBC value [4] - [555]
2024-07-17 22:11:34 - Extracted JDBC value [5] - [551]
2024-07-17 22:11:34 - Extracted JDBC value [6] - [555]
2024-07-17 22:11:34 - Extracted JDBC value [7] - [null]
2024-07-17 22:11:34 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:11:34 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1962743569
2024-07-17 22:11:34 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@5a3cb22e
2024-07-17 22:11:34 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:11:34 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:11:34 - Writing [com.example.taskmanagement.dto.UserDTO@3389b155]
2024-07-17 22:11:34 - Completed 200 OK
2024-07-17 22:11:34 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:11:36 - Securing GET /api/tasks
2024-07-17 22:11:36 - Secured GET /api/tasks
2024-07-17 22:11:36 - GET "/api/tasks", parameters={}
2024-07-17 22:11:36 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:11:36 - Created new SQL alias : t1_0
2024-07-17 22:11:36 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:11:36 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@657d9d22] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:11:36 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6f7f1a36
2024-07-17 22:11:36 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:11:36 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:11:36 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:11:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:11:36 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@2074773463 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1330875734 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:11:36 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:11:36 - Extracted JDBC value [0] - [1]
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 425757670
2024-07-17 22:11:36 - Extracted JDBC value [7] - [1]
2024-07-17 22:11:36 - Extracted JDBC value [1] - [Work]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [null]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:11:36 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:11:36 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:11:36 - Extracted JDBC value [6] - [null]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a8a8ca1
2024-07-17 22:11:36 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 2023634662
2024-07-17 22:11:36 - Extracted JDBC value [7] - [4]
2024-07-17 22:11:36 - Extracted JDBC value [1] - [1234]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [null]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [1234]
2024-07-17 22:11:36 - Extracted JDBC value [4] - [1234]
2024-07-17 22:11:36 - Extracted JDBC value [5] - [1234]
2024-07-17 22:11:36 - Extracted JDBC value [6] - [null]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a8a8ca1
2024-07-17 22:11:36 - Extracted JDBC value [0] - [5]
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 396122798
2024-07-17 22:11:36 - Extracted JDBC value [7] - [4]
2024-07-17 22:11:36 - Extracted JDBC value [1] - [555]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [null]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [555]
2024-07-17 22:11:36 - Extracted JDBC value [4] - [551]
2024-07-17 22:11:36 - Extracted JDBC value [5] - [555]
2024-07-17 22:11:36 - Extracted JDBC value [6] - [null]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a8a8ca1
2024-07-17 22:11:36 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:11:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:11:36 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@349156978 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@493853451 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:11:36 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:11:36 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 2112138286
2024-07-17 22:11:36 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6bcf3515
2024-07-17 22:11:36 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:11:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:11:36 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@677346750 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@576583672 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:11:36 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:11:36 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 49815592
2024-07-17 22:11:36 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3fc65ca8
2024-07-17 22:11:36 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:11:36 - Writing [[com.example.taskmanagement.dto.TaskDTO@65d5b328, com.example.taskmanagement.dto.TaskDTO@15dfe01f, c (truncated)...]
2024-07-17 22:11:36 - Completed 200 OK
2024-07-17 22:11:36 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:11:36 - Securing GET /api/tasks
2024-07-17 22:11:36 - Secured GET /api/tasks
2024-07-17 22:11:36 - GET "/api/tasks", parameters={}
2024-07-17 22:11:36 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:11:36 - Created new SQL alias : t1_0
2024-07-17 22:11:36 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:11:36 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@29f121ba] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:11:36 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@14bd9442
2024-07-17 22:11:36 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:11:36 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:11:36 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:11:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:11:36 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@1639939530 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@938133691 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:11:36 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:11:36 - Extracted JDBC value [0] - [1]
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1406310485
2024-07-17 22:11:36 - Extracted JDBC value [7] - [1]
2024-07-17 22:11:36 - Extracted JDBC value [1] - [Work]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [null]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:11:36 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:11:36 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:11:36 - Extracted JDBC value [6] - [null]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@329c2d84
2024-07-17 22:11:36 - Extracted JDBC value [0] - [4]
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 320056929
2024-07-17 22:11:36 - Extracted JDBC value [7] - [4]
2024-07-17 22:11:36 - Extracted JDBC value [1] - [1234]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [null]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [1234]
2024-07-17 22:11:36 - Extracted JDBC value [4] - [1234]
2024-07-17 22:11:36 - Extracted JDBC value [5] - [1234]
2024-07-17 22:11:36 - Extracted JDBC value [6] - [null]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@329c2d84
2024-07-17 22:11:36 - Extracted JDBC value [0] - [5]
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 358661223
2024-07-17 22:11:36 - Extracted JDBC value [7] - [4]
2024-07-17 22:11:36 - Extracted JDBC value [1] - [555]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [null]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [555]
2024-07-17 22:11:36 - Extracted JDBC value [4] - [551]
2024-07-17 22:11:36 - Extracted JDBC value [5] - [555]
2024-07-17 22:11:36 - Extracted JDBC value [6] - [null]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@329c2d84
2024-07-17 22:11:36 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:11:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:11:36 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@18119025 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@268091284 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:11:36 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:11:36 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1404610205
2024-07-17 22:11:36 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b13f83c
2024-07-17 22:11:36 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:11:36 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:11:36 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@278981569 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1019419401 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:11:36 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:11:36 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:11:36 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:11:36 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 941597863
2024-07-17 22:11:36 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:11:36 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:11:36 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:11:36 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:11:36 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4a16f6b1
2024-07-17 22:11:36 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:11:36 - Writing [[com.example.taskmanagement.dto.TaskDTO@15e6b2d4, com.example.taskmanagement.dto.TaskDTO@e82549d, co (truncated)...]
2024-07-17 22:11:36 - Completed 200 OK
2024-07-17 22:11:36 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:12:59 - Securing GET /api/tasks
2024-07-17 22:12:59 - Secured GET /api/tasks
2024-07-17 22:12:59 - GET "/api/tasks", parameters={}
2024-07-17 22:12:59 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:12:59 - Created new SQL alias : t1_0
2024-07-17 22:12:59 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:12:59 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2455369b] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:12:59 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47a145ad
2024-07-17 22:12:59 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:12:59 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:12:59 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:12:59 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:12:59 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@171297 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1458241151 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:12:59 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:12:59 - Extracted JDBC value [0] - [1]
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 457607568
2024-07-17 22:12:59 - Extracted JDBC value [7] - [1]
2024-07-17 22:12:59 - Extracted JDBC value [1] - [Work]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [null]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:12:59 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:12:59 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:12:59 - Extracted JDBC value [6] - [null]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ade9581
2024-07-17 22:12:59 - Extracted JDBC value [0] - [4]
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1986694494
2024-07-17 22:12:59 - Extracted JDBC value [7] - [4]
2024-07-17 22:12:59 - Extracted JDBC value [1] - [1234]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [null]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [1234]
2024-07-17 22:12:59 - Extracted JDBC value [4] - [1234]
2024-07-17 22:12:59 - Extracted JDBC value [5] - [1234]
2024-07-17 22:12:59 - Extracted JDBC value [6] - [null]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ade9581
2024-07-17 22:12:59 - Extracted JDBC value [0] - [5]
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 916841006
2024-07-17 22:12:59 - Extracted JDBC value [7] - [4]
2024-07-17 22:12:59 - Extracted JDBC value [1] - [555]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [null]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [555]
2024-07-17 22:12:59 - Extracted JDBC value [4] - [551]
2024-07-17 22:12:59 - Extracted JDBC value [5] - [555]
2024-07-17 22:12:59 - Extracted JDBC value [6] - [null]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1ade9581
2024-07-17 22:12:59 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:12:59 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:12:59 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2006715215 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1438541983 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:12:59 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:12:59 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1172776688
2024-07-17 22:12:59 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35da8b44
2024-07-17 22:12:59 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:12:59 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:12:59 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@803885698 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@373985904 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:12:59 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:12:59 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1752786478
2024-07-17 22:12:59 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39df42
2024-07-17 22:12:59 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:12:59 - Writing [[com.example.taskmanagement.dto.TaskDTO@64ad7104, com.example.taskmanagement.dto.TaskDTO@5b72257a, c (truncated)...]
2024-07-17 22:12:59 - Completed 200 OK
2024-07-17 22:12:59 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:12:59 - Securing GET /api/tasks
2024-07-17 22:12:59 - Secured GET /api/tasks
2024-07-17 22:12:59 - GET "/api/tasks", parameters={}
2024-07-17 22:12:59 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:12:59 - Created new SQL alias : t1_0
2024-07-17 22:12:59 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:12:59 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2cf5a889] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:12:59 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@3ed0678
2024-07-17 22:12:59 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:12:59 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:12:59 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:12:59 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:12:59 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@109986220 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1413093016 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:12:59 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:12:59 - Extracted JDBC value [0] - [1]
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 383028055
2024-07-17 22:12:59 - Extracted JDBC value [7] - [1]
2024-07-17 22:12:59 - Extracted JDBC value [1] - [Work]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [null]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:12:59 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:12:59 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:12:59 - Extracted JDBC value [6] - [null]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@125ec1c3
2024-07-17 22:12:59 - Extracted JDBC value [0] - [4]
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 364437267
2024-07-17 22:12:59 - Extracted JDBC value [7] - [4]
2024-07-17 22:12:59 - Extracted JDBC value [1] - [1234]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [null]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [1234]
2024-07-17 22:12:59 - Extracted JDBC value [4] - [1234]
2024-07-17 22:12:59 - Extracted JDBC value [5] - [1234]
2024-07-17 22:12:59 - Extracted JDBC value [6] - [null]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@125ec1c3
2024-07-17 22:12:59 - Extracted JDBC value [0] - [5]
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1858897919
2024-07-17 22:12:59 - Extracted JDBC value [7] - [4]
2024-07-17 22:12:59 - Extracted JDBC value [1] - [555]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [null]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [555]
2024-07-17 22:12:59 - Extracted JDBC value [4] - [551]
2024-07-17 22:12:59 - Extracted JDBC value [5] - [555]
2024-07-17 22:12:59 - Extracted JDBC value [6] - [null]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@125ec1c3
2024-07-17 22:12:59 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:12:59 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:12:59 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@944027094 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1800910218 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:12:59 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:12:59 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 558771572
2024-07-17 22:12:59 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@677e108a
2024-07-17 22:12:59 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:12:59 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:12:59 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1172960090 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@735905378 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:12:59 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:12:59 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:12:59 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:12:59 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1097493015
2024-07-17 22:12:59 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:12:59 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:12:59 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:12:59 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:12:59 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3b8055f4
2024-07-17 22:12:59 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:12:59 - Writing [[com.example.taskmanagement.dto.TaskDTO@7b71ffb5, com.example.taskmanagement.dto.TaskDTO@455a1f7f, c (truncated)...]
2024-07-17 22:12:59 - Completed 200 OK
2024-07-17 22:12:59 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:01 - Securing GET /api/users/4
2024-07-17 22:13:01 - Secured GET /api/users/4
2024-07-17 22:13:01 - GET "/api/users/4", parameters={}
2024-07-17 22:13:01 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:13:01 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:13:01 - begin
2024-07-17 22:13:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:01 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1584754119 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@396322001 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:01 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:01 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:01 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:01 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1594307676
2024-07-17 22:13:01 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:01 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:01 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:01 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:01 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@37401fbc
2024-07-17 22:13:01 - committing
2024-07-17 22:13:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:01 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@821497982 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@282190467 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@660316890 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:13:01 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:13:01 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:01 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:01 - Extracted JDBC value [1] - [4]
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 1172642322
2024-07-17 22:13:01 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:01 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@869427841
2024-07-17 22:13:01 - Extracted JDBC value [2] - [1234]
2024-07-17 22:13:01 - Extracted JDBC value [3] - [null]
2024-07-17 22:13:01 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:01 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:01 - Extracted JDBC value [6] - [1234]
2024-07-17 22:13:01 - Extracted JDBC value [7] - [null]
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:13:01 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@869427841
2024-07-17 22:13:01 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@3f523d06
2024-07-17 22:13:01 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:01 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:01 - Extracted JDBC value [1] - [5]
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 1884888694
2024-07-17 22:13:01 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:01 - Extracted JDBC value [2] - [555]
2024-07-17 22:13:01 - Extracted JDBC value [3] - [null]
2024-07-17 22:13:01 - Extracted JDBC value [4] - [555]
2024-07-17 22:13:01 - Extracted JDBC value [5] - [551]
2024-07-17 22:13:01 - Extracted JDBC value [6] - [555]
2024-07-17 22:13:01 - Extracted JDBC value [7] - [null]
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:13:01 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@869427841
2024-07-17 22:13:01 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@3f523d06
2024-07-17 22:13:01 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:13:01 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:01 - Writing [com.example.taskmanagement.dto.UserDTO@28ea1360]
2024-07-17 22:13:01 - Completed 200 OK
2024-07-17 22:13:01 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:01 - Securing GET /api/users/4
2024-07-17 22:13:01 - Secured GET /api/users/4
2024-07-17 22:13:01 - GET "/api/users/4", parameters={}
2024-07-17 22:13:01 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:13:01 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:13:01 - begin
2024-07-17 22:13:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:01 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@348324544 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@479320972 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:01 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:01 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:01 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:01 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2071385133
2024-07-17 22:13:01 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:01 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:01 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:01 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:01 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@9bd697d
2024-07-17 22:13:01 - committing
2024-07-17 22:13:01 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:01 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1273993666 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1804459862 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@641113404)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@161064411 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:13:01 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:13:01 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:01 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:01 - Extracted JDBC value [1] - [4]
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 305494527
2024-07-17 22:13:01 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:01 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1764310388
2024-07-17 22:13:01 - Extracted JDBC value [2] - [1234]
2024-07-17 22:13:01 - Extracted JDBC value [3] - [null]
2024-07-17 22:13:01 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:01 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:01 - Extracted JDBC value [6] - [1234]
2024-07-17 22:13:01 - Extracted JDBC value [7] - [null]
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:13:01 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1764310388
2024-07-17 22:13:01 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@56c6b11f
2024-07-17 22:13:01 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:01 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:01 - Extracted JDBC value [1] - [5]
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 2026026655
2024-07-17 22:13:01 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:01 - Extracted JDBC value [2] - [555]
2024-07-17 22:13:01 - Extracted JDBC value [3] - [null]
2024-07-17 22:13:01 - Extracted JDBC value [4] - [555]
2024-07-17 22:13:01 - Extracted JDBC value [5] - [551]
2024-07-17 22:13:01 - Extracted JDBC value [6] - [555]
2024-07-17 22:13:01 - Extracted JDBC value [7] - [null]
2024-07-17 22:13:01 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:13:01 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1764310388
2024-07-17 22:13:01 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@56c6b11f
2024-07-17 22:13:01 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:13:01 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:01 - Writing [com.example.taskmanagement.dto.UserDTO@63c5b6b0]
2024-07-17 22:13:01 - Completed 200 OK
2024-07-17 22:13:01 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:02 - Securing GET /api/tasks
2024-07-17 22:13:02 - Secured GET /api/tasks
2024-07-17 22:13:02 - GET "/api/tasks", parameters={}
2024-07-17 22:13:02 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:13:02 - Created new SQL alias : t1_0
2024-07-17 22:13:02 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:13:02 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@51ea08a8] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:13:02 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79552b11
2024-07-17 22:13:02 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:13:02 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:13:02 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:13:02 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:13:02 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@1953672334 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@441164604 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:13:02 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:13:02 - Extracted JDBC value [0] - [1]
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 643056184
2024-07-17 22:13:02 - Extracted JDBC value [7] - [1]
2024-07-17 22:13:02 - Extracted JDBC value [1] - [Work]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:13:02 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:13:02 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:13:02 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61c1578d
2024-07-17 22:13:02 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1344925151
2024-07-17 22:13:02 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:02 - Extracted JDBC value [1] - [1234]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [1234]
2024-07-17 22:13:02 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:02 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:02 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61c1578d
2024-07-17 22:13:02 - Extracted JDBC value [0] - [5]
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 198549540
2024-07-17 22:13:02 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:02 - Extracted JDBC value [1] - [555]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [555]
2024-07-17 22:13:02 - Extracted JDBC value [4] - [551]
2024-07-17 22:13:02 - Extracted JDBC value [5] - [555]
2024-07-17 22:13:02 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61c1578d
2024-07-17 22:13:02 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:13:02 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:02 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1686255028 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2077916142 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:02 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:13:02 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 83716643
2024-07-17 22:13:02 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@30e5704a
2024-07-17 22:13:02 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:13:02 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:02 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@280993568 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1071797202 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:02 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:02 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1436643177
2024-07-17 22:13:02 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2c20e2a5
2024-07-17 22:13:02 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:02 - Writing [[com.example.taskmanagement.dto.TaskDTO@16441e99, com.example.taskmanagement.dto.TaskDTO@689c8027, c (truncated)...]
2024-07-17 22:13:02 - Completed 200 OK
2024-07-17 22:13:02 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:02 - Securing GET /api/tasks
2024-07-17 22:13:02 - Secured GET /api/tasks
2024-07-17 22:13:02 - GET "/api/tasks", parameters={}
2024-07-17 22:13:02 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:13:02 - Created new SQL alias : t1_0
2024-07-17 22:13:02 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:13:02 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e9de672] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:13:02 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@72837ba7
2024-07-17 22:13:02 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:13:02 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:13:02 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:13:02 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:13:02 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@1238892037 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@304278548 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:13:02 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:13:02 - Extracted JDBC value [0] - [1]
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1922306826
2024-07-17 22:13:02 - Extracted JDBC value [7] - [1]
2024-07-17 22:13:02 - Extracted JDBC value [1] - [Work]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:13:02 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:13:02 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:13:02 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77d31300
2024-07-17 22:13:02 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1024885816
2024-07-17 22:13:02 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:02 - Extracted JDBC value [1] - [1234]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [1234]
2024-07-17 22:13:02 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:02 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:02 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77d31300
2024-07-17 22:13:02 - Extracted JDBC value [0] - [5]
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 384478769
2024-07-17 22:13:02 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:02 - Extracted JDBC value [1] - [555]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [555]
2024-07-17 22:13:02 - Extracted JDBC value [4] - [551]
2024-07-17 22:13:02 - Extracted JDBC value [5] - [555]
2024-07-17 22:13:02 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@77d31300
2024-07-17 22:13:02 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:13:02 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:02 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@730899248 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@581879102 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:02 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:13:02 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 740010104
2024-07-17 22:13:02 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a0f1909
2024-07-17 22:13:02 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:13:02 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:02 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@963246750 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@23483852 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:02 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:02 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:02 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:02 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1797931659
2024-07-17 22:13:02 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:02 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:02 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:02 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:02 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@157254b6
2024-07-17 22:13:02 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:02 - Writing [[com.example.taskmanagement.dto.TaskDTO@3eb348b2, com.example.taskmanagement.dto.TaskDTO@6b279479, c (truncated)...]
2024-07-17 22:13:02 - Completed 200 OK
2024-07-17 22:13:02 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:08 - Securing GET /api/tasks
2024-07-17 22:13:08 - Secured GET /api/tasks
2024-07-17 22:13:08 - GET "/api/tasks", parameters={}
2024-07-17 22:13:08 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:13:08 - Created new SQL alias : t1_0
2024-07-17 22:13:08 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:13:08 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6505e3b9] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:13:08 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@47b49265
2024-07-17 22:13:08 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:13:08 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:13:08 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:13:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:13:08 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@273561834 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@509265358 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:13:08 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:13:08 - Extracted JDBC value [0] - [1]
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 320264980
2024-07-17 22:13:08 - Extracted JDBC value [7] - [1]
2024-07-17 22:13:08 - Extracted JDBC value [1] - [Work]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:13:08 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:13:08 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:13:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b2a180d
2024-07-17 22:13:08 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1218276002
2024-07-17 22:13:08 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:08 - Extracted JDBC value [1] - [1234]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [1234]
2024-07-17 22:13:08 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:08 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b2a180d
2024-07-17 22:13:08 - Extracted JDBC value [0] - [5]
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1262900996
2024-07-17 22:13:08 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:08 - Extracted JDBC value [1] - [555]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [555]
2024-07-17 22:13:08 - Extracted JDBC value [4] - [551]
2024-07-17 22:13:08 - Extracted JDBC value [5] - [555]
2024-07-17 22:13:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5b2a180d
2024-07-17 22:13:08 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:13:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:08 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1707895995 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1177010906 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:08 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:13:08 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 947640492
2024-07-17 22:13:08 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d34e42b
2024-07-17 22:13:08 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:13:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:08 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@53689543 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1412782462 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:08 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:08 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 676405768
2024-07-17 22:13:08 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@fa1c1f2
2024-07-17 22:13:08 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:08 - Writing [[com.example.taskmanagement.dto.TaskDTO@6b367d1b, com.example.taskmanagement.dto.TaskDTO@36bcef70, c (truncated)...]
2024-07-17 22:13:08 - Completed 200 OK
2024-07-17 22:13:08 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:08 - Securing GET /api/tasks
2024-07-17 22:13:08 - Secured GET /api/tasks
2024-07-17 22:13:08 - GET "/api/tasks", parameters={}
2024-07-17 22:13:08 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:13:08 - Created new SQL alias : t1_0
2024-07-17 22:13:08 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:13:08 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@57406a06] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:13:08 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@6baa86fb
2024-07-17 22:13:08 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:13:08 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:13:08 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:13:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:13:08 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@2137865032 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1665248580 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:13:08 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:13:08 - Extracted JDBC value [0] - [1]
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 508770313
2024-07-17 22:13:08 - Extracted JDBC value [7] - [1]
2024-07-17 22:13:08 - Extracted JDBC value [1] - [Work]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:13:08 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:13:08 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:13:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70168d0a
2024-07-17 22:13:08 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1750083091
2024-07-17 22:13:08 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:08 - Extracted JDBC value [1] - [1234]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [1234]
2024-07-17 22:13:08 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:08 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70168d0a
2024-07-17 22:13:08 - Extracted JDBC value [0] - [5]
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 2006201848
2024-07-17 22:13:08 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:08 - Extracted JDBC value [1] - [555]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [555]
2024-07-17 22:13:08 - Extracted JDBC value [4] - [551]
2024-07-17 22:13:08 - Extracted JDBC value [5] - [555]
2024-07-17 22:13:08 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70168d0a
2024-07-17 22:13:08 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:13:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:08 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@876246436 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1572056462 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:08 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:13:08 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 446379809
2024-07-17 22:13:08 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22637284
2024-07-17 22:13:08 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:13:08 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:08 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1125695782 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@953602634 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:08 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:08 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:08 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:08 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1255826888
2024-07-17 22:13:08 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:08 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:08 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:08 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:08 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6ceee1f
2024-07-17 22:13:08 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:08 - Writing [[com.example.taskmanagement.dto.TaskDTO@24312d5a, com.example.taskmanagement.dto.TaskDTO@653219e5, c (truncated)...]
2024-07-17 22:13:08 - Completed 200 OK
2024-07-17 22:13:08 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:11 - Securing GET /api/tasks
2024-07-17 22:13:11 - Secured GET /api/tasks
2024-07-17 22:13:11 - GET "/api/tasks", parameters={}
2024-07-17 22:13:11 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:13:11 - Created new SQL alias : t1_0
2024-07-17 22:13:11 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:13:11 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@a6b473b] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:13:11 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7d8417b
2024-07-17 22:13:11 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:13:11 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:13:11 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:13:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:13:11 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@1656512647 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@111214490 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:13:11 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:13:11 - Extracted JDBC value [0] - [1]
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 557005902
2024-07-17 22:13:11 - Extracted JDBC value [7] - [1]
2024-07-17 22:13:11 - Extracted JDBC value [1] - [Work]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:13:11 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:13:11 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:13:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20ee4bdd
2024-07-17 22:13:11 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1738315864
2024-07-17 22:13:11 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:11 - Extracted JDBC value [1] - [1234]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [1234]
2024-07-17 22:13:11 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:11 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20ee4bdd
2024-07-17 22:13:11 - Extracted JDBC value [0] - [5]
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 295961331
2024-07-17 22:13:11 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:11 - Extracted JDBC value [1] - [555]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [555]
2024-07-17 22:13:11 - Extracted JDBC value [4] - [551]
2024-07-17 22:13:11 - Extracted JDBC value [5] - [555]
2024-07-17 22:13:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@20ee4bdd
2024-07-17 22:13:11 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:13:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:11 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2075106178 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2020774647 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:11 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:13:11 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 191025749
2024-07-17 22:13:11 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b73e0ad
2024-07-17 22:13:11 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:13:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:11 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@191622713 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@878235532 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:11 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:11 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1908504847
2024-07-17 22:13:11 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@52e56873
2024-07-17 22:13:11 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:11 - Writing [[com.example.taskmanagement.dto.TaskDTO@77cb20fe, com.example.taskmanagement.dto.TaskDTO@4b00054f, c (truncated)...]
2024-07-17 22:13:11 - Completed 200 OK
2024-07-17 22:13:11 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:11 - Securing GET /api/tasks
2024-07-17 22:13:11 - Secured GET /api/tasks
2024-07-17 22:13:11 - GET "/api/tasks", parameters={}
2024-07-17 22:13:11 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:13:11 - Created new SQL alias : t1_0
2024-07-17 22:13:11 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:13:11 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@c17034] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:13:11 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@31f3eee6
2024-07-17 22:13:11 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:13:11 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:13:11 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:13:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:13:11 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@52042809 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1979865926 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:13:11 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:13:11 - Extracted JDBC value [0] - [1]
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 31664435
2024-07-17 22:13:11 - Extracted JDBC value [7] - [1]
2024-07-17 22:13:11 - Extracted JDBC value [1] - [Work]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:13:11 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:13:11 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:13:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@655f9a22
2024-07-17 22:13:11 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1443766590
2024-07-17 22:13:11 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:11 - Extracted JDBC value [1] - [1234]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [1234]
2024-07-17 22:13:11 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:11 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@655f9a22
2024-07-17 22:13:11 - Extracted JDBC value [0] - [5]
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1546367196
2024-07-17 22:13:11 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:11 - Extracted JDBC value [1] - [555]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [555]
2024-07-17 22:13:11 - Extracted JDBC value [4] - [551]
2024-07-17 22:13:11 - Extracted JDBC value [5] - [555]
2024-07-17 22:13:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@655f9a22
2024-07-17 22:13:11 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:13:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:11 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1569631456 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2058248638 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:11 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:13:11 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1515532458
2024-07-17 22:13:11 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3c89b17c
2024-07-17 22:13:11 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:13:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:11 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@506628458 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@891836930 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:11 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:11 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 721237525
2024-07-17 22:13:11 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:11 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:11 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4149f279
2024-07-17 22:13:11 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:11 - Writing [[com.example.taskmanagement.dto.TaskDTO@56089a76, com.example.taskmanagement.dto.TaskDTO@1fbbfb24, c (truncated)...]
2024-07-17 22:13:11 - Completed 200 OK
2024-07-17 22:13:11 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:25 - Securing GET /api/tasks
2024-07-17 22:13:25 - Secured GET /api/tasks
2024-07-17 22:13:25 - GET "/api/tasks", parameters={}
2024-07-17 22:13:25 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:13:25 - Created new SQL alias : t1_0
2024-07-17 22:13:25 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:13:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@264896ca] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:13:25 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@63f15fe5
2024-07-17 22:13:25 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:13:25 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:13:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:13:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:13:25 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@589882299 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@376984919 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:13:25 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:13:25 - Extracted JDBC value [0] - [1]
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 651665451
2024-07-17 22:13:25 - Extracted JDBC value [7] - [1]
2024-07-17 22:13:25 - Extracted JDBC value [1] - [Work]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:13:25 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:13:25 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:13:25 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72d19b4b
2024-07-17 22:13:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 622776906
2024-07-17 22:13:25 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:25 - Extracted JDBC value [1] - [1234]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [1234]
2024-07-17 22:13:25 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:25 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:25 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72d19b4b
2024-07-17 22:13:25 - Extracted JDBC value [0] - [5]
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1381538284
2024-07-17 22:13:25 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:25 - Extracted JDBC value [1] - [555]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [555]
2024-07-17 22:13:25 - Extracted JDBC value [4] - [551]
2024-07-17 22:13:25 - Extracted JDBC value [5] - [555]
2024-07-17 22:13:25 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@72d19b4b
2024-07-17 22:13:25 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:13:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:25 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@929066206 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1690268922 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:25 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:13:25 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 580285376
2024-07-17 22:13:25 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3f9e87c0
2024-07-17 22:13:25 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:13:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:25 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@533225415 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@750037065 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:25 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:25 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1037001260
2024-07-17 22:13:25 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2f20a478
2024-07-17 22:13:25 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:25 - Writing [[com.example.taskmanagement.dto.TaskDTO@28a1d712, com.example.taskmanagement.dto.TaskDTO@1fbf78a9, c (truncated)...]
2024-07-17 22:13:25 - Completed 200 OK
2024-07-17 22:13:25 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:13:25 - Securing GET /api/tasks
2024-07-17 22:13:25 - Secured GET /api/tasks
2024-07-17 22:13:25 - GET "/api/tasks", parameters={}
2024-07-17 22:13:25 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:13:25 - Created new SQL alias : t1_0
2024-07-17 22:13:25 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:13:25 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3caa9820] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:13:25 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@5de60bc5
2024-07-17 22:13:25 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:13:25 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:13:25 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:13:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:13:25 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@1262966561 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@341483473 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:13:25 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:13:25 - Extracted JDBC value [0] - [1]
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1035238373
2024-07-17 22:13:25 - Extracted JDBC value [7] - [1]
2024-07-17 22:13:25 - Extracted JDBC value [1] - [Work]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:13:25 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:13:25 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:13:25 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d50cf95
2024-07-17 22:13:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1254686899
2024-07-17 22:13:25 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:25 - Extracted JDBC value [1] - [1234]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [1234]
2024-07-17 22:13:25 - Extracted JDBC value [4] - [1234]
2024-07-17 22:13:25 - Extracted JDBC value [5] - [1234]
2024-07-17 22:13:25 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d50cf95
2024-07-17 22:13:25 - Extracted JDBC value [0] - [5]
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1492687301
2024-07-17 22:13:25 - Extracted JDBC value [7] - [4]
2024-07-17 22:13:25 - Extracted JDBC value [1] - [555]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [null]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [555]
2024-07-17 22:13:25 - Extracted JDBC value [4] - [551]
2024-07-17 22:13:25 - Extracted JDBC value [5] - [555]
2024-07-17 22:13:25 - Extracted JDBC value [6] - [null]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d50cf95
2024-07-17 22:13:25 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:13:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:25 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1037760863 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1058323151 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:25 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:13:25 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1655782095
2024-07-17 22:13:25 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2a57b722
2024-07-17 22:13:25 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:13:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:13:25 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@278261092 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@561591396 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:13:25 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:13:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:13:25 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:13:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1020395080
2024-07-17 22:13:25 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:13:25 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:13:25 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:13:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:13:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6118eaf9
2024-07-17 22:13:25 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:13:25 - Writing [[com.example.taskmanagement.dto.TaskDTO@5771ce66, com.example.taskmanagement.dto.TaskDTO@1ae2bd1d, c (truncated)...]
2024-07-17 22:13:25 - Completed 200 OK
2024-07-17 22:13:25 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:17:46 - Securing GET /api/tasks?userId=null
2024-07-17 22:17:46 - Secured GET /api/tasks?userId=null
2024-07-17 22:17:46 - GET "/api/tasks?userId=null", parameters={masked}
2024-07-17 22:17:46 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:17:46 - Created new SQL alias : t1_0
2024-07-17 22:17:46 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:17:46 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@36cc2b66] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:17:46 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@cdb6e66
2024-07-17 22:17:46 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:17:46 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:17:46 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:17:46 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:17:46 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@838041015 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1664213666 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:17:46 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:17:46 - Extracted JDBC value [0] - [1]
2024-07-17 22:17:46 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:17:46 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 477198516
2024-07-17 22:17:46 - Extracted JDBC value [7] - [1]
2024-07-17 22:17:46 - Extracted JDBC value [1] - [Work]
2024-07-17 22:17:46 - Extracted JDBC value [2] - [null]
2024-07-17 22:17:46 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:17:46 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:17:46 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:17:46 - Extracted JDBC value [6] - [null]
2024-07-17 22:17:46 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:17:46 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70b9ad6a
2024-07-17 22:17:46 - Extracted JDBC value [0] - [4]
2024-07-17 22:17:46 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:17:46 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1340276078
2024-07-17 22:17:46 - Extracted JDBC value [7] - [4]
2024-07-17 22:17:46 - Extracted JDBC value [1] - [1234]
2024-07-17 22:17:46 - Extracted JDBC value [2] - [null]
2024-07-17 22:17:46 - Extracted JDBC value [3] - [1234]
2024-07-17 22:17:46 - Extracted JDBC value [4] - [1234]
2024-07-17 22:17:46 - Extracted JDBC value [5] - [1234]
2024-07-17 22:17:46 - Extracted JDBC value [6] - [null]
2024-07-17 22:17:46 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:17:46 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70b9ad6a
2024-07-17 22:17:46 - Extracted JDBC value [0] - [5]
2024-07-17 22:17:46 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:17:46 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1419005001
2024-07-17 22:17:46 - Extracted JDBC value [7] - [4]
2024-07-17 22:17:46 - Extracted JDBC value [1] - [555]
2024-07-17 22:17:46 - Extracted JDBC value [2] - [null]
2024-07-17 22:17:46 - Extracted JDBC value [3] - [555]
2024-07-17 22:17:46 - Extracted JDBC value [4] - [551]
2024-07-17 22:17:46 - Extracted JDBC value [5] - [555]
2024-07-17 22:17:46 - Extracted JDBC value [6] - [null]
2024-07-17 22:17:46 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:17:46 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@70b9ad6a
2024-07-17 22:17:46 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:17:46 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:17:46 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@2119703894 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@638158462 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:17:46 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:17:46 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:17:46 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:17:46 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 337444991
2024-07-17 22:17:46 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:17:46 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:17:46 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:17:46 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:17:46 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65d8af2f
2024-07-17 22:17:46 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:17:46 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:17:46 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1004515464 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@804385769 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:17:46 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:17:46 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:17:46 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:17:46 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1678437069
2024-07-17 22:17:46 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:17:46 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:17:46 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:17:46 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:17:46 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f38a491
2024-07-17 22:17:46 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:17:46 - Writing [[com.example.taskmanagement.dto.TaskDTO@64772cd0, com.example.taskmanagement.dto.TaskDTO@1ce2f93, co (truncated)...]
2024-07-17 22:17:46 - Completed 200 OK
2024-07-17 22:17:46 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:24:41 - Securing GET /api/tasks?userId=null
2024-07-17 22:24:41 - Secured GET /api/tasks?userId=null
2024-07-17 22:24:41 - GET "/api/tasks?userId=null", parameters={masked}
2024-07-17 22:24:41 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:24:41 - Created new SQL alias : t1_0
2024-07-17 22:24:41 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:24:41 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4614a873] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:24:41 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4f8470c2
2024-07-17 22:24:41 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:24:41 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:24:41 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:24:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:24:41 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@100026882 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@48737858 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:24:41 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:24:41 - Extracted JDBC value [0] - [1]
2024-07-17 22:24:41 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:24:41 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 2128525752
2024-07-17 22:24:41 - Extracted JDBC value [7] - [1]
2024-07-17 22:24:41 - Extracted JDBC value [1] - [Work]
2024-07-17 22:24:41 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:41 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:24:41 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:24:41 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:24:41 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:41 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:24:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41f48d9f
2024-07-17 22:24:41 - Extracted JDBC value [0] - [4]
2024-07-17 22:24:41 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:24:41 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1049767373
2024-07-17 22:24:41 - Extracted JDBC value [7] - [4]
2024-07-17 22:24:41 - Extracted JDBC value [1] - [1234]
2024-07-17 22:24:41 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:41 - Extracted JDBC value [3] - [1234]
2024-07-17 22:24:41 - Extracted JDBC value [4] - [1234]
2024-07-17 22:24:41 - Extracted JDBC value [5] - [1234]
2024-07-17 22:24:41 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:41 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:24:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41f48d9f
2024-07-17 22:24:41 - Extracted JDBC value [0] - [5]
2024-07-17 22:24:41 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:24:41 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 218634050
2024-07-17 22:24:41 - Extracted JDBC value [7] - [4]
2024-07-17 22:24:41 - Extracted JDBC value [1] - [555]
2024-07-17 22:24:41 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:41 - Extracted JDBC value [3] - [555]
2024-07-17 22:24:41 - Extracted JDBC value [4] - [551]
2024-07-17 22:24:41 - Extracted JDBC value [5] - [555]
2024-07-17 22:24:41 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:41 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:24:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@41f48d9f
2024-07-17 22:24:41 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:24:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:24:41 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1668124938 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1287529711 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:24:41 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:24:41 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:24:41 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:24:41 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 190820614
2024-07-17 22:24:41 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:24:41 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:24:41 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:24:41 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:24:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3bf6135c
2024-07-17 22:24:41 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:24:41 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:24:41 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1709212363 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@140009020 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:24:41 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:24:41 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:24:41 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:24:41 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 2143644150
2024-07-17 22:24:41 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:24:41 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:24:41 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:24:41 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:24:41 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@48605ca0
2024-07-17 22:24:41 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:24:41 - Writing [[com.example.taskmanagement.dto.TaskDTO@10d1d381, com.example.taskmanagement.dto.TaskDTO@167dea06, c (truncated)...]
2024-07-17 22:24:41 - Completed 200 OK
2024-07-17 22:24:41 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:24:44 - Securing GET /api/tasks?userId=null
2024-07-17 22:24:44 - Secured GET /api/tasks?userId=null
2024-07-17 22:24:44 - GET "/api/tasks?userId=null", parameters={masked}
2024-07-17 22:24:44 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:24:44 - Created new SQL alias : t1_0
2024-07-17 22:24:44 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:24:44 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@165dcf9f] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:24:44 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4ea3a042
2024-07-17 22:24:44 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:24:44 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:24:44 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:24:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:24:44 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@1010904039 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1998985177 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:24:44 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:24:44 - Extracted JDBC value [0] - [1]
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1286520674
2024-07-17 22:24:44 - Extracted JDBC value [7] - [1]
2024-07-17 22:24:44 - Extracted JDBC value [1] - [Work]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:24:44 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:24:44 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:24:44 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b71f1f1
2024-07-17 22:24:44 - Extracted JDBC value [0] - [4]
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 2089145517
2024-07-17 22:24:44 - Extracted JDBC value [7] - [4]
2024-07-17 22:24:44 - Extracted JDBC value [1] - [1234]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [1234]
2024-07-17 22:24:44 - Extracted JDBC value [4] - [1234]
2024-07-17 22:24:44 - Extracted JDBC value [5] - [1234]
2024-07-17 22:24:44 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b71f1f1
2024-07-17 22:24:44 - Extracted JDBC value [0] - [5]
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 674868886
2024-07-17 22:24:44 - Extracted JDBC value [7] - [4]
2024-07-17 22:24:44 - Extracted JDBC value [1] - [555]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [555]
2024-07-17 22:24:44 - Extracted JDBC value [4] - [551]
2024-07-17 22:24:44 - Extracted JDBC value [5] - [555]
2024-07-17 22:24:44 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@b71f1f1
2024-07-17 22:24:44 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:24:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:24:44 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@355456254 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1197296202 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:24:44 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:24:44 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 1928479842
2024-07-17 22:24:44 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5526e1f6
2024-07-17 22:24:44 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:24:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:24:44 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@600572090 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2117767312 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:24:44 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:24:44 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1892084875
2024-07-17 22:24:44 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@490f7ede
2024-07-17 22:24:44 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:24:44 - Writing [[com.example.taskmanagement.dto.TaskDTO@5a6e014a, com.example.taskmanagement.dto.TaskDTO@12946cc0, c (truncated)...]
2024-07-17 22:24:44 - Completed 200 OK
2024-07-17 22:24:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:24:44 - Securing GET /api/tasks?userId=null
2024-07-17 22:24:44 - Secured GET /api/tasks?userId=null
2024-07-17 22:24:44 - GET "/api/tasks?userId=null", parameters={masked}
2024-07-17 22:24:44 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(String, String, String)
2024-07-17 22:24:44 - Created new SQL alias : t1_0
2024-07-17 22:24:44 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(24213535660200))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:24:44 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1b62e171] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:24:44 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7e61afb1
2024-07-17 22:24:44 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(24213535660200).title) 
2024-07-17 22:24:44 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(24213535660200)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(24213535660200).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(24213535660200).user]

2024-07-17 22:24:44 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(24213535660200)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(24213535660200).user) {
            }
          }
        }
      }
    }

2024-07-17 22:24:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:24:44 - Initializer list:
	  com.example.taskmanagement.model.Task(24213535660200) -> EntityResultInitializer(com.example.taskmanagement.model.Task(24213535660200))@542106489 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(24213535660200).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(24213535660200).user)@1835217431 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@2056027101)

2024-07-17 22:24:44 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.title like ? escape '\\'
2024-07-17 22:24:44 - Extracted JDBC value [0] - [1]
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 1
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#1] : 1802298588
2024-07-17 22:24:44 - Extracted JDBC value [7] - [1]
2024-07-17 22:24:44 - Extracted JDBC value [1] - [Work]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [This is an updated task description]
2024-07-17 22:24:44 - Extracted JDBC value [4] - [Medium
]
2024-07-17 22:24:44 - Extracted JDBC value [5] - [Updated Task]
2024-07-17 22:24:44 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#1
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6b902c
2024-07-17 22:24:44 - Extracted JDBC value [0] - [4]
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 4
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#4] : 1338036053
2024-07-17 22:24:44 - Extracted JDBC value [7] - [4]
2024-07-17 22:24:44 - Extracted JDBC value [1] - [1234]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [1234]
2024-07-17 22:24:44 - Extracted JDBC value [4] - [1234]
2024-07-17 22:24:44 - Extracted JDBC value [5] - [1234]
2024-07-17 22:24:44 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#4
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6b902c
2024-07-17 22:24:44 - Extracted JDBC value [0] - [5]
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(24213535660200)): 5
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(24213535660200)#5] : 1195885602
2024-07-17 22:24:44 - Extracted JDBC value [7] - [4]
2024-07-17 22:24:44 - Extracted JDBC value [1] - [555]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [null]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [555]
2024-07-17 22:24:44 - Extracted JDBC value [4] - [551]
2024-07-17 22:24:44 - Extracted JDBC value [5] - [555]
2024-07-17 22:24:44 - Extracted JDBC value [6] - [null]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(24213535660200)#5
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1f6b902c
2024-07-17 22:24:44 - Initializing proxy: [com.example.taskmanagement.model.User#1]
2024-07-17 22:24:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:24:44 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@136876462 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1104895385 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:24:44 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 1
2024-07-17 22:24:44 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#1
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#1] : 872134897
2024-07-17 22:24:44 - Extracted JDBC value [1] - [testuser@example.com]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [$2a$10$0m7AL83iU3BiJCZb1Dp58.SNMt/wLPq4hJVtY8V1r00HExjrZy7Z.]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [testuser]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#1
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3736309b
2024-07-17 22:24:44 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:24:44 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:24:44 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@822360713 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@564593447 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:24:44 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:24:44 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:24:44 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:24:44 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1493623886
2024-07-17 22:24:44 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:24:44 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:24:44 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:24:44 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:24:44 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7d64475b
2024-07-17 22:24:44 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:24:44 - Writing [[com.example.taskmanagement.dto.TaskDTO@686fe543, com.example.taskmanagement.dto.TaskDTO@23d6f0d6, c (truncated)...]
2024-07-17 22:24:44 - Completed 200 OK
2024-07-17 22:24:44 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:26:46 - Starting TaskmanagementApplication using Java 22.0.1 with PID 41684 (C:\Users\ohchi\OneDrive\Desktop\204\taskmanagement\target\classes started by ohchi in C:\Users\ohchi\OneDrive\Desktop\204\taskmanagement)
2024-07-17 22:26:46 - No active profile set, falling back to 1 default profile: "default"
2024-07-17 22:26:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-17 22:26:47 - Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2024-07-17 22:26:47 - Tomcat initialized with port 8080 (http)
2024-07-17 22:26:47 - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-17 22:26:47 - Starting service [Tomcat]
2024-07-17 22:26:47 - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-17 22:26:48 - Initializing Spring embedded WebApplicationContext
2024-07-17 22:26:48 - Root WebApplicationContext: initialization completed in 1667 ms
2024-07-17 22:26:48 - Filter 'webMvcObservationFilter' configured for use
2024-07-17 22:26:48 - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@24d46ca6
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (null)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/ohchi/OneDrive/Desktop/204/taskmanagement/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.example.taskmanagement.model.Task
		com.example.taskmanagement.model.User]
	Mapping files names []
	Properties []
2024-07-17 22:26:48 - Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2024-07-17 22:26:48 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2024-07-17 22:26:48 - HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-17 22:26:48 - HHH000206: 'hibernate.properties' not found
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2024-07-17 22:26:48 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2024-07-17 22:26:48 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2024-07-17 22:26:48 - HHH000026: Second-level cache disabled
2024-07-17 22:26:48 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-17 22:26:48 - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-17 22:26:48 - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@28f90752
2024-07-17 22:26:48 - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-17 22:26:48 - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4f20b022
2024-07-17 22:26:48 - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@72a34537
2024-07-17 22:26:48 - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@72a34537
2024-07-17 22:26:48 - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-17 22:26:48 - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@24fef542
2024-07-17 22:26:48 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-17 22:26:48 - Adding type registration byte -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-17 22:26:48 - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@44ddb518
2024-07-17 22:26:48 - Adding type registration binary -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-17 22:26:48 - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-17 22:26:48 - Adding type registration [B -> org.hibernate.type.BasicTypeReference@e36bc01
2024-07-17 22:26:48 - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-17 22:26:48 - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6654ca0d
2024-07-17 22:26:48 - Adding type registration image -> org.hibernate.type.BasicTypeReference@35536760
2024-07-17 22:26:48 - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-17 22:26:48 - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1c8f71a7
2024-07-17 22:26:48 - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@27e21083
2024-07-17 22:26:48 - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@67a6a2d0
2024-07-17 22:26:48 - Adding type registration short -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-17 22:26:48 - Adding type registration short -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-17 22:26:48 - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@49e0b123
2024-07-17 22:26:48 - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-17 22:26:48 - Adding type registration int -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-17 22:26:48 - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2e85e3f1
2024-07-17 22:26:48 - Adding type registration long -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 22:26:48 - Adding type registration long -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 22:26:48 - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@195498aa
2024-07-17 22:26:48 - Adding type registration float -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 22:26:48 - Adding type registration float -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 22:26:48 - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4b360972
2024-07-17 22:26:48 - Adding type registration double -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 22:26:48 - Adding type registration double -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 22:26:48 - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@793d09e
2024-07-17 22:26:48 - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 22:26:48 - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@68821f6
2024-07-17 22:26:48 - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 22:26:48 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3ba46845
2024-07-17 22:26:48 - Adding type registration character -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 22:26:48 - Adding type registration char -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 22:26:48 - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@40a28bda
2024-07-17 22:26:48 - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@592cb470
2024-07-17 22:26:48 - Adding type registration string -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 22:26:48 - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1e6cb932
2024-07-17 22:26:48 - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6921cfa
2024-07-17 22:26:48 - Adding type registration characters -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 22:26:48 - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 22:26:48 - Adding type registration [C -> org.hibernate.type.BasicTypeReference@523abba9
2024-07-17 22:26:48 - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6e090aaa
2024-07-17 22:26:48 - Adding type registration text -> org.hibernate.type.BasicTypeReference@15d79b70
2024-07-17 22:26:48 - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@33430fc
2024-07-17 22:26:48 - Adding type registration clob -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 22:26:48 - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@45424c0
2024-07-17 22:26:48 - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 22:26:48 - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@22ae32ba
2024-07-17 22:26:48 - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@b8b2184
2024-07-17 22:26:48 - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@299a43d9
2024-07-17 22:26:48 - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@ccd000e
2024-07-17 22:26:48 - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5fa5c8cf
2024-07-17 22:26:48 - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@d7055be
2024-07-17 22:26:48 - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@768f4b42
2024-07-17 22:26:48 - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 22:26:48 - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@12a6e8ed
2024-07-17 22:26:48 - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 22:26:48 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@63b4b9c6
2024-07-17 22:26:48 - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 22:26:48 - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6c66ddab
2024-07-17 22:26:48 - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 22:26:48 - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@603f4e3e
2024-07-17 22:26:48 - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 22:26:48 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45fb2354
2024-07-17 22:26:48 - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3c7d8a4
2024-07-17 22:26:48 - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5996d6f2
2024-07-17 22:26:48 - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 22:26:48 - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@43423d40
2024-07-17 22:26:48 - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5f3f57ff
2024-07-17 22:26:48 - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6200b644
2024-07-17 22:26:48 - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@d4ecdb0
2024-07-17 22:26:48 - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 22:26:48 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fb44964
2024-07-17 22:26:48 - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7a117dc2
2024-07-17 22:26:48 - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1d444652
2024-07-17 22:26:48 - Adding type registration date -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 22:26:48 - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@669c2b07
2024-07-17 22:26:48 - Adding type registration time -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 22:26:48 - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1b1ea1d9
2024-07-17 22:26:48 - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 22:26:48 - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 22:26:48 - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6a902015
2024-07-17 22:26:48 - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 22:26:48 - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 22:26:48 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@55d99dc3
2024-07-17 22:26:48 - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@521a506c
2024-07-17 22:26:48 - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3c64339f
2024-07-17 22:26:48 - Adding type registration instant -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 22:26:48 - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@579f3c8e
2024-07-17 22:26:48 - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 22:26:48 - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 22:26:48 - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4eb1943b
2024-07-17 22:26:48 - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4e2824b1
2024-07-17 22:26:48 - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@534d0e20
2024-07-17 22:26:48 - Adding type registration class -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 22:26:48 - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7d18338b
2024-07-17 22:26:48 - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 22:26:48 - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 22:26:48 - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3f4a605f
2024-07-17 22:26:48 - Adding type registration locale -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 22:26:48 - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@bcfe29c
2024-07-17 22:26:48 - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 22:26:48 - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@37f71c05
2024-07-17 22:26:48 - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 22:26:48 - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5bd3ca3c
2024-07-17 22:26:48 - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 22:26:48 - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2dd8a273
2024-07-17 22:26:48 - Adding type registration url -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 22:26:48 - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@59f76e56
2024-07-17 22:26:48 - Adding type registration vector -> org.hibernate.type.BasicTypeReference@566f4659
2024-07-17 22:26:48 - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1328f482
2024-07-17 22:26:48 - Adding type registration object -> org.hibernate.type.JavaObjectType@7ba1cdbe
2024-07-17 22:26:48 - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7ba1cdbe
2024-07-17 22:26:48 - Adding type registration null -> org.hibernate.type.NullType@57b63253
2024-07-17 22:26:48 - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@c0013b8
2024-07-17 22:26:48 - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2c1ea7be
2024-07-17 22:26:48 - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2493eec6
2024-07-17 22:26:48 - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@42d174ad
2024-07-17 22:26:48 - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4ec0229c
2024-07-17 22:26:48 - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@173a5fad
2024-07-17 22:26:48 - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2ce47652
2024-07-17 22:26:48 - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65d90b7f
2024-07-17 22:26:48 - Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b34c7c9] into BootstrapContext; was [null]
2024-07-17 22:26:48 - ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b34c7c9) [was null]
2024-07-17 22:26:48 - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@18b04526] into BootstrapContext; was [null]
2024-07-17 22:26:48 - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2fd4312a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@31b6fb14]
2024-07-17 22:26:48 - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-17 22:26:48 - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b34c7c9]
2024-07-17 22:26:48 - ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@b34c7c9]
2024-07-17 22:26:48 - HikariPool-1 - Starting...
2024-07-17 22:26:48 - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@683ed81b
2024-07-17 22:26:48 - HikariPool-1 - Start completed.
2024-07-17 22:26:48 - Database ->
	   name : MySQL
	version : 5.5.5-10.4.28-MariaDB
	  major : 5
	  minor : 5
2024-07-17 22:26:48 - Driver ->
	   name : MySQL Connector/J
	version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
	  major : 8
	  minor : 0
2024-07-17 22:26:48 - JDBC version : 4.2
2024-07-17 22:26:48 - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-17 22:26:48 - HHH035001: Using dialect: org.hibernate.dialect.MySQL8Dialect, version: 8.0
2024-07-17 22:26:48 - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-07-17 22:26:48 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2024-07-17 22:26:48 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2024-07-17 22:26:48 - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@366b4a7b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a251135)
2024-07-17 22:26:48 - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@70819ba8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@446a692f)
2024-07-17 22:26:48 - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@283ecb4b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@a30dbc0)
2024-07-17 22:26:48 - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76104df5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61246109)
2024-07-17 22:26:48 - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f9e8af5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@337cb81d)
2024-07-17 22:26:48 - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47772462) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@59929ac)
2024-07-17 22:26:48 - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4e9bd2c8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@18f13756)
2024-07-17 22:26:48 - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@665b441e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2ac3d530)
2024-07-17 22:26:48 - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a5e4f32) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2b0494a8)
2024-07-17 22:26:48 - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-17 22:26:48 - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-17 22:26:48 - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-17 22:26:48 - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 22:26:48 - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-17 22:26:48 - Adding type registration null -> org.hibernate.type.NullType@359ea595
2024-07-17 22:26:48 - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@57b63253`
2024-07-17 22:26:48 - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-07-17 22:26:48 - Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 22:26:48 - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-07-17 22:26:48 - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 22:26:48 - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 22:26:48 - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-17 22:26:48 - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 22:26:48 - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 22:26:48 - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-17 22:26:48 - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 22:26:48 - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 22:26:48 - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-17 22:26:48 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a45ca1c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4742466e]
2024-07-17 22:26:48 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2024-07-17 22:26:48 - Binding entity from annotated class: com.example.taskmanagement.model.Task
2024-07-17 22:26:48 - Import with entity name Task
2024-07-17 22:26:48 - Bind entity com.example.taskmanagement.model.Task on table task
2024-07-17 22:26:48 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 22:26:49 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 22:26:49 - MetadataSourceProcessor property id with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:id]
2024-07-17 22:26:49 - building BasicValue for id
2024-07-17 22:26:49 - Skipping column re-registration: task.id
2024-07-17 22:26:49 - Building property id
2024-07-17 22:26:49 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property category with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:category]
2024-07-17 22:26:49 - building BasicValue for category
2024-07-17 22:26:49 - Skipping column re-registration: task.category
2024-07-17 22:26:49 - Building property category
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property createdAt with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:createdAt]
2024-07-17 22:26:49 - building BasicValue for createdAt
2024-07-17 22:26:49 - Skipping column re-registration: task.created_at
2024-07-17 22:26:49 - Building property createdAt
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property description with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:description]
2024-07-17 22:26:49 - building BasicValue for description
2024-07-17 22:26:49 - Skipping column re-registration: task.description
2024-07-17 22:26:49 - Building property description
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property priority with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:priority]
2024-07-17 22:26:49 - building BasicValue for priority
2024-07-17 22:26:49 - Skipping column re-registration: task.priority
2024-07-17 22:26:49 - Building property priority
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property title with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:title]
2024-07-17 22:26:49 - building BasicValue for title
2024-07-17 22:26:49 - Skipping column re-registration: task.title
2024-07-17 22:26:49 - Building property title
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property updatedAt with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.Task:updatedAt]
2024-07-17 22:26:49 - building BasicValue for updatedAt
2024-07-17 22:26:49 - Skipping column re-registration: task.updated_at
2024-07-17 22:26:49 - Building property updatedAt
2024-07-17 22:26:49 - Binding column: AnnotatedJoinColumn(column='user_id')
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - Building property user
2024-07-17 22:26:49 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 22:26:49 - Binding entity from annotated class: com.example.taskmanagement.model.User
2024-07-17 22:26:49 - Import with entity name User
2024-07-17 22:26:49 - Bind entity com.example.taskmanagement.model.User on table users
2024-07-17 22:26:49 - Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 22:26:49 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 22:26:49 - MetadataSourceProcessor property id with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:id]
2024-07-17 22:26:49 - building BasicValue for id
2024-07-17 22:26:49 - Skipping column re-registration: users.id
2024-07-17 22:26:49 - Building property id
2024-07-17 22:26:49 - #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property email with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:email]
2024-07-17 22:26:49 - building BasicValue for email
2024-07-17 22:26:49 - Skipping column re-registration: users.email
2024-07-17 22:26:49 - Building property email
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property password with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:password]
2024-07-17 22:26:49 - building BasicValue for password
2024-07-17 22:26:49 - Skipping column re-registration: users.password
2024-07-17 22:26:49 - Building property password
2024-07-17 22:26:49 - Binding column: AnnotatedJoinColumn()
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - Binding column: IndexColumn(column='tasks_ORDER')
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - Binding column: AnnotatedColumn(column='tasks_KEY')
2024-07-17 22:26:49 - Binding column: AnnotatedJoinColumn(column='tasks_KEY')
2024-07-17 22:26:49 - Binding column: AnnotatedJoinColumn()
2024-07-17 22:26:49 - Binding column: AnnotatedJoinColumn()
2024-07-17 22:26:49 - Collection role: com.example.taskmanagement.model.User.tasks
2024-07-17 22:26:49 - Building property tasks
2024-07-17 22:26:49 - Binding column: AnnotatedColumn()
2024-07-17 22:26:49 - MetadataSourceProcessor property username with lazy=false
2024-07-17 22:26:49 - Attempting to locate auto-apply AttributeConverter for property [com.example.taskmanagement.model.User:username]
2024-07-17 22:26:49 - building BasicValue for username
2024-07-17 22:26:49 - Skipping column re-registration: users.username
2024-07-17 22:26:49 - Building property username
2024-07-17 22:26:49 - HHH000194: Package not found or no package-info.java: com.example.taskmanagement.model
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for category
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for createdAt
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for description
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for priority
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for title
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for updatedAt
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for id
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for email
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for password
2024-07-17 22:26:49 - Starting `BasicValueBinder#fillSimpleValue` for username
2024-07-17 22:26:49 - Forcing column [id] to be non-null as it is part of the primary key for table [task]
2024-07-17 22:26:49 - Forcing column [id] to be non-null as it is part of the primary key for table [users]
2024-07-17 22:26:49 - Second pass for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 22:26:49 - Binding a OneToMany: com.example.taskmanagement.model.User.tasks through a foreign key
2024-07-17 22:26:49 - Mapping collection: com.example.taskmanagement.model.User.tasks -> task
2024-07-17 22:26:49 - Retrieving property com.example.taskmanagement.model.Task.user
2024-07-17 22:26:49 - Mapped collection key: user_id, one-to-many: com.example.taskmanagement.model.Task
2024-07-17 22:26:49 - Building session factory
2024-07-17 22:26:49 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 22:26:49 - Instantiating SessionFactory with settings: {java.specification.version=22, sun.cpu.isalist=amd64, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@6cb3463b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=GBK, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=C:\Users\ohchi\OneDrive\Desktop\204\taskmanagement\target\classes;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.1\spring-boot-starter-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.1\spring-boot-starter-aop-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\aspectj\aspectjweaver\1.9.22\aspectjweaver-1.9.22.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.1\spring-boot-starter-jdbc-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jdbc\6.1.10\spring-jdbc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\hibernate\orm\hibernate-core\6.5.2.Final\hibernate-core-6.5.2.Final.jar;C:\Users\ohchi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\ohchi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\ohchi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\ohchi\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\ohchi\.m2\repository\net\bytebuddy\byte-buddy\1.14.17\byte-buddy-1.14.17.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\ohchi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\ohchi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\ohchi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\ohchi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\ohchi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-jpa\3.3.1\spring-data-jpa-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\data\spring-data-commons\3.3.1\spring-data-commons-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-orm\6.1.10\spring-orm-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-tx\6.1.10\spring-tx-6.1.10.jar;C:\Users\ohchi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\slf4j-api\2.0.13\slf4j-api-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aspects\6.1.10\spring-aspects-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.3.1\spring-boot-starter-security-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.1\spring-boot-starter-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot\3.3.1\spring-boot-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.1\spring-boot-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.1\spring-boot-starter-logging-3.3.1.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-classic\1.5.6\logback-classic-1.5.6.jar;C:\Users\ohchi\.m2\repository\ch\qos\logback\logback-core\1.5.6\logback-core-1.5.6.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\ohchi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.13\jul-to-slf4j-2.0.13.jar;C:\Users\ohchi\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-aop\6.1.10\spring-aop-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-web\6.3.1\spring-security-web-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.1\spring-boot-starter-web-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.1\spring-boot-starter-json-3.3.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.1\jackson-databind-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.1\jackson-annotations-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.1\jackson-core-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.1\jackson-datatype-jdk8-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.1\jackson-datatype-jsr310-2.17.1.jar;C:\Users\ohchi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.1\jackson-module-parameter-names-2.17.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.1\spring-boot-starter-tomcat-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.25\tomcat-embed-core-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.25\tomcat-embed-el-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.25\tomcat-embed-websocket-10.1.25.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-web\6.1.10\spring-web-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-webmvc\6.1.10\spring-webmvc-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.3.1\spring-boot-starter-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.3.1\spring-boot-actuator-autoconfigure-3.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.3.1\spring-boot-actuator-3.3.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-observation\1.13.1\micrometer-observation-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-commons\1.13.1\micrometer-commons-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-jakarta9\1.13.1\micrometer-jakarta9-1.13.1.jar;C:\Users\ohchi\.m2\repository\io\micrometer\micrometer-core\1.13.1\micrometer-core-1.13.1.jar;C:\Users\ohchi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\ohchi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\ohchi\.m2\repository\com\h2database\h2\2.2.224\h2-2.2.224.jar;C:\Users\ohchi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\ohchi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-core\6.1.10\spring-core-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-jcl\6.1.10\spring-jcl-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-config\6.3.1\spring-security-config-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-beans\6.1.10\spring-beans-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-context\6.1.10\spring-context-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-core\6.3.1\spring-security-core-6.3.1.jar;C:\Users\ohchi\.m2\repository\org\springframework\spring-expression\6.1.10\spring-expression-6.1.10.jar;C:\Users\ohchi\.m2\repository\org\springframework\security\spring-security-crypto\6.3.1\spring-security-crypto-6.3.1.jar;C:\Users\ohchi\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, catalina.useNaming=false, user.timezone=Asia/Singapore, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, user.country.format=TW, java.vm.specification.version=22, os.name=Windows 11, jakarta.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-22\bin, com.sun.management.jmxremote.ssl=false, sun.java.command=com.example.taskmanagement.TaskmanagementApplication, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2f9236d8, com.sun.management.jmxremote=, jdk.debug=release, sun.cpu.endian=little, hibernate.cdi.extensions=true, spring.boot.project.name=taskmanagement, user.home=C:\Users\ohchi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-04-16, java.home=C:\Program Files\Java\jdk-22, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=22.0.1+8-16, user.name=ohchi, spring.jmx.enabled=true, stdout.encoding=ms936, path.separator=;, management.endpoints.jmx.exposure.include=*, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\ohchi\AppData\Local\Temp\, catalina.home=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.7713252228829457115, com.sun.management.jmxremote.port=58517, java.version=22.0.1, hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy, user.dir=C:\Users\ohchi\OneDrive\Desktop\204\taskmanagement, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=41684, user.language.format=zh, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=C:\Users\ohchi\AppData\Local\Temp\tomcat.8080.7713252228829457115, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4536a09a, native.encoding=GBK, java.library.path=C:\Program Files\Java\jdk-22\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Program Files\NVIDIA Corporation\NVIDIA app\NvDLISR;C:\Program Files\Java\jdk-17\bin;C:\Program Files\Maven\apache-maven-3.9.7\bin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\java8path;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\BellSoft\LibericaJDK-8\bin\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Bandizip\;C:\Program Files\dotnet\;C:\Program Files\Git\cmd;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\nodejs\;C:\xampp\php;C:\Program Files\Cloudflare\Cloudflare WARP\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\ohchi\AppData\Local\Programs\Python\Python310\;C:\Users\ohchi\AppData\Local\Microsoft\WindowsApps;C:\Program Files\JetBrains\IntelliJ IDEA Community Edi;C:\Users\ohchi\AppData\Local\Programs\Microsoft VS Code\bin;., stderr.encoding=ms936, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=22.0.1+8-16, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeLittle, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), java.class.version=66.0, LOGGED_APPLICATION_NAME=[taskmanagement] }
2024-07-17 22:26:49 - Session factory constructed with filter configurations : {}
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@70b630d] under count; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1361e880] under every; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3506bc8b] under any; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5186b78a] under sinh; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3f6a9ba0] under cosh; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e749235] under tanh; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@870a9f2] under pi; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c2e7591] under log; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2024-07-17 22:26:49 - Registering alternate key : length -> character_length
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5adc71e7] under position; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2fe38b73] under overlay; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2352c21f] under trim; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@25e203e6] under cast; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8b1bfdf] under collate; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1b5d1d9] under extract; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2cd2c764] under ifnull; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@11939a9f] under pad; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7cadf3ca] under str; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@516155b5] under format; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@7d4b32d1] under timestampadd; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5b31a9e3] under timestampdiff; prior registration was null
2024-07-17 22:26:49 - Registering alternate key : dateadd -> timestampadd
2024-07-17 22:26:49 - Registering alternate key : datediff -> timestampdiff
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@483ed60e] under current_date; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9c5d76b] under current_time; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a14ab66] under current_timestamp; prior registration was null
2024-07-17 22:26:49 - Registering alternate key : current date -> current_date
2024-07-17 22:26:49 - Registering alternate key : current time -> current_time
2024-07-17 22:26:49 - Registering alternate key : current timestamp -> current_timestamp
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@54780c40] under local_date; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ac83e67] under local_time; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4d91d2da] under local_datetime; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12811f95] under offset_datetime; prior registration was null
2024-07-17 22:26:49 - Registering alternate key : local date -> local_date
2024-07-17 22:26:49 - Registering alternate key : local time -> local_time
2024-07-17 22:26:49 - Registering alternate key : local datetime -> local_datetime
2024-07-17 22:26:49 - Registering alternate key : offset datetime -> offset_datetime
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@68f1b89] under instant; prior registration was null
2024-07-17 22:26:49 - Registering alternate key : current_instant -> instant
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a11efe6] under sql; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c2e7591
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7ffc4195] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@7ce760af] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2024-07-17 22:26:49 - Registering alternate key : day -> dayofmonth
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e4636c3] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5adc71e7
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@745c8a04] under trunc; prior registration was null
2024-07-17 22:26:49 - Registering alternate key : truncate -> trunc
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59d29065] under bitand; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a13ad55] under bitor; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@303db609] under bitxor; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20a116a0] under bitnot; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6dbdeb69] under format; prior registration was org.hibernate.dialect.function.FormatFunction@516155b5
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6ac83e67
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4d91d2da
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a238a8e] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@870a9f2
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5773f83d] under chr; prior registration was null
2024-07-17 22:26:49 - Registering alternate key : char -> chr
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fcfe065] under sysdate; prior registration was null
2024-07-17 22:26:49 - Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@237c8718] under listagg; prior registration was null
2024-07-17 22:26:49 - abs(NUMERIC arg)
2024-07-17 22:26:49 - Double acos(NUMERIC arg)
2024-07-17 22:26:49 - adddate(DATE datetime, INTEGER days)
2024-07-17 22:26:49 - addtime(TIME datetime, TIME time)
2024-07-17 22:26:49 - Boolean any(BOOLEAN arg)
2024-07-17 22:26:49 - Integer ascii(STRING arg)
2024-07-17 22:26:49 - Double asin(NUMERIC arg)
2024-07-17 22:26:49 - Double atan(NUMERIC arg)
2024-07-17 22:26:49 - Double atan2(NUMERIC arg0, NUMERIC arg1)
2024-07-17 22:26:49 - avg(arg)
2024-07-17 22:26:49 - bit_and(arg)
2024-07-17 22:26:49 - Integer bit_length(STRING_OR_CLOB arg)
2024-07-17 22:26:49 - bit_or(arg)
2024-07-17 22:26:49 - bitand(arg0, arg1)
2024-07-17 22:26:49 - bitnot(arg)
2024-07-17 22:26:49 - bitor(arg0, arg1)
2024-07-17 22:26:49 - bitxor(arg0, arg1)
2024-07-17 22:26:49 - cast(arg as Type)
2024-07-17 22:26:49 - ceiling(NUMERIC arg)
2024-07-17 22:26:49 - Character char(INTEGER arg)
2024-07-17 22:26:49 - Integer character_length(STRING_OR_CLOB arg)
2024-07-17 22:26:49 - Character chr(INTEGER arg)
2024-07-17 22:26:49 - coalesce(arg0[, arg1[, ...]])
2024-07-17 22:26:49 - String collate(STRING string as COLLATION collation)
2024-07-17 22:26:49 - String concat(STRING string0[, STRING string1[, ...]])
2024-07-17 22:26:49 - Double cos(NUMERIC arg)
2024-07-17 22:26:49 - Double cosh(NUMERIC arg)
2024-07-17 22:26:49 - Double cot(NUMERIC arg)
2024-07-17 22:26:49 - Long count([distinct ]{arg|*})
2024-07-17 22:26:49 - Integer crc32(arg)
2024-07-17 22:26:49 - Date curdate()
2024-07-17 22:26:49 - Date current date
2024-07-17 22:26:49 - Time current time
2024-07-17 22:26:49 - Timestamp current timestamp
2024-07-17 22:26:49 - Date current_date
2024-07-17 22:26:49 - Instant current_instant
2024-07-17 22:26:49 - Time current_time
2024-07-17 22:26:49 - Timestamp current_timestamp
2024-07-17 22:26:49 - Time curtime()
2024-07-17 22:26:49 - Date date(arg)
2024-07-17 22:26:49 - dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 22:26:49 - Integer datediff(DATE end, DATE start)
2024-07-17 22:26:49 - Integer day(DATE arg)
2024-07-17 22:26:49 - String dayname(DATE arg)
2024-07-17 22:26:49 - Integer dayofmonth(DATE arg)
2024-07-17 22:26:49 - Integer dayofweek(DATE arg)
2024-07-17 22:26:49 - Integer dayofyear(DATE arg)
2024-07-17 22:26:49 - Double degrees(NUMERIC arg)
2024-07-17 22:26:49 - Boolean every(BOOLEAN arg)
2024-07-17 22:26:49 - Double exp(NUMERIC arg)
2024-07-17 22:26:49 - extract(TEMPORAL_UNIT field from TEMPORAL arg)
2024-07-17 22:26:49 - floor(NUMERIC arg)
2024-07-17 22:26:49 - String format(TEMPORAL datetime as STRING pattern)
2024-07-17 22:26:49 - greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 22:26:49 - Integer hour(TIME arg)
2024-07-17 22:26:49 - ifnull(arg0, arg1)
2024-07-17 22:26:49 - String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2024-07-17 22:26:49 - Instant instant
2024-07-17 22:26:49 - Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2024-07-17 22:26:49 - Date last_day(DATE arg)
2024-07-17 22:26:49 - least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2024-07-17 22:26:49 - String left(STRING string, INTEGER length)
2024-07-17 22:26:49 - Integer length(STRING_OR_CLOB arg)
2024-07-17 22:26:49 - String listagg(STRING arg0, STRING arg1)
2024-07-17 22:26:49 - Double ln(NUMERIC arg)
2024-07-17 22:26:49 - LocalDate local date
2024-07-17 22:26:49 - LocalDateTime local datetime
2024-07-17 22:26:49 - LocalTime local time
2024-07-17 22:26:49 - LocalDate local_date
2024-07-17 22:26:49 - LocalDateTime local_datetime
2024-07-17 22:26:49 - LocalTime local_time
2024-07-17 22:26:49 - Timestamp localtime
2024-07-17 22:26:49 - Timestamp localtimestamp
2024-07-17 22:26:49 - Integer locate(STRING pattern, STRING string[, INTEGER start])
2024-07-17 22:26:49 - Double log(NUMERIC arg0[, NUMERIC arg1])
2024-07-17 22:26:49 - Double log10(NUMERIC arg)
2024-07-17 22:26:49 - Double log2(NUMERIC arg)
2024-07-17 22:26:49 - String lower(STRING string)
2024-07-17 22:26:49 - String lpad(string, length[, padding])
2024-07-17 22:26:49 - String ltrim(STRING string[, STRING characters])
2024-07-17 22:26:49 - Date makedate(INTEGER year, INTEGER dayofyear)
2024-07-17 22:26:49 - Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2024-07-17 22:26:49 - max(COMPARABLE arg)
2024-07-17 22:26:49 - String md5(arg)
2024-07-17 22:26:49 - Integer microsecond(TIME arg)
2024-07-17 22:26:49 - min(COMPARABLE arg)
2024-07-17 22:26:49 - Integer minute(TIME arg)
2024-07-17 22:26:49 - Integer mod(INTEGER arg0, INTEGER arg1)
2024-07-17 22:26:49 - Integer month(DATE arg)
2024-07-17 22:26:49 - String monthname(DATE arg)
2024-07-17 22:26:49 - Timestamp now()
2024-07-17 22:26:49 - nullif(arg0, arg1)
2024-07-17 22:26:49 - Integer octet_length(STRING_OR_CLOB arg)
2024-07-17 22:26:49 - OffsetDateTime offset datetime
2024-07-17 22:26:49 - OffsetDateTime offset_datetime
2024-07-17 22:26:49 - String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2024-07-17 22:26:49 - String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2024-07-17 22:26:49 - Double pi
2024-07-17 22:26:49 - Integer position(STRING pattern in STRING string)
2024-07-17 22:26:49 - Double power(NUMERIC arg0, NUMERIC arg1)
2024-07-17 22:26:49 - Integer quarter(DATE arg)
2024-07-17 22:26:49 - Double radians(NUMERIC arg)
2024-07-17 22:26:49 - Double rand([INTEGER seed])
2024-07-17 22:26:49 - String repeat(STRING string, INTEGER times)
2024-07-17 22:26:49 - String replace(STRING string, STRING pattern, STRING replacement)
2024-07-17 22:26:49 - String reverse(STRING arg)
2024-07-17 22:26:49 - String right(STRING string, INTEGER length)
2024-07-17 22:26:49 - round(NUMERIC number[, INTEGER places])
2024-07-17 22:26:49 - String rpad(string, length[, padding])
2024-07-17 22:26:49 - String rtrim(STRING string[, STRING characters])
2024-07-17 22:26:49 - Integer second(TIME arg)
2024-07-17 22:26:49 - String sha(arg)
2024-07-17 22:26:49 - String sha1(arg)
2024-07-17 22:26:49 - String sha2(arg0, arg1)
2024-07-17 22:26:49 - Integer sign(NUMERIC arg)
2024-07-17 22:26:49 - Double sin(NUMERIC arg)
2024-07-17 22:26:49 - Double sinh(NUMERIC arg)
2024-07-17 22:26:49 - String soundex(arg)
2024-07-17 22:26:49 - String space(INTEGER arg)
2024-07-17 22:26:49 - Object sql
2024-07-17 22:26:49 - Double sqrt(NUMERIC arg)
2024-07-17 22:26:49 - Double stddev(NUMERIC arg)
2024-07-17 22:26:49 - Double stddev_pop(NUMERIC arg)
2024-07-17 22:26:49 - Double stddev_samp(NUMERIC arg)
2024-07-17 22:26:49 - String str(arg)
2024-07-17 22:26:49 - subdate(DATE datetime, INTEGER days)
2024-07-17 22:26:49 - String substr(STRING string, INTEGER start[, INTEGER length])
2024-07-17 22:26:49 - String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2024-07-17 22:26:49 - subtime(TIME datetime, TIME time)
2024-07-17 22:26:49 - sum(arg)
2024-07-17 22:26:49 - Timestamp sysdate()
2024-07-17 22:26:49 - Double tan(NUMERIC arg)
2024-07-17 22:26:49 - Double tanh(NUMERIC arg)
2024-07-17 22:26:49 - String time(arg)
2024-07-17 22:26:49 - Timestamp timestamp(arg0[, arg1])
2024-07-17 22:26:49 - timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2024-07-17 22:26:49 - Long|Double timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2024-07-17 22:26:49 - String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2024-07-17 22:26:49 - trunc( ... )
2024-07-17 22:26:49 - truncate( ... )
2024-07-17 22:26:49 - String upper(STRING string)
2024-07-17 22:26:49 - Date utc_date
2024-07-17 22:26:49 - Time utc_time
2024-07-17 22:26:49 - Timestamp utc_timestamp
2024-07-17 22:26:49 - Double var_pop(NUMERIC arg)
2024-07-17 22:26:49 - Double var_samp(NUMERIC arg)
2024-07-17 22:26:49 - Double variance(NUMERIC arg)
2024-07-17 22:26:49 - Integer week(DATE arg)
2024-07-17 22:26:49 - Integer year(DATE arg)
2024-07-17 22:26:49 - Starting QueryInterpretationCache(2048)
2024-07-17 22:26:49 - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2024-07-17 22:26:49 - Configured EntityCopyObserver strategy: disallow
2024-07-17 22:26:49 - Not known whether passed class name [com.example.taskmanagement.model.User] is safe
2024-07-17 22:26:49 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.User
2024-07-17 22:26:49 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.User]: private accessor [email]
2024-07-17 22:26:49 - Not known whether passed class name [com.example.taskmanagement.model.Task] is safe
2024-07-17 22:26:49 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.taskmanagement.model.Task
2024-07-17 22:26:49 - HHH000513: Unable to create the ReflectionOptimizer for [com.example.taskmanagement.model.Task]: private accessor [category]
2024-07-17 22:26:49 - Skipping collection (re)creation - com.example.taskmanagement.model.User.tasks
2024-07-17 22:26:49 - Skipping collection row deletions - com.example.taskmanagement.model.User.tasks
2024-07-17 22:26:49 - Skipping collection removals - com.example.taskmanagement.model.User.tasks
2024-07-17 22:26:49 - Starting post-init callbacks
2024-07-17 22:26:49 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 22:26:49 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks)#finishInitialization
2024-07-17 22:26:49 - Starting PostInitCallbackEntry : PluralAttributeMapping(com.example.taskmanagement.model.User.tasks) - key descriptor
2024-07-17 22:26:49 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.User) `staticFetchableList` generator
2024-07-17 22:26:49 - Starting PostInitCallbackEntry : To-one key - NavigableRole[com.example.taskmanagement.model.Task.user]
2024-07-17 22:26:49 - Starting PostInitCallbackEntry : Entity(com.example.taskmanagement.model.Task) `staticFetchableList` generator
2024-07-17 22:26:49 - Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[com.example.taskmanagement.model.User.tasks#{element}]) - element descriptor
2024-07-17 22:26:49 - Created new SQL alias : u1_0
2024-07-17 22:26:49 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User)] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 22:26:49 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User]
 |  +-BasicFetch [com.example.taskmanagement.model.User.email]
 |  +-BasicFetch [com.example.taskmanagement.model.User.password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User.tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User.username]

2024-07-17 22:26:49 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 22:26:49 - Static SQL for entity: com.example.taskmanagement.model.User
2024-07-17 22:26:49 -  Version select: select id from users where id=?
2024-07-17 22:26:49 -  Insert (0): insert into users (email,password,username) values (?,?,?)
2024-07-17 22:26:49 -  Update (0): update users set email=?,password=?,username=? where id=?
2024-07-17 22:26:49 -  Delete (0): delete from users where id=?
2024-07-17 22:26:49 - Created new SQL alias : t1_0
2024-07-17 22:26:49 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task)] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:26:49 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@24bc06dd] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:26:49 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task.updatedAt]
 |  \-EntityDelayedFetchImpl [com.example.taskmanagement.model.Task.user]

2024-07-17 22:26:49 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task.user) {
            }
          }
        }
      }
    }

2024-07-17 22:26:49 - Static SQL for entity: com.example.taskmanagement.model.Task
2024-07-17 22:26:49 -  Version select: select id from task where id=?
2024-07-17 22:26:49 -  Insert (0): insert into task (category,created_at,description,priority,title,updated_at,user_id) values (?,?,?,?,?,?,?)
2024-07-17 22:26:49 -  Update (0): update task set category=?,created_at=?,description=?,priority=?,title=?,updated_at=?,user_id=? where id=?
2024-07-17 22:26:49 -  Delete (0): delete from task where id=?
2024-07-17 22:26:49 - Created new SQL alias : t1_0
2024-07-17 22:26:49 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1e1d813a] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks] for NavigablePath [com.example.taskmanagement.model.User.tasks] 
2024-07-17 22:26:49 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User.tasks.{element})] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}] 
2024-07-17 22:26:49 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c120b00] with identifierForTableGroup [com.example.taskmanagement.model.User.tasks.{element}.user] for NavigablePath [com.example.taskmanagement.model.User.tasks.{element}.user] 
2024-07-17 22:26:49 - DomainResult Graph:
 \-CollectionDomainResult [com.example.taskmanagement.model.User.tasks]

2024-07-17 22:26:49 - SQL AST Tree:
    SelectStatement {
      FromClause {
        OneToManyTableGroup (t1 : com.example.taskmanagement.model.User.tasks) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.User.tasks.{element}.user) {
            }
          }
        }
      }
    }

2024-07-17 22:26:49 - Static SQL for collection: com.example.taskmanagement.model.User.tasks
2024-07-17 22:26:49 - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-17 22:26:49 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4a45ca1c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3c7f8c25]
2024-07-17 22:26:49 - Checking 0 named HQL queries
2024-07-17 22:26:49 - Checking 0 named SQL queries
2024-07-17 22:26:49 - No alter strings for table : task
2024-07-17 22:26:49 - No alter strings for table : users
2024-07-17 22:26:49 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3b6c55b6
2024-07-17 22:26:49 - Registering SessionFactory: d04e2400-23f9-4a48-be04-0eaca9da1e05 (<unnamed>)
2024-07-17 22:26:49 - Not binding SessionFactory to JNDI, no JNDI name configured
2024-07-17 22:26:49 - Instantiated SessionFactory
2024-07-17 22:26:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-17 22:26:49 - Statistics initialized [enabled=false]
2024-07-17 22:26:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 22:26:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 22:26:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 22:26:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 22:26:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 22:26:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 22:26:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 22:26:49 - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:309)
	at org.hibernate.internal.AbstractSharedSessionContract.buildNamedQuery(AbstractSharedSessionContract.java:1109)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:987)
	at org.hibernate.internal.AbstractSharedSessionContract.createNamedQuery(AbstractSharedSessionContract.java:140)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:364)
	at jdk.proxy2/jdk.proxy2.$Proxy139.createNamedQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.NamedQuery.hasNamedQuery(NamedQuery.java:112)
	at org.springframework.data.jpa.repository.query.NamedQuery.lookupFrom(NamedQuery.java:138)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:180)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:252)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1421)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.example.taskmanagement.TaskmanagementApplication.main(TaskmanagementApplication.java:10)
2024-07-17 22:26:49 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-17 22:26:50 - 

Using generated security password: bf36805a-5041-44b3-9369-5ae13670109a

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-07-17 22:26:50 - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-07-17 22:26:50 - 12 mappings in 'requestMappingHandlerMapping'
2024-07-17 22:26:50 - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
2024-07-17 22:26:50 - Exposing 14 endpoints beneath base path '/actuator'
2024-07-17 22:26:50 - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-17 22:26:50 - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-07-17 22:26:50 - ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-07-17 22:26:50 - Starting ProtocolHandler ["http-nio-8080"]
2024-07-17 22:26:50 - Tomcat started on port 8080 (http) with context path '/'
2024-07-17 22:26:50 - Started TaskmanagementApplication in 4.959 seconds (process running for 5.435)
2024-07-17 22:26:51 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-17 22:26:51 - Initializing Servlet 'dispatcherServlet'
2024-07-17 22:26:51 - Detected StandardServletMultipartResolver
2024-07-17 22:26:51 - Detected AcceptHeaderLocaleResolver
2024-07-17 22:26:51 - Detected FixedThemeResolver
2024-07-17 22:26:51 - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@372b2573
2024-07-17 22:26:51 - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6d3dc0c5
2024-07-17 22:26:51 - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-07-17 22:26:51 - Completed initialization in 1 ms
2024-07-17 22:26:51 - Securing GET /api/tasks?userId=null
2024-07-17 22:26:51 - Secured GET /api/tasks?userId=null
2024-07-17 22:26:51 - GET "/api/tasks?userId=null", parameters={masked}
2024-07-17 22:26:51 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:26:51 - Could not resolve parameter [0] in public java.util.List<com.example.taskmanagement.dto.TaskDTO> com.example.taskmanagement.controller.TaskController.getTasks(java.lang.Long,java.lang.String,java.lang.String,java.lang.String): Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"
2024-07-17 22:26:51 - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"]
2024-07-17 22:26:51 - Completed 400 BAD_REQUEST
2024-07-17 22:26:51 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:26:51 - Securing GET /error?userId=null
2024-07-17 22:26:51 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:26:51 - Pre-authenticated entry point called. Rejecting access
2024-07-17 22:26:51 - Securing GET /api/tasks?userId=null
2024-07-17 22:26:51 - Secured GET /api/tasks?userId=null
2024-07-17 22:26:51 - GET "/api/tasks?userId=null", parameters={masked}
2024-07-17 22:26:51 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:26:51 - Could not resolve parameter [0] in public java.util.List<com.example.taskmanagement.dto.TaskDTO> com.example.taskmanagement.controller.TaskController.getTasks(java.lang.Long,java.lang.String,java.lang.String,java.lang.String): Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"
2024-07-17 22:26:51 - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"]
2024-07-17 22:26:51 - Completed 400 BAD_REQUEST
2024-07-17 22:26:51 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:26:51 - Securing GET /error?userId=null
2024-07-17 22:26:51 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:26:51 - Pre-authenticated entry point called. Rejecting access
2024-07-17 22:27:07 - Securing OPTIONS /api/users/login
2024-07-17 22:27:07 - Securing POST /api/users/login
2024-07-17 22:27:07 - Secured POST /api/users/login
2024-07-17 22:27:07 - POST "/api/users/login", parameters={}
2024-07-17 22:27:07 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-17 22:27:07 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@1e48613a]
2024-07-17 22:27:07 - Created new SQL alias : u1_0
2024-07-17 22:27:07 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(46444990118100))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 22:27:07 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7aee7ad6
2024-07-17 22:27:07 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(46444990118100).username) 
2024-07-17 22:27:07 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(46444990118100)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(46444990118100).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(46444990118100).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(46444990118100).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(46444990118100).username]

2024-07-17 22:27:07 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(46444990118100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 22:27:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:27:07 - Initializer list:
	  com.example.taskmanagement.model.User(46444990118100) -> EntityResultInitializer(com.example.taskmanagement.model.User(46444990118100))@1168818916 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(46444990118100).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(46444990118100).tasks)@1873011319 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:27:07 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 22:27:07 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:07 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(46444990118100)): 4
2024-07-17 22:27:07 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(46444990118100).tasks#4
2024-07-17 22:27:07 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(46444990118100)#4] : 1722016895
2024-07-17 22:27:07 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:27:07 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:27:07 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:27:07 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(46444990118100)#4
2024-07-17 22:27:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@57a08a03
2024-07-17 22:27:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:07 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@715778881 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1337352827 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@634895198)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1078046534 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:27:07 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:27:07 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:07 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:07 - Extracted JDBC value [1] - [4]
2024-07-17 22:27:07 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:27:07 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 693876921
2024-07-17 22:27:07 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:07 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1113317873
2024-07-17 22:27:07 - Extracted JDBC value [2] - [1234]
2024-07-17 22:27:07 - Extracted JDBC value [3] - [null]
2024-07-17 22:27:07 - Extracted JDBC value [4] - [1234]
2024-07-17 22:27:07 - Extracted JDBC value [5] - [1234]
2024-07-17 22:27:07 - Extracted JDBC value [6] - [1234]
2024-07-17 22:27:07 - Extracted JDBC value [7] - [null]
2024-07-17 22:27:07 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:27:07 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1113317873
2024-07-17 22:27:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@7b3e7b37
2024-07-17 22:27:07 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:07 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:07 - Extracted JDBC value [1] - [5]
2024-07-17 22:27:07 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:27:07 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 61366197
2024-07-17 22:27:07 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:07 - Extracted JDBC value [2] - [555]
2024-07-17 22:27:07 - Extracted JDBC value [3] - [null]
2024-07-17 22:27:07 - Extracted JDBC value [4] - [555]
2024-07-17 22:27:07 - Extracted JDBC value [5] - [551]
2024-07-17 22:27:07 - Extracted JDBC value [6] - [555]
2024-07-17 22:27:07 - Extracted JDBC value [7] - [null]
2024-07-17 22:27:07 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:27:07 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1113317873
2024-07-17 22:27:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@7b3e7b37
2024-07-17 22:27:07 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:27:07 - Created new SQL alias : u1_0
2024-07-17 22:27:07 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(46444990118100))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 22:27:07 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@76d2902d
2024-07-17 22:27:07 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(46444990118100).username) 
2024-07-17 22:27:07 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(46444990118100)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(46444990118100).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(46444990118100).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(46444990118100).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(46444990118100).username]

2024-07-17 22:27:07 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(46444990118100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 22:27:07 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:27:07 - Initializer list:
	  com.example.taskmanagement.model.User(46444990118100) -> EntityResultInitializer(com.example.taskmanagement.model.User(46444990118100))@2126623536 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(46444990118100).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(46444990118100).tasks)@477103933 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:27:07 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 22:27:07 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:07 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(46444990118100)): 4
2024-07-17 22:27:07 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(46444990118100).tasks#4
2024-07-17 22:27:07 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@7356b78a
2024-07-17 22:27:07 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:27:07 - Writing [{message=Login successful!, userId=4}]
2024-07-17 22:27:07 - Completed 200 OK
2024-07-17 22:27:07 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:27:11 - Securing GET /api/tasks?userId=4
2024-07-17 22:27:11 - Secured GET /api/tasks?userId=4
2024-07-17 22:27:11 - GET "/api/tasks?userId=4", parameters={masked}
2024-07-17 22:27:11 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:27:11 - Created new SQL alias : t1_0
2024-07-17 22:27:11 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(46444965883000))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:27:11 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7847059c] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:27:11 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@79fc70eb
2024-07-17 22:27:11 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(46444965883000).user(46444965938600).id) 
2024-07-17 22:27:11 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(46444965883000)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(46444965883000).user]

2024-07-17 22:27:11 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(46444965883000)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(46444965883000).user(46444965938600)) {
            }
          }
        }
      }
    }

2024-07-17 22:27:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:27:11 - Initializer list:
	  com.example.taskmanagement.model.Task(46444965883000) -> EntityResultInitializer(com.example.taskmanagement.model.Task(46444965883000))@80498102 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(46444965883000).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(46444965883000).user)@827530885 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)

2024-07-17 22:27:11 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.user_id=?
2024-07-17 22:27:11 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 4
2024-07-17 22:27:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#4] : 1340559637
2024-07-17 22:27:11 - Extracted JDBC value [7] - [4]
2024-07-17 22:27:11 - Extracted JDBC value [1] - [1234]
2024-07-17 22:27:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:27:11 - Extracted JDBC value [3] - [1234]
2024-07-17 22:27:11 - Extracted JDBC value [4] - [1234]
2024-07-17 22:27:11 - Extracted JDBC value [5] - [1234]
2024-07-17 22:27:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:27:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#4
2024-07-17 22:27:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65c74664
2024-07-17 22:27:11 - Extracted JDBC value [0] - [5]
2024-07-17 22:27:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 5
2024-07-17 22:27:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#5] : 326757306
2024-07-17 22:27:11 - Extracted JDBC value [7] - [4]
2024-07-17 22:27:11 - Extracted JDBC value [1] - [555]
2024-07-17 22:27:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:27:11 - Extracted JDBC value [3] - [555]
2024-07-17 22:27:11 - Extracted JDBC value [4] - [551]
2024-07-17 22:27:11 - Extracted JDBC value [5] - [555]
2024-07-17 22:27:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:27:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#5
2024-07-17 22:27:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@65c74664
2024-07-17 22:27:11 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:27:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:11 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@292262883 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@575125655 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:27:11 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:27:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:27:11 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1307509866
2024-07-17 22:27:11 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:27:11 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:27:11 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:27:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:27:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4b90076c
2024-07-17 22:27:11 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:27:11 - Writing [[com.example.taskmanagement.dto.TaskDTO@4c1b23b, com.example.taskmanagement.dto.TaskDTO@1ee2bc03]]
2024-07-17 22:27:11 - Completed 200 OK
2024-07-17 22:27:11 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:27:11 - Securing GET /api/tasks?userId=4
2024-07-17 22:27:11 - Secured GET /api/tasks?userId=4
2024-07-17 22:27:11 - GET "/api/tasks?userId=4", parameters={masked}
2024-07-17 22:27:11 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:27:11 - Created new SQL alias : t1_0
2024-07-17 22:27:11 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(46444965883000))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:27:11 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@50ecc5d1] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:27:11 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@11d1cfea
2024-07-17 22:27:11 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(46444965883000).user(46444965938600).id) 
2024-07-17 22:27:11 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(46444965883000)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(46444965883000).user]

2024-07-17 22:27:11 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(46444965883000)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(46444965883000).user(46444965938600)) {
            }
          }
        }
      }
    }

2024-07-17 22:27:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:27:11 - Initializer list:
	  com.example.taskmanagement.model.Task(46444965883000) -> EntityResultInitializer(com.example.taskmanagement.model.Task(46444965883000))@1635161835 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(46444965883000).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(46444965883000).user)@112698836 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)

2024-07-17 22:27:11 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.user_id=?
2024-07-17 22:27:11 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 4
2024-07-17 22:27:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#4] : 638656541
2024-07-17 22:27:11 - Extracted JDBC value [7] - [4]
2024-07-17 22:27:11 - Extracted JDBC value [1] - [1234]
2024-07-17 22:27:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:27:11 - Extracted JDBC value [3] - [1234]
2024-07-17 22:27:11 - Extracted JDBC value [4] - [1234]
2024-07-17 22:27:11 - Extracted JDBC value [5] - [1234]
2024-07-17 22:27:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:27:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#4
2024-07-17 22:27:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1db3a80e
2024-07-17 22:27:11 - Extracted JDBC value [0] - [5]
2024-07-17 22:27:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 5
2024-07-17 22:27:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#5] : 881682156
2024-07-17 22:27:11 - Extracted JDBC value [7] - [4]
2024-07-17 22:27:11 - Extracted JDBC value [1] - [555]
2024-07-17 22:27:11 - Extracted JDBC value [2] - [null]
2024-07-17 22:27:11 - Extracted JDBC value [3] - [555]
2024-07-17 22:27:11 - Extracted JDBC value [4] - [551]
2024-07-17 22:27:11 - Extracted JDBC value [5] - [555]
2024-07-17 22:27:11 - Extracted JDBC value [6] - [null]
2024-07-17 22:27:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#5
2024-07-17 22:27:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1db3a80e
2024-07-17 22:27:11 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:27:11 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:11 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1105615562 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1091922208 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:27:11 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:27:11 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:27:11 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:11 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1203200530
2024-07-17 22:27:11 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:27:11 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:27:11 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:27:11 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:27:11 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3506c878
2024-07-17 22:27:11 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:27:11 - Writing [[com.example.taskmanagement.dto.TaskDTO@5fcdb7b8, com.example.taskmanagement.dto.TaskDTO@789677cb]]
2024-07-17 22:27:11 - Completed 200 OK
2024-07-17 22:27:11 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:27:25 - Securing GET /api/users/4
2024-07-17 22:27:25 - Secured GET /api/users/4
2024-07-17 22:27:25 - GET "/api/users/4", parameters={}
2024-07-17 22:27:25 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:27:25 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:27:25 - begin
2024-07-17 22:27:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:25 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@738718552 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@2039658541 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:27:25 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:27:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:27:25 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1757593893
2024-07-17 22:27:25 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:27:25 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:27:25 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:27:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:27:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5c1fac6
2024-07-17 22:27:25 - committing
2024-07-17 22:27:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:25 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1345890900 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@971613817 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@634895198)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@874818479 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:27:25 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:27:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:25 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:25 - Extracted JDBC value [1] - [4]
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 1981546689
2024-07-17 22:27:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:25 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@75325376
2024-07-17 22:27:25 - Extracted JDBC value [2] - [1234]
2024-07-17 22:27:25 - Extracted JDBC value [3] - [null]
2024-07-17 22:27:25 - Extracted JDBC value [4] - [1234]
2024-07-17 22:27:25 - Extracted JDBC value [5] - [1234]
2024-07-17 22:27:25 - Extracted JDBC value [6] - [1234]
2024-07-17 22:27:25 - Extracted JDBC value [7] - [null]
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:27:25 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@75325376
2024-07-17 22:27:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@67f4a47e
2024-07-17 22:27:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:25 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:25 - Extracted JDBC value [1] - [5]
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 519154249
2024-07-17 22:27:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:25 - Extracted JDBC value [2] - [555]
2024-07-17 22:27:25 - Extracted JDBC value [3] - [null]
2024-07-17 22:27:25 - Extracted JDBC value [4] - [555]
2024-07-17 22:27:25 - Extracted JDBC value [5] - [551]
2024-07-17 22:27:25 - Extracted JDBC value [6] - [555]
2024-07-17 22:27:25 - Extracted JDBC value [7] - [null]
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:27:25 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@75325376
2024-07-17 22:27:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@67f4a47e
2024-07-17 22:27:25 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:27:25 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:27:25 - Writing [com.example.taskmanagement.dto.UserDTO@383cebef]
2024-07-17 22:27:25 - Completed 200 OK
2024-07-17 22:27:25 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:27:25 - Securing GET /api/users/4
2024-07-17 22:27:25 - Secured GET /api/users/4
2024-07-17 22:27:25 - GET "/api/users/4", parameters={}
2024-07-17 22:27:25 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:27:25 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:27:25 - begin
2024-07-17 22:27:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:25 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1056776490 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@985838125 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:27:25 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:27:25 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:27:25 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:25 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1316320228
2024-07-17 22:27:25 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:27:25 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:27:25 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:27:25 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:27:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1fefd45e
2024-07-17 22:27:25 - committing
2024-07-17 22:27:25 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:25 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1412751211 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@2056116523 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@634895198)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@463580928 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:27:25 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:27:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:25 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:25 - Extracted JDBC value [1] - [4]
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 395983654
2024-07-17 22:27:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:25 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1636430813
2024-07-17 22:27:25 - Extracted JDBC value [2] - [1234]
2024-07-17 22:27:25 - Extracted JDBC value [3] - [null]
2024-07-17 22:27:25 - Extracted JDBC value [4] - [1234]
2024-07-17 22:27:25 - Extracted JDBC value [5] - [1234]
2024-07-17 22:27:25 - Extracted JDBC value [6] - [1234]
2024-07-17 22:27:25 - Extracted JDBC value [7] - [null]
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:27:25 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1636430813
2024-07-17 22:27:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@1d55f7a
2024-07-17 22:27:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:25 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:25 - Extracted JDBC value [1] - [5]
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 1303378423
2024-07-17 22:27:25 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:25 - Extracted JDBC value [2] - [555]
2024-07-17 22:27:25 - Extracted JDBC value [3] - [null]
2024-07-17 22:27:25 - Extracted JDBC value [4] - [555]
2024-07-17 22:27:25 - Extracted JDBC value [5] - [551]
2024-07-17 22:27:25 - Extracted JDBC value [6] - [555]
2024-07-17 22:27:25 - Extracted JDBC value [7] - [null]
2024-07-17 22:27:25 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:27:25 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1636430813
2024-07-17 22:27:25 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@1d55f7a
2024-07-17 22:27:25 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:27:25 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:27:25 - Writing [com.example.taskmanagement.dto.UserDTO@46944547]
2024-07-17 22:27:25 - Completed 200 OK
2024-07-17 22:27:25 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:27:26 - Securing GET /api/tasks?userId=4
2024-07-17 22:27:26 - Secured GET /api/tasks?userId=4
2024-07-17 22:27:26 - GET "/api/tasks?userId=4", parameters={masked}
2024-07-17 22:27:26 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:27:26 - Created new SQL alias : t1_0
2024-07-17 22:27:26 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(46444965883000))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:27:26 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@72ba6fcf] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:27:26 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@338765f4
2024-07-17 22:27:26 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(46444965883000).user(46444965938600).id) 
2024-07-17 22:27:26 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(46444965883000)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(46444965883000).user]

2024-07-17 22:27:26 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(46444965883000)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(46444965883000).user(46444965938600)) {
            }
          }
        }
      }
    }

2024-07-17 22:27:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:27:26 - Initializer list:
	  com.example.taskmanagement.model.Task(46444965883000) -> EntityResultInitializer(com.example.taskmanagement.model.Task(46444965883000))@1124227101 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(46444965883000).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(46444965883000).user)@862995766 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)

2024-07-17 22:27:26 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.user_id=?
2024-07-17 22:27:26 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 4
2024-07-17 22:27:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#4] : 429708634
2024-07-17 22:27:26 - Extracted JDBC value [7] - [4]
2024-07-17 22:27:26 - Extracted JDBC value [1] - [1234]
2024-07-17 22:27:26 - Extracted JDBC value [2] - [null]
2024-07-17 22:27:26 - Extracted JDBC value [3] - [1234]
2024-07-17 22:27:26 - Extracted JDBC value [4] - [1234]
2024-07-17 22:27:26 - Extracted JDBC value [5] - [1234]
2024-07-17 22:27:26 - Extracted JDBC value [6] - [null]
2024-07-17 22:27:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#4
2024-07-17 22:27:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28746aaa
2024-07-17 22:27:26 - Extracted JDBC value [0] - [5]
2024-07-17 22:27:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 5
2024-07-17 22:27:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#5] : 383512244
2024-07-17 22:27:26 - Extracted JDBC value [7] - [4]
2024-07-17 22:27:26 - Extracted JDBC value [1] - [555]
2024-07-17 22:27:26 - Extracted JDBC value [2] - [null]
2024-07-17 22:27:26 - Extracted JDBC value [3] - [555]
2024-07-17 22:27:26 - Extracted JDBC value [4] - [551]
2024-07-17 22:27:26 - Extracted JDBC value [5] - [555]
2024-07-17 22:27:26 - Extracted JDBC value [6] - [null]
2024-07-17 22:27:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#5
2024-07-17 22:27:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@28746aaa
2024-07-17 22:27:26 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:27:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:26 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1558134202 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1467297201 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:27:26 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:27:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:27:26 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 676620989
2024-07-17 22:27:26 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:27:26 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:27:26 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:27:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:27:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5e15083f
2024-07-17 22:27:26 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:27:26 - Writing [[com.example.taskmanagement.dto.TaskDTO@456ecc78, com.example.taskmanagement.dto.TaskDTO@50929ac]]
2024-07-17 22:27:26 - Completed 200 OK
2024-07-17 22:27:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:27:26 - Securing GET /api/tasks?userId=4
2024-07-17 22:27:26 - Secured GET /api/tasks?userId=4
2024-07-17 22:27:26 - GET "/api/tasks?userId=4", parameters={masked}
2024-07-17 22:27:26 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:27:26 - Created new SQL alias : t1_0
2024-07-17 22:27:26 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(46444965883000))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:27:26 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4582bbb5] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:27:26 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@4bfb18e
2024-07-17 22:27:26 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(46444965883000).user(46444965938600).id) 
2024-07-17 22:27:26 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(46444965883000)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(46444965883000).user]

2024-07-17 22:27:26 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(46444965883000)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(46444965883000).user(46444965938600)) {
            }
          }
        }
      }
    }

2024-07-17 22:27:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:27:26 - Initializer list:
	  com.example.taskmanagement.model.Task(46444965883000) -> EntityResultInitializer(com.example.taskmanagement.model.Task(46444965883000))@1947048853 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(46444965883000).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(46444965883000).user)@1965168376 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)

2024-07-17 22:27:26 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.user_id=?
2024-07-17 22:27:26 - Extracted JDBC value [0] - [4]
2024-07-17 22:27:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 4
2024-07-17 22:27:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#4] : 190209040
2024-07-17 22:27:26 - Extracted JDBC value [7] - [4]
2024-07-17 22:27:26 - Extracted JDBC value [1] - [1234]
2024-07-17 22:27:26 - Extracted JDBC value [2] - [null]
2024-07-17 22:27:26 - Extracted JDBC value [3] - [1234]
2024-07-17 22:27:26 - Extracted JDBC value [4] - [1234]
2024-07-17 22:27:26 - Extracted JDBC value [5] - [1234]
2024-07-17 22:27:26 - Extracted JDBC value [6] - [null]
2024-07-17 22:27:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#4
2024-07-17 22:27:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e261e54
2024-07-17 22:27:26 - Extracted JDBC value [0] - [5]
2024-07-17 22:27:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 5
2024-07-17 22:27:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#5] : 568532478
2024-07-17 22:27:26 - Extracted JDBC value [7] - [4]
2024-07-17 22:27:26 - Extracted JDBC value [1] - [555]
2024-07-17 22:27:26 - Extracted JDBC value [2] - [null]
2024-07-17 22:27:26 - Extracted JDBC value [3] - [555]
2024-07-17 22:27:26 - Extracted JDBC value [4] - [551]
2024-07-17 22:27:26 - Extracted JDBC value [5] - [555]
2024-07-17 22:27:26 - Extracted JDBC value [6] - [null]
2024-07-17 22:27:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#5
2024-07-17 22:27:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6e261e54
2024-07-17 22:27:26 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:27:26 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:27:26 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1987807153 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@678556564 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:27:26 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:27:26 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:27:26 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:27:26 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1393586127
2024-07-17 22:27:26 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:27:26 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:27:26 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:27:26 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:27:26 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4593e237
2024-07-17 22:27:26 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:27:26 - Writing [[com.example.taskmanagement.dto.TaskDTO@d83677d, com.example.taskmanagement.dto.TaskDTO@2f206c2c]]
2024-07-17 22:27:26 - Completed 200 OK
2024-07-17 22:27:26 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:27 - Securing GET /api/tasks?userId=null
2024-07-17 22:47:27 - Secured GET /api/tasks?userId=null
2024-07-17 22:47:27 - GET "/api/tasks?userId=null", parameters={masked}
2024-07-17 22:47:27 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:47:27 - Could not resolve parameter [0] in public java.util.List<com.example.taskmanagement.dto.TaskDTO> com.example.taskmanagement.controller.TaskController.getTasks(java.lang.Long,java.lang.String,java.lang.String,java.lang.String): Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"
2024-07-17 22:47:27 - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"]
2024-07-17 22:47:27 - Completed 400 BAD_REQUEST
2024-07-17 22:47:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:27 - Securing GET /error?userId=null
2024-07-17 22:47:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:27 - Pre-authenticated entry point called. Rejecting access
2024-07-17 22:47:27 - Securing GET /api/tasks?userId=null
2024-07-17 22:47:27 - Secured GET /api/tasks?userId=null
2024-07-17 22:47:27 - GET "/api/tasks?userId=null", parameters={masked}
2024-07-17 22:47:27 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:47:27 - Could not resolve parameter [0] in public java.util.List<com.example.taskmanagement.dto.TaskDTO> com.example.taskmanagement.controller.TaskController.getTasks(java.lang.Long,java.lang.String,java.lang.String,java.lang.String): Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"
2024-07-17 22:47:27 - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "null"]
2024-07-17 22:47:27 - Completed 400 BAD_REQUEST
2024-07-17 22:47:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:27 - Securing GET /error?userId=null
2024-07-17 22:47:27 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:27 - Pre-authenticated entry point called. Rejecting access
2024-07-17 22:47:40 - Securing POST /api/users/login
2024-07-17 22:47:40 - Secured POST /api/users/login
2024-07-17 22:47:40 - POST "/api/users/login", parameters={}
2024-07-17 22:47:40 - Mapped to com.example.taskmanagement.controller.UserController#loginUser(User)
2024-07-17 22:47:40 - Read "application/json;charset=UTF-8" to [com.example.taskmanagement.model.User@493a556e]
2024-07-17 22:47:40 - Created new SQL alias : u1_0
2024-07-17 22:47:40 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(46444990118100))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 22:47:40 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@698f2821
2024-07-17 22:47:40 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(46444990118100).username) 
2024-07-17 22:47:40 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(46444990118100)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(46444990118100).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(46444990118100).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(46444990118100).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(46444990118100).username]

2024-07-17 22:47:40 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(46444990118100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 22:47:40 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:47:40 - Initializer list:
	  com.example.taskmanagement.model.User(46444990118100) -> EntityResultInitializer(com.example.taskmanagement.model.User(46444990118100))@1884622028 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(46444990118100).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(46444990118100).tasks)@1619782855 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:47:40 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 22:47:40 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:40 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(46444990118100)): 4
2024-07-17 22:47:40 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(46444990118100).tasks#4
2024-07-17 22:47:40 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User(46444990118100)#4] : 2121970517
2024-07-17 22:47:40 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:47:40 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:47:40 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:47:40 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User(46444990118100)#4
2024-07-17 22:47:40 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4f0dfde7
2024-07-17 22:47:40 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:47:40 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1304367985 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1212072850 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@634895198)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@1753021879 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:47:40 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:47:40 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:40 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:40 - Extracted JDBC value [1] - [4]
2024-07-17 22:47:40 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:47:40 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 576919484
2024-07-17 22:47:40 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:40 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1101567369
2024-07-17 22:47:40 - Extracted JDBC value [2] - [1234]
2024-07-17 22:47:40 - Extracted JDBC value [3] - [null]
2024-07-17 22:47:40 - Extracted JDBC value [4] - [1234]
2024-07-17 22:47:40 - Extracted JDBC value [5] - [1234]
2024-07-17 22:47:40 - Extracted JDBC value [6] - [1234]
2024-07-17 22:47:40 - Extracted JDBC value [7] - [null]
2024-07-17 22:47:40 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:47:40 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1101567369
2024-07-17 22:47:40 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@2d7dc702
2024-07-17 22:47:40 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:40 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:40 - Extracted JDBC value [1] - [5]
2024-07-17 22:47:40 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:47:40 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 1916117615
2024-07-17 22:47:40 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:40 - Extracted JDBC value [2] - [555]
2024-07-17 22:47:40 - Extracted JDBC value [3] - [null]
2024-07-17 22:47:40 - Extracted JDBC value [4] - [555]
2024-07-17 22:47:40 - Extracted JDBC value [5] - [551]
2024-07-17 22:47:40 - Extracted JDBC value [6] - [555]
2024-07-17 22:47:40 - Extracted JDBC value [7] - [null]
2024-07-17 22:47:40 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:47:40 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1101567369
2024-07-17 22:47:40 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@2d7dc702
2024-07-17 22:47:40 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:47:40 - Created new SQL alias : u1_0
2024-07-17 22:47:40 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.User(46444990118100))] with identifierForTableGroup [com.example.taskmanagement.model.User] for NavigablePath [com.example.taskmanagement.model.User] 
2024-07-17 22:47:40 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@339954d5
2024-07-17 22:47:40 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.User(46444990118100).username) 
2024-07-17 22:47:40 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.User(46444990118100)]
 |  +-BasicFetch [com.example.taskmanagement.model.User(46444990118100).email]
 |  +-BasicFetch [com.example.taskmanagement.model.User(46444990118100).password]
 |  +-DelayedCollectionFetch [com.example.taskmanagement.model.User(46444990118100).tasks]
 |  \-BasicFetch [com.example.taskmanagement.model.User(46444990118100).username]

2024-07-17 22:47:40 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : com.example.taskmanagement.model.User(46444990118100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2024-07-17 22:47:40 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:47:40 - Initializer list:
	  com.example.taskmanagement.model.User(46444990118100) -> EntityResultInitializer(com.example.taskmanagement.model.User(46444990118100))@1100972874 (SingleTableEntityPersister(com.example.taskmanagement.model.User))
	  com.example.taskmanagement.model.User(46444990118100).tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User(46444990118100).tasks)@945379408 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:47:40 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.username=?
2024-07-17 22:47:40 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:40 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User(46444990118100)): 4
2024-07-17 22:47:40 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User(46444990118100).tasks#4
2024-07-17 22:47:40 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@68864b14
2024-07-17 22:47:40 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:47:40 - Writing [{message=Login successful!, userId=4}]
2024-07-17 22:47:40 - Completed 200 OK
2024-07-17 22:47:40 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:42 - Securing GET /api/tasks?userId=4
2024-07-17 22:47:42 - Secured GET /api/tasks?userId=4
2024-07-17 22:47:42 - GET "/api/tasks?userId=4", parameters={masked}
2024-07-17 22:47:42 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:47:42 - Created new SQL alias : t1_0
2024-07-17 22:47:42 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(46444965883000))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:47:42 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5da1b1ec] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:47:42 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@7bd035a9
2024-07-17 22:47:42 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(46444965883000).user(46444965938600).id) 
2024-07-17 22:47:42 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(46444965883000)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(46444965883000).user]

2024-07-17 22:47:42 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(46444965883000)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(46444965883000).user(46444965938600)) {
            }
          }
        }
      }
    }

2024-07-17 22:47:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:47:42 - Initializer list:
	  com.example.taskmanagement.model.Task(46444965883000) -> EntityResultInitializer(com.example.taskmanagement.model.Task(46444965883000))@1824894880 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(46444965883000).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(46444965883000).user)@504024116 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)

2024-07-17 22:47:42 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.user_id=?
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 4
2024-07-17 22:47:42 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#4] : 211899731
2024-07-17 22:47:42 - Extracted JDBC value [7] - [4]
2024-07-17 22:47:42 - Extracted JDBC value [1] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [null]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [4] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [5] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [6] - [null]
2024-07-17 22:47:42 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#4
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4402439f
2024-07-17 22:47:42 - Extracted JDBC value [0] - [5]
2024-07-17 22:47:42 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 5
2024-07-17 22:47:42 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#5] : 723507639
2024-07-17 22:47:42 - Extracted JDBC value [7] - [4]
2024-07-17 22:47:42 - Extracted JDBC value [1] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [null]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [4] - [551]
2024-07-17 22:47:42 - Extracted JDBC value [5] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [6] - [null]
2024-07-17 22:47:42 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#5
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4402439f
2024-07-17 22:47:42 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:47:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:47:42 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@580581980 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1959938859 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:47:42 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:47:42 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:47:42 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:42 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1226853104
2024-07-17 22:47:42 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:47:42 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@21a566ac
2024-07-17 22:47:42 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:47:42 - Writing [[com.example.taskmanagement.dto.TaskDTO@3ea99292, com.example.taskmanagement.dto.TaskDTO@7ffa2c10]]
2024-07-17 22:47:42 - Completed 200 OK
2024-07-17 22:47:42 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:42 - Securing GET /api/tasks?userId=4
2024-07-17 22:47:42 - Secured GET /api/tasks?userId=4
2024-07-17 22:47:42 - GET "/api/tasks?userId=4", parameters={masked}
2024-07-17 22:47:42 - Mapped to com.example.taskmanagement.controller.TaskController#getTasks(Long, String, String, String)
2024-07-17 22:47:42 - Created new SQL alias : t1_0
2024-07-17 22:47:42 - Registration of TableGroup [StandardTableGroup(com.example.taskmanagement.model.Task(46444965883000))] with identifierForTableGroup [com.example.taskmanagement.model.Task] for NavigablePath [com.example.taskmanagement.model.Task] 
2024-07-17 22:47:42 - Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5aab712e] with identifierForTableGroup [com.example.taskmanagement.model.Task.user] for NavigablePath [com.example.taskmanagement.model.Task.user] 
2024-07-17 22:47:42 - Determining mapping-model type for SqmParameter : org.hibernate.query.sqm.tree.expression.SqmJpaCriteriaParameterWrapper@29cdf3a4
2024-07-17 22:47:42 - Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.example.taskmanagement.model.Task(46444965883000).user(46444965938600).id) 
2024-07-17 22:47:42 - DomainResult Graph:
 \-EntityResultImpl [com.example.taskmanagement.model.Task(46444965883000)]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).category]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).createdAt]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).description]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).priority]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).title]
 |  +-BasicFetch [com.example.taskmanagement.model.Task(46444965883000).updatedAt]
 |  \-CircularFetchImpl [com.example.taskmanagement.model.Task(46444965883000).user]

2024-07-17 22:47:42 - SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (t1 : com.example.taskmanagement.model.Task(46444965883000)) {
          primaryTableReference : task as t1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : com.example.taskmanagement.model.Task(46444965883000).user(46444965938600)) {
            }
          }
        }
      }
    }

2024-07-17 22:47:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2024-07-17 22:47:42 - Initializer list:
	  com.example.taskmanagement.model.Task(46444965883000) -> EntityResultInitializer(com.example.taskmanagement.model.Task(46444965883000))@867783117 (SingleTableEntityPersister(com.example.taskmanagement.model.Task))
	  com.example.taskmanagement.model.Task(46444965883000).user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.Task(46444965883000).user)@177790667 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)

2024-07-17 22:47:42 - select t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at,t1_0.user_id from task t1_0 where t1_0.user_id=?
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 4
2024-07-17 22:47:42 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#4] : 2033293328
2024-07-17 22:47:42 - Extracted JDBC value [7] - [4]
2024-07-17 22:47:42 - Extracted JDBC value [1] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [null]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [4] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [5] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [6] - [null]
2024-07-17 22:47:42 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#4
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35936f7b
2024-07-17 22:47:42 - Extracted JDBC value [0] - [5]
2024-07-17 22:47:42 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.Task(46444965883000)): 5
2024-07-17 22:47:42 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.Task(46444965883000)#5] : 1629090618
2024-07-17 22:47:42 - Extracted JDBC value [7] - [4]
2024-07-17 22:47:42 - Extracted JDBC value [1] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [null]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [4] - [551]
2024-07-17 22:47:42 - Extracted JDBC value [5] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [6] - [null]
2024-07-17 22:47:42 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.Task(46444965883000)#5
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@35936f7b
2024-07-17 22:47:42 - Initializing proxy: [com.example.taskmanagement.model.User#4]
2024-07-17 22:47:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:47:42 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1747518225 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@1181696472 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:47:42 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:47:42 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:47:42 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:42 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 977450993
2024-07-17 22:47:42 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:47:42 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@61e9cba5
2024-07-17 22:47:42 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:47:42 - Writing [[com.example.taskmanagement.dto.TaskDTO@4c9b3d98, com.example.taskmanagement.dto.TaskDTO@30ff6cab]]
2024-07-17 22:47:42 - Completed 200 OK
2024-07-17 22:47:42 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:42 - Securing GET /api/users/4
2024-07-17 22:47:42 - Secured GET /api/users/4
2024-07-17 22:47:42 - GET "/api/users/4", parameters={}
2024-07-17 22:47:42 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:47:42 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:47:42 - begin
2024-07-17 22:47:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:47:42 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1797575671 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@715488919 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:47:42 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:47:42 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:47:42 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:42 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1155224485
2024-07-17 22:47:42 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:47:42 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@12cf4bda
2024-07-17 22:47:42 - committing
2024-07-17 22:47:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:47:42 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1766794577 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@1924953267 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@634895198)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@449142949 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:47:42 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:42 - Extracted JDBC value [1] - [4]
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 1414727235
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1158405231
2024-07-17 22:47:42 - Extracted JDBC value [2] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [null]
2024-07-17 22:47:42 - Extracted JDBC value [4] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [5] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [6] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [7] - [null]
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:47:42 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1158405231
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@65a29424
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:42 - Extracted JDBC value [1] - [5]
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 1097314487
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [null]
2024-07-17 22:47:42 - Extracted JDBC value [4] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [5] - [551]
2024-07-17 22:47:42 - Extracted JDBC value [6] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [7] - [null]
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:47:42 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1158405231
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@65a29424
2024-07-17 22:47:42 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:47:42 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:47:42 - Writing [com.example.taskmanagement.dto.UserDTO@1abada5c]
2024-07-17 22:47:42 - Completed 200 OK
2024-07-17 22:47:42 - Set SecurityContextHolder to anonymous SecurityContext
2024-07-17 22:47:42 - Securing GET /api/users/4
2024-07-17 22:47:42 - Secured GET /api/users/4
2024-07-17 22:47:42 - GET "/api/users/4", parameters={}
2024-07-17 22:47:42 - Mapped to com.example.taskmanagement.controller.UserController#getUserById(Long)
2024-07-17 22:47:42 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2024-07-17 22:47:42 - begin
2024-07-17 22:47:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:47:42 - Initializer list:
	  com.example.taskmanagement.model.User.tasks -> DelayedCollectionInitializer(com.example.taskmanagement.model.User.tasks)@1932238274 (PluralAttribute(com.example.taskmanagement.model.User.tasks))
	  com.example.taskmanagement.model.User -> EntityResultInitializer(com.example.taskmanagement.model.User)@521624866 (SingleTableEntityPersister(com.example.taskmanagement.model.User))

2024-07-17 22:47:42 - select u1_0.id,u1_0.email,u1_0.password,u1_0.username from users u1_0 where u1_0.id=?
2024-07-17 22:47:42 - (EntityResultInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User): 4
2024-07-17 22:47:42 - (DelayedCollectionInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:42 - (EntityResultInitializer) Created new entity instance [com.example.taskmanagement.model.User#4] : 1330316175
2024-07-17 22:47:42 - Extracted JDBC value [1] - [ohchch001@gmail.com]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [$2a$10$VmB89K6Jx0kVYS4ivuM8kunmR/CekUg3PoClkaTlLNps5jpehFEpa]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [ohchch001]
2024-07-17 22:47:42 - (EntityResultInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User#4
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ca20f00
2024-07-17 22:47:42 - committing
2024-07-17 22:47:42 - Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
2024-07-17 22:47:42 - Initializer list:
	  com.example.taskmanagement.model.User.tasks.{element}.user -> EntityDelayedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element}.user)@1897354777 (ToOneAttributeMapping(NavigableRole[com.example.taskmanagement.model.Task.user])@1137112756)
	  com.example.taskmanagement.model.User.tasks.{element} -> EntityJoinedFetchInitializer(com.example.taskmanagement.model.User.tasks.{element})@513860051 (EntityCollectionPart(com.example.taskmanagement.model.User.tasks#{element})@634895198)
	  com.example.taskmanagement.model.User.tasks -> SetInitializer(com.example.taskmanagement.model.User.tasks)@48637704 (PluralAttribute(com.example.taskmanagement.model.User.tasks))

2024-07-17 22:47:42 - select t1_0.user_id,t1_0.id,t1_0.category,t1_0.created_at,t1_0.description,t1_0.priority,t1_0.title,t1_0.updated_at from task t1_0 where t1_0.user_id=?
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:42 - Extracted JDBC value [1] - [4]
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 4
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#4] : 218556669
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - (SetInitializer) Responsible for loading collection [com.example.taskmanagement.model.User.tasks#4] : org.hibernate.collection.spi.PersistentSet@1779476745
2024-07-17 22:47:42 - Extracted JDBC value [2] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [null]
2024-07-17 22:47:42 - Extracted JDBC value [4] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [5] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [6] - [1234]
2024-07-17 22:47:42 - Extracted JDBC value [7] - [null]
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#4
2024-07-17 22:47:42 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1779476745
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@3eeb5032
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - (SetInitializer) Current row collection key : com.example.taskmanagement.model.User.tasks#4
2024-07-17 22:47:42 - Extracted JDBC value [1] - [5]
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Hydrated EntityKey (com.example.taskmanagement.model.User.tasks.{element}): 5
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Created new entity instance [com.example.taskmanagement.model.User.tasks.{element}#5] : 167510181
2024-07-17 22:47:42 - Extracted JDBC value [0] - [4]
2024-07-17 22:47:42 - Extracted JDBC value [2] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [3] - [null]
2024-07-17 22:47:42 - Extracted JDBC value [4] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [5] - [551]
2024-07-17 22:47:42 - Extracted JDBC value [6] - [555]
2024-07-17 22:47:42 - Extracted JDBC value [7] - [null]
2024-07-17 22:47:42 - (EntityJoinedFetchInitializer) Done materializing entityInstance : com.example.taskmanagement.model.User.tasks.{element}#5
2024-07-17 22:47:42 - (SetInitializer) Reading element from row for collection [com.example.taskmanagement.model.User.tasks#4] -> org.hibernate.collection.spi.PersistentSet@1779476745
2024-07-17 22:47:42 - Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.collection.internal.CollectionAssembler@3eeb5032
2024-07-17 22:47:42 - Collection fully initialized: [com.example.taskmanagement.model.User.tasks#4]
2024-07-17 22:47:42 - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json]
2024-07-17 22:47:42 - Writing [com.example.taskmanagement.dto.UserDTO@235bcf7a]
2024-07-17 22:47:42 - Completed 200 OK
2024-07-17 22:47:42 - Set SecurityContextHolder to anonymous SecurityContext
